package Cpanel::DNS::Unbound::Workarounds::Write;

# cpanel - Cpanel/DNS/Unbound/Workarounds/Write.pm Copyright 2022 cPanel, L.L.C.
#                                                           All rights reserved.
# copyright@cpanel.net                                         http://cpanel.net
# This code is subject to the cPanel license. Unauthorized copying is prohibited

use strict;
use warnings;

use Cpanel::DNS::Unbound::Workarounds::Config ();
use Cpanel::Mkdir                             ();
use Cpanel::FileUtils::TouchFile              ();
use Cpanel::Autodie                           ();

=encoding utf-8

=head1 NAME

Cpanel::DNS::Unbound::Workarounds::Write - Keep track of unbound workarounds

=head1 SYNOPSIS

    use Cpanel::DNS::Unbound::Workarounds::Write;

    my $flags_hr = eval { Cpanel::DNS::Unbound::Workarounds::determine_workaround_config_or_die() };
    my $had_error = $@;
    warn if $had_error;

    # If we fail we clear the flags so we do not
    # hide errors in UIs
    Cpanel::DNS::Unbound::Workarounds::Write::sync_workaround_config_to_storage( $flags_hr // {} );

=head1 FUNCTIONS

=head2 sync_workaround_config_to_storage()

This function write the state of the flags hashref generated by
C<Cpanel::DNS::Unbound::Workarounds::determine_workaround_config_or_die()>
to disk so it can later be used by C<Cpanel::DNS::Unbound::Workarounds::Read::enable_workarounds_on_unbound_object>.

=cut

sub sync_workaround_config_to_storage {
    my ($flags_hr) = @_;

    Cpanel::Mkdir::ensure_directory_existence_and_mode( $Cpanel::DNS::Unbound::Workarounds::Config::DNS_FLAGS_DIR, $Cpanel::DNS::Unbound::Workarounds::Config::DNS_FLAGS_DIR_PERMS );

    my @unbound_flags                    = sort keys %Cpanel::DNS::Unbound::Workarounds::Config::UNBOUND_KEYS_TO_FLAG_FILE_NAMES;
    my @flag_files_that_should_exist     = map { $flags_hr->{$_}  ? $Cpanel::DNS::Unbound::Workarounds::Config::UNBOUND_KEYS_TO_FLAG_FILE_NAMES{$_} : () } @unbound_flags;
    my @flag_files_that_should_not_exist = map { !$flags_hr->{$_} ? $Cpanel::DNS::Unbound::Workarounds::Config::UNBOUND_KEYS_TO_FLAG_FILE_NAMES{$_} : () } @unbound_flags;
    foreach my $flag (@flag_files_that_should_exist) {
        Cpanel::FileUtils::TouchFile::touchfile("$Cpanel::DNS::Unbound::Workarounds::Config::DNS_FLAGS_DIR/$flag") or warn "Failed to create “$Cpanel::DNS::Unbound::Workarounds::Config::DNS_FLAGS_DIR/$flag”: $!";
    }
    foreach my $flag (@flag_files_that_should_not_exist) {
        Cpanel::Autodie::unlink_if_exists("$Cpanel::DNS::Unbound::Workarounds::Config::DNS_FLAGS_DIR/$flag");
    }

    return;
}

1;
