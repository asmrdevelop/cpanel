#!/usr/local/cpanel/3rdparty/bin/perl

# cpanel - scripts/check_unreliable_resolvers      Copyright 2022 cPanel, L.L.C.
#                                                           All rights reserved.
# copyright@cpanel.net                                         http://cpanel.net
# This code is subject to the cPanel license. Unauthorized copying is prohibited

#

package scripts::check_unreliable_resolvers;

use strict;

use Getopt::Long ();
use Pod::Usage   ();

use Cpanel::Resolvers::Check ();

my $ONE_DAY_IN_SECONDS = 86400;
our $NOTIFICATION_INTERVAL = $ONE_DAY_IN_SECONDS;

sub script {
    my ( $class, $argv ) = @_;

    my %opts = (
        notify => 0,
        quiet  => 0,
    );
    my $self = bless {}, $class;

    my $help;
    Getopt::Long::GetOptionsFromArray(
        $argv,
        help   => \$help,
        notify => \$opts{'notify'},
        quiet  => \$opts{'quiet'},
    );

    if ($help) {
        Pod::Usage::pod2usage(
            -exitval   => 'NOEXIT',
            -verbose   => 2,
            -noperldoc => 1,
        );
        return 0;
    }

    $self->{'notify'} = $opts{'notify'};
    $self->{'quiet'}  = $opts{'quiet'};

    my $resolver_state = Cpanel::Resolvers::Check::check_resolvers_performance();

    if ( !$resolver_state->{'state'}->is_ok() ) {
        $self->send_notification($resolver_state);
        return 1;
    }

    print $self->_locale()->maketext(q{OK}), "\n" unless $self->{'quiet'};
    return 0;
}

sub send_notification {
    my ( $self, $resolvers_ref ) = @_;

    require Cpanel::Locale;
    my $old = $self->_locale()->set_context_plain();

    require Cpanel::Notify;
    my $ic_obj = Cpanel::Notify::notification_class(
        'class'            => 'Check::Resolvers',
        'application'      => 'Check::Resolvers',
        'status'           => $resolvers_ref->{'state'},
        'interval'         => $NOTIFICATION_INTERVAL,
        'constructor_args' => [
            'origin'       => 'check_unreliable_resolvers',
            resolver_state => $resolvers_ref->{'resolver_state'},
            overall_state  => $resolvers_ref->{'state'},
            'skip_send'    => 1,
        ]
    );

    unless ( $self->{'quiet'} ) {
        print $ic_obj->render_template_include_as_text( 'template' => 'subject', 'type' => 'text' ) . "\n\n" . $ic_obj->render_template_include_as_text( 'template' => 'body', 'type' => 'html' ) . "\n";
    }

    if ( $self->{'notify'} ) {
        my %notify_check_args = (
            app      => 'Check::Resolvers',
            status   => $resolvers_ref->{'state'},
            interval => $NOTIFICATION_INTERVAL,

        );
        return 0 if Cpanel::Notify::notify_blocked(%notify_check_args);
        Cpanel::Notify::update_notification_time_if_interval_reached(%notify_check_args);

        $ic_obj->send();
    }

    $self->_locale()->set_context($old);
    return 1;
}

sub _locale {
    my ($self) = @_;
    require Cpanel::Locale;
    return ( $self->{'_locale'} ||= Cpanel::Locale->get_handle() );
}

exit( __PACKAGE__->script( \@ARGV ) ) unless caller;

__END__

=pod

=encoding utf-8

=head1 NAME

check_unreliable_resolvers - Checks for resolvers in /etc/resolv.conf that are not reliable or missing

=head1 SYNOPSIS

    check_unreliable_resolvers OPTIONS

    Options:

        --quiet
            Do not display output.

        --notify
            Send notification to the system administrator.

        --help
            Print this message.

=head1 DESCRIPTION

This script checks the state of /etc/resolv.conf and can notify when one or more
of the nameservers is responding slowly, not responding, unreliable, or otherwise
problematic.

=cut
