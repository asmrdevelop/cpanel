define(["angular","cjt/util/locale","cjt/validator/validator-utils","app/services/apiTokens","cjt/validator/validateDirectiveFactory"],(function(e,t,n,a){"use strict";var i,o={_lastFetch:0,_processLoadedTokens:function(e){return i=null,e&&(i={},e.forEach((function(e){i[e.id]=e}))),i},_fetchTokens:function(){return i}},r={tokenNameIsUnique:function(e,a){var i=n.initializeValidationResult(),r=o._fetchTokens();return a&&e===a||(!r||e&&r[e])&&(i.isValid=!1,i.add("tokenNameIsUnique",t.maketext("This [asis,API] token name already exists on this account. Enter a different name."),"tokenNameIsUnique")),i},validate:function(e,t,n,a,i){var s=(new Date).getTime();if(o._fetchTokens()&&s-o._lastFetch<1e3){var u=r.tokenNameIsUnique(n,a,i);return t.resolve(u)}return o._lastFetch=s,e.fetchTokens().then((function(e){o._processLoadedTokens(e);var s=r.tokenNameIsUnique(n,a,i);return t.resolve(s)}))}};return e.module("cjt2.validate").run(["validatorFactory","$q",a.serviceName,function(e,t,n){var a={tokenNameIsUnique:r.validate.bind(r,n,t)};a.tokenNameIsUnique.async=!0,e.generate(a,t)}]),{methods:r,factoryMethods:o,name:"token-name-is-unique",description:"Validation to ensure the api Token is unique for this account.",version:1}}));