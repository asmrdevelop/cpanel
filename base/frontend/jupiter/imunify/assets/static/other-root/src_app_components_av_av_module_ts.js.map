{"version":3,"file":"src_app_components_av_av_module_ts.js","mappings":"woBAUgBA,EAAAA,4BAAA,2B,qCAGIA,EAAAA,uBAAA,qBACJA,EAAAA,6B,KAFQA,EAAAA,mCAAA,aAAAA,EAAAA,yBAAA,gD,sBAchBA,EAAAA,uBAAA,mC,CClBD,IAAMC,EAAiB,MAAxB,MAAOA,EACTC,WAAAA,CACWC,EACAC,GADA,KAAAD,aAAAA,EACA,KAAAC,YAAAA,CACR,E,6CAJMH,GAAiBD,EAAAA,+BAAAK,EAAAA,GAAAL,EAAAA,+BAAAM,EAAAA,GAAA,E,mDAAjBL,EAAiBM,UAAA,mBAAAC,MAAA,GAAAC,KAAA,GAAAC,OAAA,weAAAC,SAAA,SAAAC,EAAAC,G,GAAA,EAAAD,IDR9BZ,EAAAA,4BAAA,UAAAA,CAA+C,cAMvCA,EAAAA,uBAAA,wCACAA,EAAAA,4BAAA,UAAAA,CAAyB,WACaA,EAAAA,oBAAA,wCAAkCA,EAAAA,4BACpEA,EAAAA,qCAAA,KACIA,EAAAA,wBAAA,EAAAc,EAAA,6B,iCAKJd,EAAAA,qCACAA,EAAAA,uBAAA,wCACAA,EAAAA,qCAAA,MACIA,EAAAA,4BAAA,4B,sCAEIA,EAAAA,uBAAA,qBACJA,EAAAA,4BACJA,EAAAA,qCACAA,EAAAA,uBAAA,uCACJA,EAAAA,4BACAA,EAAAA,uBAAA,wCACAA,EAAAA,wBAAA,GAAAe,EAAA,uC,kCAIAf,EAAAA,uBAAA,qCACAA,EAAAA,4BAAA,YAAAA,CAAmB,gBAIXA,EAAAA,oBAAA,I,sCACJA,EAAAA,2BAAAA,Q,2CAjCFA,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,YAAAgB,EAAAC,MAQejB,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,QAAAA,EAAAA,yBAAA,IAAAa,EAAAV,aAAAe,SAAAC,eAQDnB,EAAAA,uBAAA,GAAAA,EAAAA,mCAAA,aAAAA,EAAAA,yBAAA,kDAQPA,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,OAAAA,EAAAA,yBAAA,KAAAa,EAAAT,YAAAgB,WAQDpB,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,mC,mQC3BHC,CAAiB,K,yHCR9BD,EAAAA,uBAAA,gB,4CAGQA,EAAAA,wBAAA,MAAAqB,EAAAC,iBAAAtB,EAAAA,mC,EC2BD,IAAMuB,GAAsB,MAA7B,MAAOA,EAcTrB,WAAAA,CACYsB,EACAC,EACAC,EACAC,EACkBC,GAJlB,KAAAJ,SAAAA,EACA,KAAAC,UAAAA,EACA,KAAAC,SAAAA,EACA,KAAAC,OAAAA,EACkB,KAAAC,OAAAA,EAdpB,KAAAC,aAAe,IAAIC,EAAAA,aAK7B,KAAAC,SAAmB,EAWfC,KAAKC,yBACT,CAEAC,WAAAA,CAAYC,GACJ,SAAUA,IACVH,KAAKD,SAAU,EACfC,KAAKV,iBAAmBU,KAAKI,KAAOJ,KAAKK,aAAaL,KAAKI,MAAQ,GAE3E,CAEAE,WAAAA,GACIN,KAAKO,eACT,CAEQN,uBAAAA,GACJD,KAAKO,cACDP,KAAKN,SAASc,OAAO,SAAU,WAAWC,IACtCT,KAAKU,oBAAoBD,EAAM,GAE3C,CAEQC,mBAAAA,CAAoBD,GACL,sBAAfA,EAAME,MACNX,KAAKL,OAAOiB,KAAI,KACZZ,KAAKa,iBACLb,KAAKD,SAAU,EACfC,KAAKR,SAASsB,gBACdd,KAAKH,aAAakB,MAAM,GAGpC,CAEQF,cAAAA,GACJ,MAAMG,EAAehB,KAAKiB,eAAeC,eAAeC,cACxD,GAAIH,EAAc,CACd,MAAMI,EAAWpB,KAAKJ,OAAOwB,SAC7B,IAAIC,EAAcrB,KAAKd,QAAQmC,YAC3BC,EAAkBtB,KAAKd,QAAQoC,gBAE/BD,GAAaE,WAAW,SACxBF,EAAc,GAAGD,EAASI,SAASJ,EAASK,eAAeJ,KAG3DC,GAAiBC,WAAW,SAC5BD,EAAkB,GAAGF,EAASI,SAASJ,EAASK,eAAeH,KAGnE,MAAMpC,EAAU,CACZwC,QAAS1B,KAAKd,QAAQwC,QACtBC,QAAS,CACLC,MAAO,CACHC,SAAU7B,KAAKd,QAAQyC,SAASC,MAAQ5B,KAAKd,QAAQyC,QAAQC,MAAMC,SAAW,MAElFC,OAAQ,CACJC,UAAW/B,KAAK+B,YAGxBV,cACAC,mBAEJN,EAAagB,YAAYC,KAAKC,UAAU,CAAEhD,UAASiD,MAAOnC,KAAKoC,YAAc,I,CAErF,CAEQ/B,YAAAA,CAAaD,GACjB,MAAMiC,EAAM,gDAA4BjC,IACxC,OAAOJ,KAAKP,UAAU6C,+BAA+BD,EACzD,E,6CAxFS9C,GAAsBvB,EAAAA,+BAAAA,EAAAA,mBAAAA,EAAAA,+BAAAK,EAAAA,cAAAL,EAAAA,+BAAAA,EAAAA,WAAAA,EAAAA,+BAAAA,EAAAA,QAAAA,EAAAA,+BAmBnB,UAAQ,E,mDAnBXuB,EAAsBhB,UAAA,0BAAAgE,UAAA,SAAA3D,EAAAC,G,GAAA,EAAAD,G,kjBD9BnCZ,EAAAA,wBAAA,EAAAwE,GAAA,gB,KAESxE,EAAAA,wBAAA,OAAAa,EAAAS,iB,+MC4BIC,CAAsB,K,0BCHvBvB,EAAAA,4BAAA,WAAAA,CAA0D,aAClCA,EAAAA,oBAAA,GAAoCA,EAAAA,4BACxDA,EAAAA,4BAAA,aAAqBA,EAAAA,oBAAA,YAAMA,EAAAA,2BAAAA,I,6CADPA,EAAAA,uBAAA,GAAAA,EAAAA,+BAAAyE,EAAAvD,QAAAyC,QAAAC,MAAAC,S,qEA1B5B7D,EAAAA,4BAAA,YACIA,EAAAA,uBAAA,iBACAA,EAAAA,4BAAA,WACIA,EAAAA,oBAAA,G,qCACJA,EAAAA,4BACAA,EAAAA,4BAAA,UAAAA,CAAyB,YAEjBA,EAAAA,oBAAA,G,qCACJA,EAAAA,4BACAA,EAAAA,oBAAA,G,sCACJA,EAAAA,4BACAA,EAAAA,4BAAA,YAAAA,CAA4B,aAEpBA,EAAAA,uBAAA,kBACAA,EAAAA,4BAAA,WAAOA,EAAAA,oBAAA,I,sCAAyDA,EAAAA,2BAAAA,GAEpEA,EAAAA,4BAAA,aACIA,EAAAA,uBAAA,kBACAA,EAAAA,4BAAA,WAAOA,EAAAA,oBAAA,I,sCAAuDA,EAAAA,2BAAAA,GAElEA,EAAAA,4BAAA,aACIA,EAAAA,uBAAA,kBACAA,EAAAA,4BAAA,WAAOA,EAAAA,oBAAA,I,sCAA0DA,EAAAA,2BAAAA,KAGzEA,EAAAA,wBAAA,GAAA0E,GAAA,cAIA1E,EAAAA,4BAAA,gBAA2DA,EAAAA,wBAAC,SAAD,WAAAA,EAAAA,2BAAA2E,GAAA,MAAAC,EAAA5E,EAAAA,2BAAC,GAAD,OAASA,EAAAA,yBAAA4E,EAAAC,IAAAD,EAAA1D,QAAAmC,aAAwB,IACxFrD,EAAAA,oBAAA,I,sCACJA,EAAAA,2BAAAA,E,iDA5BIA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,6BAIIA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,2CAEJA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,qCAKWA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,mDAIAA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,iDAIAA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,oDAGaA,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,aAAA8E,EAAA5D,QAAAyC,QAAA,KAAAmB,EAAA5D,QAAAyC,QAAAC,OAIc5D,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,cACtCA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,+B,4BAsCJA,EAAAA,4BAAA,WAAAA,CAA6C,aACrBA,EAAAA,oBAAA,GAAeA,EAAAA,4BACnCA,EAAAA,4BAAA,aAAqBA,EAAAA,oBAAA,YAAMA,EAAAA,2BAAAA,I,6CADPA,EAAAA,uBAAA,GAAAA,EAAAA,+BAAA+E,EAAAhB,U,qEAtEhC/D,EAAAA,4BAAA,WACIA,EAAAA,wBAAA,EAAAgF,GAAA,eAiCAhF,EAAAA,4BAAA,UAAAA,CAAoC,WACHA,EAAAA,oBAAA,G,qCAAgDA,EAAAA,4BAC7EA,EAAAA,uBAAA,gBACAA,EAAAA,4BAAA,WACIA,EAAAA,oBAAA,G,qCACJA,EAAAA,4BACAA,EAAAA,4BAAA,YACIA,EAAAA,oBAAA,I,sCACJA,EAAAA,4BACAA,EAAAA,4BAAA,YAAAA,CAA4B,WAClBA,EAAAA,oBAAA,I,sCAA2CA,EAAAA,4BACjDA,EAAAA,uBAAA,kBACJA,EAAAA,4BACAA,EAAAA,4BAAA,YAAAA,CAA4B,aAEpBA,EAAAA,uBAAA,kBACAA,EAAAA,4BAAA,WAAOA,EAAAA,oBAAA,I,sCAA8DA,EAAAA,2BAAAA,GAEzEA,EAAAA,4BAAA,aACIA,EAAAA,uBAAA,kBACAA,EAAAA,4BAAA,WAAOA,EAAAA,oBAAA,I,sCAAoDA,EAAAA,2BAAAA,GAE/DA,EAAAA,4BAAA,aACIA,EAAAA,uBAAA,kBACAA,EAAAA,4BAAA,WAAOA,EAAAA,oBAAA,I,sCAA+DA,EAAAA,2BAAAA,GAE1EA,EAAAA,4BAAA,aACIA,EAAAA,uBAAA,kBACAA,EAAAA,4BAAA,WAAOA,EAAAA,oBAAA,I,sCAAiEA,EAAAA,2BAAAA,GAE5EA,EAAAA,4BAAA,aACIA,EAAAA,uBAAA,kBACAA,EAAAA,4BAAA,WAAOA,EAAAA,oBAAA,I,sCAA+DA,EAAAA,2BAAAA,KAG9EA,EAAAA,wBAAA,GAAAiF,GAAA,cAIAjF,EAAAA,4BAAA,gBAA2EA,EAAAA,wBAAC,SAAD,WAAAA,EAAAA,2BAAAkF,GAAA,MAAAC,EAAAnF,EAAAA,6BAAA,OAASA,EAAAA,yBAAAmF,EAAAN,IAAAM,EAAAjE,QAAAoC,iBAA4B,IAC5GtD,EAAAA,oBAAA,I,sCACJA,EAAAA,2BAAAA,I,gDA1EmCA,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,OAAAqB,EAAAH,QAAAwC,UAAArC,EAAA+D,QAAAC,eAkCNrF,EAAAA,uBAAA,GAAAA,EAAAA,+BAAAA,EAAAA,yBAAA,sCAGzBA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,iCAGAA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,wCAGMA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,GAAAA,EAAAA,yBAAA,qCAMKA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,wDAIAA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,8CAIAA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,yDAIAA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,2DAIAA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,yDAGaA,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,OAAAqB,EAAA0C,WAI8B/D,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,cACtDA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,+B,qEAIZA,EAAAA,4BAAA,4BAKqBA,EAAAA,wBAAC,gBAAD,WAAAA,EAAAA,2BAAAsF,GAAA,MAAAC,EAAAvF,EAAAA,6BAAA,OAAgBA,EAAAA,yBAAAuF,EAAAC,iBAAgB,IACrDxF,EAAAA,2B,gDALqBA,EAAAA,wBAAA,UAAAyF,EAAAvE,QAAAlB,CAAmB,OAAAyF,EAAArD,KAAnBpC,CAAmB,YAAAyF,EAAArB,UAAnBpE,CAAmB,YAAAyF,EAAA1B,U,ECjErC,IAAM2B,GAAgB,MAAvB,MAAOA,EAYTxF,WAAAA,CACYsB,EACArB,EACAwF,EACAC,GAHA,KAAApE,SAAAA,EACA,KAAArB,aAAAA,EACA,KAAAwF,iBAAAA,EACA,KAAAC,iBAAAA,EAfZ,KAAAR,QAAUA,EAAAA,GAMV,KAAAS,sBAAuB,EACvB,KAAAC,gBAAiB,EACT,KAAAC,SAAW,IAAIC,EAAAA,QASnBhE,KAAKI,KAAOJ,KAAK2D,iBAAiBM,YAClCjE,KAAKkE,WACLlE,KAAKmE,aACLnE,KAAKoE,kBACT,CAEAC,eAAAA,GACIrE,KAAKsE,OAAOC,KAAK,UACrB,CAEAjE,WAAAA,GACIN,KAAK+D,SAASS,OACdC,aAAazE,KAAK0E,gBACtB,CAEA7B,GAAAA,CAAI8B,GACA/E,OAAOgF,KAAKD,EAChB,CAEAnB,cAAAA,GACIxD,KAAK8D,gBAAiB,EACtBW,aAAazE,KAAK0E,iBAClB1E,KAAKsE,OAAOO,KAAK,WACjB7E,KAAKR,SAASsF,cAClB,CAEQZ,QAAAA,GACJ,MAAMa,EAAa/E,KAAK4D,iBAAiBoB,gBAEzCC,EAAAA,EAAAA,eAAc,CAACF,EAAY/E,KAAK7B,aAAae,UAAUgG,MACnDC,EAAAA,EAAAA,WAAUnF,KAAK+D,WACjBqB,UAAU,CACRZ,KAAMA,EAAEpC,EAAWlD,MACfc,KAAKqF,WAAWnG,GAChBc,KAAKoC,UAAYA,EACjBpC,KAAKR,SAASsF,cAAc,EAEhCQ,MAAOC,EAAAA,MAEf,CAEQnB,gBAAAA,GACJpE,KAAK2D,iBAAiB6B,aACjBN,MAAKC,EAAAA,EAAAA,WAAUnF,KAAK+D,WACpBqB,UAAU,CACPZ,KAAMiB,IACFzF,KAAKI,KAAOqF,EAAMrF,KAClBJ,KAAK6D,sBAAuB,EAC5B7D,KAAK8D,gBAAiB,EACtB9D,KAAKsE,OAAOC,KAAK,WACjBvE,KAAKmE,aACLnE,KAAKR,SAASsF,cAAc,EAEhCQ,MAAOC,EAAAA,MAEnB,CAEQF,UAAAA,CAAWnG,GACfc,KAAKd,QAAUA,EACfc,KAAK+B,UAAY/B,KAAK0F,aAAaxG,EACvC,CAEQwG,YAAAA,CAAaxG,GACjB,MAAMyC,EAAUzC,EAAQyC,QACxB,GAAIA,EAAS,CACT,MAAMgE,EAAQzG,EAAQ0G,YAAc,EACpC,OAAOlC,EAAiBmC,SAASlE,EAASgE,E,CAElD,CAEQxB,UAAAA,GACAnE,KAAK0E,iBAAiBD,aAAazE,KAAK0E,iBAE5C1E,KAAK0E,gBAAkBoB,YAAW,KACzB9F,KAAK8D,iBACN9D,KAAKsE,OAAOO,KAAK,WACjB7E,KAAK6D,sBAAuB,EAC5B7D,KAAKR,SAASsF,e,GAtGW,IAyGrC,CAEA,eAAOe,CAASlE,EAAyBgE,GACrC,GAAIhE,EAAS,CACT,IAAK,MAAMoE,KAAKC,EAAAA,GAAoB,CAChC,MAAMC,EAAQtE,EAAQ,UAAYuE,OAAOH,IACzC,GAAIE,GAASN,GAASI,EAClB,OAAOE,EAAMpE,Q,CAIrB,OAAOF,GAASwE,kBAAkBtE,Q,CAE1C,E,6CA/GS6B,GAAgB1F,EAAAA,+BAAAA,EAAAA,mBAAAA,EAAAA,+BAAAK,EAAAA,GAAAL,EAAAA,+BAAAM,EAAAA,IAAAN,EAAAA,+BAAAoI,EAAAA,GAAA,E,mDAAhB1C,EAAgBnF,UAAA,mBAAAgE,UAAA,SAAA3D,EAAAC,G,GAAA,EAAAD,G,2BAEdyH,EAAAA,EAAiB,G,w+BDjBhCrI,EAAAA,4BAAA,WACIA,EAAAA,wBAAA,EAAAsI,GAAA,eA8EAtI,EAAAA,wBAAA,EAAAuI,GAAA,6BAOJvI,EAAAA,6B,MArFwBA,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,OAAAa,EAAAgF,uBAAAhF,EAAAiF,gBA8EE9F,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,OAAAa,EAAAK,UAAAL,EAAAgF,sB,8x4LChEbH,CAAgB,KCVhB8C,GAAY,MAAnB,MAAOA,EACTtI,WAAAA,CACYuI,EACAtI,GADA,KAAAsI,OAAAA,EACA,KAAAtI,aAAAA,CACT,CAEHuI,WAAAA,CAAYC,EAA+BC,GACvC,QAAK5G,KAAK7B,aAAae,QAAQuG,MAAMoB,mBACjC7G,KAAKyG,OAAOK,SAAS,CAAC,OACf,EAIf,EAbqB,O,sCAAZN,GAAYxI,EAAAA,sBAAAK,EAAAA,QAAAL,EAAAA,sBAAAM,EAAAA,GAAA,E,sDAAZkI,EAAYO,QAAZP,EAAYQ,YAAZR,CAAY,K,2BCKlB,IAAMS,GAAa,MAApB,MAAOA,G,6CAAAA,EAAa,E,mDAAbA,EAAa1I,UAAA,UAAA2I,SAAA,CAAAlJ,EAAAA,gCAJX,CACPmJ,GAAAA,KACH3I,MAAA,EAAAC,KAAA,EAAAE,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GCRLZ,EAAAA,uBAAA,mBAAAA,CAAiC,kB,uDDUpBiJ,CAAa,K,2EEDdjJ,EAAAA,4BAAA,SAEuCA,EAAAA,oBAAA,sCAAgCA,EAAAA,4B,CCJ5E,IAAMoJ,GAAwB,MAA/B,MAAOA,EACTlJ,WAAAA,CACWC,GAAA,KAAAA,aAAAA,CACR,E,6CAHMiJ,GAAwBpJ,EAAAA,+BAAAK,EAAAA,GAAA,E,mDAAxB+I,EAAwB7I,UAAA,mBAAAC,MAAA,GAAAC,KAAA,EAAAC,OAAA,8XAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IDPrCZ,EAAAA,4BAAA,UAAAA,CAA4B,gBAA5BA,CAA4B,gBAEQA,EAAAA,oBAAA,cAAQA,EAAAA,4BACpCA,EAAAA,oBAAA,G,qCACJA,EAAAA,4BACAA,EAAAA,4BAAA,UAAAA,CAAqC,cAArCA,CAAqC,SAE+BA,EAAAA,oBAAA,2BAAqBA,EAAAA,4BACjFA,EAAAA,4BAAA,UAAkEA,EAAAA,oBAAA,kCAA2BA,EAAAA,4BAC7FA,EAAAA,wBAAA,GAAAqJ,GAAA,W,kCAGJrJ,EAAAA,2BAAAA,GAEJA,EAAAA,uBAAA,oBACJA,EAAAA,6B,MAZQA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,2BAOQA,EAAAA,uBAAA,GAAAA,EAAAA,wBAAA,QAAAA,EAAAA,yBAAA,KAAAa,EAAAV,aAAAe,SAAAC,e,2wICHHiI,CAAwB,K,uFCoBrC,MAAME,GAAiB,CACnB,CACIC,KAAM,QACNC,UAAWP,GACXP,YAAa,CAACe,GAAAA,IACdC,SAAU,CACN,CACIH,KAAM,GACNI,UAAW,OACXC,WAAY,WAEhB,CACIL,KAAM,UACNC,UAAWK,GAAAA,EACXH,SAAU,CACN,CAACH,KAAM,GAAIK,WAAY,YAAaD,UAAW,QAC/C,CACIJ,KAAM,YACNC,UAAWM,EAAAA,EACXpB,YAAa,CAACqB,GAAAA,IACdC,sBAAuB,6BAE3B,CACIT,KAAM,QACNC,UAAWS,EAAAA,EACXvB,YAAa,CAACqB,GAAAA,IACdC,sBAAuB,6BAE3B,CACIT,KAAM,iBACNC,UAAWU,GAAAA,EACXxB,YAAa,CAACqB,GAAAA,IACdC,sBAAuB,6BAE3B,CACIT,KAAM,UACNC,UAAWW,EAAAA,EACXzB,YAAa,CAACqB,GAAAA,IACdC,sBAAuB,6BAE3B,CACIT,KAAM,cACNC,UAAWY,EAAAA,EACX1B,YAAa,CAACqB,GAAAA,IACdC,sBAAuB,8BAG/BtB,YAAa,CAACqB,GAAAA,IACdC,sBAAuB,UAE3B,CACIT,KAAMc,GAAAA,EAAAA,KACNC,aAAcD,GAAAA,EAAAA,cAElB,CACId,KAAM,WACNC,UAAWJ,GACXM,SAAU,CACN,CAACH,KAAM,GAAIK,WAAY,UAAWD,UAAW,QAC7C,CACIJ,KAAM,UACNC,UAAWvJ,EACXsK,cAAe,CAACC,GAAAA,IAEpBC,GAAAA,EACA,CACIlB,KAAM,sBACNC,UAAWkB,EAAAA,EACXhC,YAAa,CAACqB,GAAAA,IACdC,sBAAuB,+BAInC,CACIT,KAAM,UACNC,UAAW9D,GACXgD,YAAa,CAACF,KAElB,CACIe,KAAM,wBACNe,aAAcA,IAAM,uFACfK,MAAKC,GAAKA,EAAEC,oBAErB,CACItB,KAAM,WACNC,UAAWsB,GAAAA,EACXnI,KAAM,CAAEoI,KAAM,aAElB,CACIxB,KAAM,oBACNC,UAAWsB,GAAAA,EACXnI,KAAM,CAAEoI,KAAM,OAElB,CACIxB,KAAM,aACNC,UAAWsB,GAAAA,EACXnI,KAAM,CAAEoI,KAAM,eAElBC,GAAAA,aAGR,CACIzB,KAAM,SACNC,UAAWP,GACXP,YAAa,CAACe,GAAAA,GAAawB,EAAAA,GAC3BC,iBAAkB,CAACD,EAAAA,GACnBvB,SAAU,CACN,CACIH,KAAM,GACNI,UAAW,OACXC,WAAY,WAEhB,CACIL,KAAM,UACNC,UAAWK,GAAAA,EACXH,SAAU,CACN,CAACH,KAAM,GAAIK,WAAY,QAASD,UAAW,QAC3C,CACIJ,KAAM,QACNC,UAAWS,EAAAA,EACXtH,KAAM,CAAEwI,QAASC,EAAAA,GAAAA,IACjB1C,YAAa,CAACqB,GAAAA,IACdC,sBAAuB,6BAE3B,CACIT,KAAM,iBACNC,UAAWU,GAAAA,EACXvH,KAAM,CAAEwI,QAASC,EAAAA,GAAAA,IACjB1C,YAAa,CAACqB,GAAAA,IACdC,sBAAuB,6BAE3B,CACIT,KAAM,UACNC,UAAWW,EAAAA,EACXxH,KAAM,CAAEwI,QAASC,EAAAA,GAAAA,IACjB1C,YAAa,CAACqB,GAAAA,IACdC,sBAAuB,6BAE3B,CACIT,KAAM,cACNC,UAAWY,EAAAA,EACXzH,KAAM,CAAEwI,QAASC,EAAAA,GAAAA,IACjB1C,YAAa,CAACqB,GAAAA,IACdC,sBAAuB,8BAG/BtB,YAAa,CAACqB,GAAAA,IACdC,sBAAuB,YAIpC,CACKT,KAAM,2BACNe,aAAcA,IAAM,8FACfK,MAAKC,GAAKA,EAAES,2BAQlB,IAAMC,GAAe,MAAtB,MAAOA,GAFa,O,sCAEbA,EAAe,E,kDAAfA,I,sDAHCC,EAAAA,aAAAA,SAAsBjC,IACtBiC,EAAAA,gBAEDD,CAAe,K,uFCvLrB,IAAME,GAAU,MAAjB,MAAOA,EACTtL,WAAAA,CAAoBuL,EAA8BhD,GAA9B,KAAAgD,UAAAA,EAA8B,KAAAhD,OAAAA,CAAiB,CACnEC,WAAAA,CAAYC,EAA+BC,GACvC,OAAI5G,KAAKyJ,UAAUC,SAASjE,QACxBzF,KAAKyG,OAAOK,SAAS,CAAC,IAAK,KAAM,UAAW,WACrC,EAGf,EARmB,O,sCAAV0C,GAAUxL,EAAAA,sBAAAK,GAAAA,GAAAL,EAAAA,sBAAAM,EAAAA,QAAA,E,sDAAVkL,EAAUzC,QAAVyC,EAAUxC,YAAVwC,CAAU,K,oOCIhB,IAAMG,GAAmB,MAA1B,MAAOA,GAJ8B,O,sCAI9BA,EAAmB,E,kDAAnBA,I,sDAJCC,EAAAA,aAAcC,EAAAA,MAIfF,CAAmB,KCanBG,GAAa,MAApB,MAAOA,GALc,O,sCAKdA,EAAa,E,kDAAbA,I,sDAXLF,EAAAA,aACAG,EAAAA,EACAC,GAAAA,EACAC,EAAAA,EACAC,EAAAA,cACAC,GAAAA,EACAR,MAKKG,CAAa,KC0GbM,GAAQ,MAAf,MAAOA,EACTlM,WAAAA,CAAYmM,GAAuC,EA/BlC,O,sCA8BRD,GAAQpM,EAAAA,sBAAAK,GAAAA,IAAA,E,kDAAR+L,EAAQE,UAAA,CAhELrD,M,uDAyCD,CACP,CAAEsD,QAASC,GAAAA,EAAiBC,SAAUC,GAAAA,GACtCC,GAAAA,GACAC,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAtB,GACAhD,GACAuE,GAAAA,EAGAC,GAAAA,EACAC,GAAAA,EACAC,GAAAA,GACAC,GAAAA,EACAC,GAAAA,EACAnC,EAAAA,EACA,CAAEsB,QAASc,EAAAA,kBAAmBC,SAAUC,GAAAA,EAA2BC,OAAO,GAC1E,CAAEjB,QAASc,EAAAA,kBAAmBI,YAAahE,GAAAA,GAAa+D,OAAO,GAC/D,CAAEjB,QAASc,EAAAA,kBAAmBC,SAAUI,GAAAA,EAAiBF,OAAO,GAChEG,GAAAA,GACHC,QAAA,CA5DGhC,EAAAA,aACAN,GACAuC,EAAAA,iBACAC,EAAAA,EAAAA,OAAuB,CACnBC,iBAAkB,CACdC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,KAGRC,EAAAA,EACAnC,EAAAA,EACAoC,GAAAA,EACAC,EAAAA,EACAC,EAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAzC,GAAAA,EACA0C,GAAAA,EACAC,EAAAA,iBACAC,EAAAA,kBACAC,EAAAA,gBACA1C,GAAAA,EACAD,EAAAA,cACA4C,EAAAA,cACA/C,EAAAA,EACAgD,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EACArD,MA8BKM,CAAQ,I,kHCjHd,IAAMnB,EAAuB,MAA9B,MAAOA,EACT/K,WAAAA,CACYuL,EACA2D,EACAC,EACA5G,GAHA,KAAAgD,UAAAA,EACA,KAAA2D,cAAAA,EACA,KAAAC,0BAAAA,EACA,KAAA5G,OAAAA,CACT,CAEHC,WAAAA,CAAYC,EAA+BC,GACvC,QAAI5G,KAAKyJ,UAAU6D,QAAQ7H,OAGpBzF,KAAKoN,cAAcG,mBAAmBrI,MACzCsI,EAAAA,EAAAA,SAAOD,GAA4C,MAAtBA,KAC7BE,EAAAA,EAAAA,MAAK,IACLC,EAAAA,EAAAA,MAAKH,IACIA,GACDvN,KAAKyG,OAAOK,SAAS9G,KAAKyJ,UAAUkE,yB,IAIpD,CAEAzE,gBAAAA,CACIvC,EACAC,GAEA,QAAI5G,KAAKyJ,UAAU6D,QAAQ7H,OAGpBzF,KAAKoN,cAAcQ,eAAeC,MAAM3I,MAC3CuI,EAAAA,EAAAA,MAAK,IACLK,EAAAA,EAAAA,MAAK5G,IACD,MAAMiC,EAAUxC,EAAMhG,KAAKwI,QAE3B,KADgBjC,EAASiC,KAAa4E,EAAAA,GAAAA,IACxB,CACV,MACMC,GADWrH,EAAMsH,OAAQC,YAAaxG,UAAY,IACjCyG,MAAMH,KACvBA,EAAMrN,MAAQuG,EAAS8G,EAAMrN,KAAKwI,WAAa4E,EAAAA,GAAAA,KASrD,OANIC,GACAhO,KAAKyG,OAAOK,SACR9G,KAAKyJ,UAAU2E,yBAAyBJ,KAIzC,C,CAEX,OAAO,CAAI,IAGvB,EApDgC,O,sCAAvB/E,GAAuBjL,EAAAA,sBAAAK,EAAAA,GAAAL,EAAAA,sBAAAM,EAAAA,GAAAN,EAAAA,sBAAAoI,EAAAA,GAAApI,EAAAA,sBAAAqQ,EAAAA,QAAA,E,sDAAvBpF,EAAuBlC,QAAvBkC,EAAuBjC,YAAvBiC,CAAuB,I,wJCP7B,IAAMH,EAAsB,MAA7B,MAAOA,EAGT5K,WAAAA,CACWyI,EACAxI,GADA,KAAAwI,MAAAA,EACA,KAAAxI,aAAAA,EAJF,KAAAmQ,YAA2B,KAC3B,KAAAC,MAAqB,IAI3B,E,6CANMzF,GAAsB9K,EAAAA,+BAAAK,EAAAA,gBAAAL,EAAAA,+BAAAM,EAAAA,GAAA,E,mDAAtBwK,EAAsBvK,UAAA,qBAAAiQ,OAAA,CAAAF,YAAA,cAAAC,MAAA,SAAA/P,MAAA,GAAAC,KAAA,GAAAC,OAAA,yNAAAC,SAAA,SAAAC,EAAAC,G,GAAA,EAAAD,ICTnCZ,EAAAA,4BAAA,UAAAA,CAAqD,WAE7CA,EAAAA,uBAAA,gBACAA,EAAAA,4BAAA,SAAiBA,EAAAA,oBAAA,G,sEAAkFA,EAAAA,4BACnGA,EAAAA,4BAAA,SAAiCA,EAAAA,oBAAA,G,iCAAgEA,EAAAA,4BACjGA,EAAAA,4BAAA,U,kCAMIA,EAAAA,oBAAA,I,sCACJA,EAAAA,2BAAAA,M,aATiBA,EAAAA,uBAAA,GAAAA,EAAAA,+BAAAA,EAAAA,yBAAA,IAAAa,EAAA0P,OAAA,sBAAAvQ,EAAAA,6BAAA,GAAAyQ,EAAA,OAAAC,EAAA1Q,EAAAA,yBAAA,IAAAa,EAAA8H,MAAAhG,OAAA,KAAA+N,EAAA3F,QACgB/K,EAAAA,uBAAA,GAAAA,EAAAA,+BAAAa,EAAAyP,aAAA,yBAAAK,EAAA3Q,EAAAA,yBAAA,KAAAa,EAAA8H,MAAAhG,OAAA,KAAAgO,EAAA5F,OAM9B/K,EAAAA,uBAAA,GAAAA,EAAAA,mCAAA,OAAAA,EAAAA,yBAAA,MAAAa,EAAAV,aAAAe,SAAAoC,gBAAAtD,EAAAA,4BAJAA,EAAAA,wBAAA,WAAAA,CAAc,cAKbA,EAAAA,uBAAA,GAAAA,EAAAA,gCAAA,IAAAA,EAAAA,yBAAA,mC,ijCDFC8K,CAAsB,I,8FEU5B,IAAMoE,EAAmB,MAA1B,MAAOA,GAPc,O,sCAOdA,EAAmB,E,kDAAnBA,I,sDAVLhD,EAAAA,cACAN,EAAAA,aACAO,EAAAA,EACAJ,EAAAA,KAOKmD,CAAmB,I","sources":["./src/app/components/av/settings/general/settings.component.html","./src/app/components/av/settings/general/settings.component.ts","./src/app/components/av/upgrade/upgrade-iframe/upgrade-iframe.component.html","./src/app/components/av/upgrade/upgrade-iframe/upgrade-iframe.component.ts","./src/app/components/av/upgrade/upgrade.component.html","./src/app/components/av/upgrade/upgrade.component.ts","./src/app/components/av/guards/upgrade-guard.ts","./src/app/components/av/root/root.component.ts","./src/app/components/av/root/root.component.html","./src/app/components/av/settings/settings-index-av.component.html","./src/app/components/av/settings/settings-index-av.component.ts","./src/app/components/av/av-routing.module.ts","./src/app/components/av/guards/admin-guard.ts","./src/app/components/av/upgrade/upgrade-iframe/upgrade-iframe.module.ts","./src/app/components/av/upgrade/upgrade.module.ts","./src/app/components/av/av.module.ts","./src/app/core/user-features-status.guard.ts","./src/app/upgrade-needed/upgrade-needed.component.ts","./src/app/upgrade-needed/upgrade-needed.component.html","./src/app/upgrade-needed/upgrade-needed.module.ts"],"sourcesContent":["<div class=\"card-container settings-container\">\n    <form class=\"canvas i360-visible-save-button\"\n          i360Loader\n          [formGroup]=\"config.form\"\n          i360Config\n          #config=\"i360Config\">\n        <i360-malware-consumption-section class=\"input_group\"></i360-malware-consumption-section>\n        <div class=\"input_group\">\n            <div class=\"group_name\" translate>settings.malware.general.groupName</div>\n            <ng-container formGroupName=\"MALWARE_SCANNING\">\n                <i360-settings-field\n                        *ngIf=\"!(licenseState.license|async).isFreeVersion\"\n                        inputTitle=\"{{ 'settings.malware.general.sendForAnalysis' | translate }}\">\n                    <mat-checkbox formControlName=\"sends_file_for_analysis\"></mat-checkbox>\n                </i360-settings-field>\n            </ng-container>\n            <i360-malware-rapid-scan-section class=\"config_item\"></i360-malware-rapid-scan-section>\n            <ng-container formGroupName=\"MALWARE_SCANNING\">\n                <i360-settings-field\n                        inputTitle=\"{{ 'settings.malware.general.detectElf.label' | translate }}\">\n                    <mat-checkbox formControlName=\"detect_elf\"></mat-checkbox>\n                </i360-settings-field>\n            </ng-container>\n            <i360-malware-hyperscan-section class=\"config_item\"></i360-malware-hyperscan-section>\n        </div>\n        <i360-scheduled-scanning-section class=\"input_group\"></i360-scheduled-scanning-section>\n        <i360-malware-cleanup-section\n                *ngIf=\"permissions.MS_CLEAN|async\"\n                class=\"input_group\">\n        </i360-malware-cleanup-section>\n        <i360-error-reporting-section class=\"input_group\"></i360-error-reporting-section>\n        <div class=\"tools\">\n            <button mat-raised-button\n                    type=\"submit\"\n                    id=\"update-config\">\n                {{ 'settings.saveSettings' | translate }}\n            </button>\n        </div>\n    </form>\n</div>\n","import { Component } from '@angular/core';\nimport { LicenseState } from 'app/services/license-state';\nimport { PermissionsService } from 'app/services/permissions';\n\n\n@Component({\n    templateUrl: './settings.component.html',\n})\nexport class SettingsComponent {\n    constructor(\n        public licenseState: LicenseState,\n        public permissions: PermissionsService,\n    ) {}\n}\n","<iframe #upgradeIframe\n        class=\"upgrade-iframe\"\n        *ngIf=\"upgradeIframeSrc\"\n        [src]=\"upgradeIframeSrc\">\n</iframe>\n","import {\n    Component,\n    ViewChild,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    OnDestroy,\n    ElementRef,\n    Input,\n    Output,\n    EventEmitter,\n    Renderer2,\n    NgZone,\n    OnChanges,\n    SimpleChanges,\n    Inject,\n} from '@angular/core';\nimport { License } from '@imunify360-api/license';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\n\nconst UPGRADE_PAGE_URL = 'https://imunify360.com/imunify-widgets/';\n\n@Component({\n    selector: 'i360-upgrade-iframe',\n    templateUrl: './upgrade-iframe.component.html',\n    styleUrls: ['./upgrade-iframe.component.scss'],\n    host: {\n        '[style.visibility]': 'isReady ? \"visible\" : \"hidden\"'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UpgradeIframeComponent implements OnDestroy, OnChanges {\n    @Input() license: License;\n    @Input() priceFull: string;\n    @Input() lang: string;\n    @Input() iaidToken: string | undefined;\n    @Output() iframeLoaded = new EventEmitter<void>();\n\n    @ViewChild('upgradeIframe', { static: false }) upgradeIframe: ElementRef<HTMLIFrameElement>;\n    upgradeIframeSrc: SafeUrl;\n\n    isReady: boolean = false;\n\n    private stopListening: () => void;\n\n    constructor(\n        private detector: ChangeDetectorRef,\n        private sanitizer: DomSanitizer,\n        private renderer: Renderer2,\n        private ngZone: NgZone,\n        @Inject('Window') private window: Window\n    ) {\n        this.listenMessageFromIframe();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('lang' in changes) {\n            this.isReady = false;\n            this.upgradeIframeSrc = this.lang ? this.getIframeUrl(this.lang) : '';\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.stopListening();\n    }\n\n    private listenMessageFromIframe(): void {\n        this.stopListening =\n            this.renderer.listen('window', 'message', event => {\n                this.handleWindowMessage(event);\n            });\n    }\n\n    private handleWindowMessage(event): void {\n        if (event.data === 'UpgradePageLoaded') {\n            this.ngZone.run(() => {\n                this.postIframeData();\n                this.isReady = true;\n                this.detector.detectChanges();\n                this.iframeLoaded.emit();\n            });\n        }\n    }\n\n    private postIframeData(): void {\n        const iframeWindow = this.upgradeIframe?.nativeElement?.contentWindow;\n        if (iframeWindow) {\n            const location = this.window.location;\n            let upgrade_url = this.license.upgrade_url;\n            let upgrade_url_360 = this.license.upgrade_url_360;\n\n            if (upgrade_url?.startsWith('../')) {\n                upgrade_url = `${location.origin}${location.pathname}/../${upgrade_url}`;\n            }\n\n            if (upgrade_url_360?.startsWith('../')) {\n                upgrade_url_360 = `${location.origin}${location.pathname}/../${upgrade_url_360}`;\n            }\n\n            const license = {\n                product: this.license.product,\n                pricing: {\n                    im_av: {\n                        standard: this.license.pricing?.im_av ? this.license.pricing.im_av.standard : null\n                    },\n                    im_360: {\n                        priceFull: this.priceFull\n                    }\n                },\n                upgrade_url,\n                upgrade_url_360,\n            };\n            iframeWindow.postMessage(JSON.stringify({ license, token: this.iaidToken }), '*');\n        }\n    }\n\n    private getIframeUrl(lang: string): SafeUrl {\n        const url = `${UPGRADE_PAGE_URL}?lang=${lang}`;\n        return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n    }\n}\n","<div class=\"upgrade-page\" i360Loader>\n    <div class=\"cards\" *ngIf=\"iframeLoadingTimeout && !isIframeLoaded\">\n        <div class=\"upgrade-card avplus-card\" *ngIf=\"license.product !== Product.imunifyAVPlus\">\n            <mat-icon class=\"imunify-logo\" svgIcon=\"logo-imunifyAVPlus\"></mat-icon>\n            <div class=\"upgrade-card-title\">\n                {{ 'upgrade.av.title' | translate }}\n            </div>\n            <div class=\"description\">\n                <div class=\"title-description\">\n                    {{ 'upgrade.av.titleInDescription' | translate }}\n                </div>\n                {{ 'upgrade.av.description' | translate }}\n            </div>\n            <div class=\"benefits-block\">\n                <div class=\"i360-item\">\n                    <mat-icon svgIcon=\"done\"></mat-icon>\n                    <span> {{ 'upgrade.av.benefits.malwareDetection' | translate }} </span>\n                </div>\n                <div class=\"i360-item\">\n                    <mat-icon svgIcon=\"done\"></mat-icon>\n                    <span> {{ 'upgrade.av.benefits.malwareCleanup' | translate }} </span>\n                </div>\n                <div class=\"i360-item\">\n                    <mat-icon svgIcon=\"done\"></mat-icon>\n                    <span> {{ 'upgrade.av.benefits.scheduledScanning' | translate }} </span>\n                </div>\n            </div>\n            <div class=\"pricing-block\" *ngIf=\"license.pricing?.im_av\">\n                <span class=\"price\">{{ license.pricing.im_av.standard }}</span>\n                <span class=\"period\">/month</span>\n            </div>\n            <button class=\"av-buy-button\" i360-button [primary]=\"true\" (click)=\"buy(license.upgrade_url)\">\n                {{ 'upgrade.buyButton' | translate }}\n            </button>\n        </div>\n        <div class=\"upgrade-card i360-card\">\n            <div class=\"full-protection\">{{ 'upgrade.im360.fullProtection' | translate }}</div>\n            <mat-icon class=\"imunify-logo\" svgIcon=\"logo-imunify\"></mat-icon>\n            <div class=\"upgrade-card-title\">\n                {{ 'upgrade.im360.title' | translate }}\n            </div>\n            <div class=\"description\">\n                {{ 'upgrade.im360.description' | translate }}\n            </div>\n            <div class=\"includes-block\">\n                <span>{{ 'upgrade.im360.includes' | translate }}:</span>\n                <mat-icon class=\"imunify-logo grey-logo\" svgIcon=\"logo-imunifyAVPlus-grey\"></mat-icon>\n            </div>\n            <div class=\"benefits-block\">\n                <div class=\"i360-item\">\n                    <mat-icon svgIcon=\"done\"></mat-icon>\n                    <span> {{ 'upgrade.im360.benefits.realTimeExecutions' | translate }} </span>\n                </div>\n                <div class=\"i360-item\">\n                    <mat-icon svgIcon=\"done\"></mat-icon>\n                    <span> {{ 'upgrade.im360.benefits.stopBots' | translate }} </span>\n                </div>\n                <div class=\"i360-item\">\n                    <mat-icon svgIcon=\"done\"></mat-icon>\n                    <span> {{ 'upgrade.im360.benefits.outdatedAndSoftware' | translate }} </span>\n                </div>\n                <div class=\"i360-item\">\n                    <mat-icon svgIcon=\"done\"></mat-icon>\n                    <span> {{ 'upgrade.im360.benefits.comprehensiveSecurity' | translate }} </span>\n                </div>\n                <div class=\"i360-item\">\n                    <mat-icon svgIcon=\"done\"></mat-icon>\n                    <span> {{ 'upgrade.im360.benefits.professionalSupport' | translate }} </span>\n                </div>\n            </div>\n            <div class=\"pricing-block\" *ngIf=\"priceFull\">\n                <span class=\"price\">{{ priceFull }}</span>\n                <span class=\"period\">/month</span>\n            </div>\n            <button class=\"av-buy-button i360-buy-button\" i360-button [primary]=\"true\" (click)=\"buy(license.upgrade_url_360)\">\n                {{ 'upgrade.buyButton' | translate }}\n            </button>\n        </div>\n    </div>\n    <i360-upgrade-iframe *ngIf=\"license && !iframeLoadingTimeout\"\n                         [license]=\"license\"\n                         [lang]=\"lang\"\n                         [iaidToken]=\"iaidToken\"\n                         [priceFull]=\"priceFull\"\n                         (iframeLoaded)=\"onIframeLoaded()\">\n    </i360-upgrade-iframe>\n</div>\n","import { Component, ViewChild, ChangeDetectionStrategy, ChangeDetectorRef, OnDestroy, AfterViewInit } from '@angular/core';\nimport { LicenseState } from 'app/services/license-state';\nimport { LoaderDirective } from 'app/utils/loader/loader.directive';\nimport { LicensePriceCounts, LicensePricing, Product, License } from '@imunify360-api/license';\nimport { Subject, noop, combineLatest, takeUntil } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AuthCloudService } from 'app/services/auth-cloud';\n\nexport const UPGRADE_PAGE_LOAD_TIMEOUT = 5000;\n\n@Component({\n    templateUrl: './upgrade.component.html',\n    styleUrls: ['./upgrade.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UpgradeComponent implements OnDestroy, AfterViewInit {\n    Product = Product;\n    @ViewChild(LoaderDirective, {static: true}) loader: LoaderDirective;\n    priceFull?: string;\n    license: License;\n    iaidToken: string | undefined;\n    lang: string;\n    iframeLoadingTimeout = false;\n    isIframeLoaded = false;\n    private destroy$ = new Subject<void>();\n    private iframeTimeoutId;\n\n    constructor(\n        private detector: ChangeDetectorRef,\n        private licenseState: LicenseState,\n        private translateService: TranslateService,\n        private authCloudService: AuthCloudService,\n    ) {\n        this.lang = this.translateService.currentLang;\n        this.loadData();\n        this.waitIframe();\n        this.listenLangChange();\n    }\n\n    ngAfterViewInit(): void {\n        this.loader.show('upgrade');\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        clearTimeout(this.iframeTimeoutId);\n    }\n\n    buy(upgradeUrl: string): void {\n        window.open(upgradeUrl);\n    }\n\n    onIframeLoaded(): void {\n        this.isIframeLoaded = true;\n        clearTimeout(this.iframeTimeoutId);\n        this.loader.hide('upgrade');\n        this.detector.markForCheck();\n    }\n\n    private loadData(): void {\n        const iaidToken$ = this.authCloudService.getIaidToken();\n\n        combineLatest([iaidToken$, this.licenseState.license]).pipe(\n            takeUntil(this.destroy$)\n        ).subscribe({\n            next: ([iaidToken, license]) => {\n                this.setLicense(license as License);\n                this.iaidToken = iaidToken;\n                this.detector.markForCheck();\n            },\n            error: noop\n        });\n    }\n\n    private listenLangChange(): void {\n        this.translateService.onLangChange\n            .pipe(takeUntil(this.destroy$))\n            .subscribe({\n                next: value => {\n                    this.lang = value.lang;\n                    this.iframeLoadingTimeout = false;\n                    this.isIframeLoaded = false;\n                    this.loader.show('upgrade');\n                    this.waitIframe();\n                    this.detector.markForCheck();\n                },\n                error: noop\n            });\n    }\n\n    private setLicense(license: License): void {\n        this.license = license;\n        this.priceFull = this.getFullPrice(license);\n    }\n\n    private getFullPrice(license: License): string | undefined {\n        const pricing = license.pricing;\n        if (pricing) {\n            const count = license.user_count || 1;\n            return UpgradeComponent.getPrice(pricing, count);\n        }\n    }\n\n    private waitIframe(): void {\n        if (this.iframeTimeoutId) clearTimeout(this.iframeTimeoutId);\n\n        this.iframeTimeoutId = setTimeout(() => {\n            if (!this.isIframeLoaded) {\n                this.loader.hide('upgrade');\n                this.iframeLoadingTimeout = true;\n                this.detector.markForCheck();\n            }\n        }, UPGRADE_PAGE_LOAD_TIMEOUT);\n    }\n\n    static getPrice(pricing: LicensePricing, count: number): string | undefined {\n        if (pricing) {\n            for (const i of LicensePriceCounts) {\n                const entry = pricing['im_360_' + String(i)];\n                if (entry && count <= i) {\n                    return entry.standard;\n                }\n            }\n\n            return pricing?.im_360_unlimited?.standard;\n        }\n    }\n}\n","import { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, Router } from '@angular/router';\nimport { LicenseState } from 'app/services/license-state';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class UpgradeGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private licenseState: LicenseState,\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        if (!this.licenseState.license.value.upgradeAvailable) {\n            this.router.navigate(['/']);\n            return false;\n        }\n\n        return true;\n    }\n}\n","import { Component } from '@angular/core';\nimport { I360Config } from 'app/utils/config/config';\n\n@Component({\n    selector: 'app',\n    templateUrl: './root.component.html',\n    providers: [\n        I360Config,\n    ],\n})\nexport class RootComponent {}\n","<i360-help-link></i360-help-link>\n<router-outlet></router-outlet>\n","<div class=\"card-container\">\n    <i360-header>\n        <mat-icon class=\"hidden-xs\">settings</mat-icon>\n        {{ 'settings.title' | translate }}\n    </i360-header>\n    <div class=\"flexer justify-beetween\">\n        <i360-tabs>\n            <a routerLink=\"general\" routerLinkActive=\"active\" translate>settings.menu.general</a>\n            <a routerLink=\"notifications\" routerLinkActive=\"active\" translate>settings.menu.notifications</a>\n            <a routerLink=\"features-management\"\n               *ngIf=\"!(licenseState.license|async).isFreeVersion\"\n               routerLinkActive=\"active\" translate>settings.menu.featuresManagement</a>\n        </i360-tabs>\n    </div>\n    <router-outlet></router-outlet>\n</div>\n","import { Component } from '@angular/core';\nimport { LicenseState } from 'app/services/license-state';\n\n@Component({\n    templateUrl: './settings-index-av.component.html',\n    styleUrls: [`../../settings/settings-index.component.scss`],\n})\nexport class SettingsIndexAVComponent {\n    constructor(\n        public licenseState: LicenseState,\n    ) {}\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FeatureName } from '@imunify360-api/features-management';\nimport { MalwareHistoryComponent } from 'app/components/malware/history/history.component';\nimport { IgnoreListComponent } from 'app/components/malware/ignore-list/ignore-list.component';\nimport { MaliciousComponent } from 'app/components/malware/malicious/malicious.component';\nimport { UserListComponent } from 'app/components/malware/user-list/user-list.component';\nimport {\n    FeaturesManagementWrapperComponent,\n} from 'app/components/settings/features-management/wrapper/wrapper.component';\nimport { UserFeaturesStatusGuard } from 'app/core/user-features-status.guard';\nimport { SettingsComponent } from 'app/components/av/settings/general/settings.component';\nimport { UpgradeComponent } from './upgrade/upgrade.component';\nimport { UpgradeGuard } from './guards/upgrade-guard';\nimport { RootComponent } from 'app/components/av/root/root.component';\nimport { SUPPORT_ROUTE } from 'app/components/support/route';\nimport { UnsavedConfigRouteGuard } from 'app/core/unsaved-route-guard';\nimport { SettingsIndexAVComponent } from 'app/components/av/settings/settings-index-av.component';\nimport { FiltersService } from 'app/services/filters';\nimport { MalwareIndexComponent } from '../malware/malware-index.component';\nimport { MalwareOnDemandScanComponent } from '../malware/on-demand/on-demand-scan.component';\nimport { UpgradeNeededComponent } from '../../upgrade-needed/upgrade-needed.component';\nimport { SETTINGS_NOTIFICATION_ROUTE } from '../settings/notifications/route';\nimport { EULA_ROUTE } from 'app/components/eula/eula.module';\nimport { AuthService } from 'app/services/auth';\n\n\nconst routes: Routes = [\n    {\n        path: 'admin',\n        component: RootComponent,\n        canActivate: [AuthService],\n        children: [\n            {\n                path: '',\n                pathMatch: 'full',\n                redirectTo: 'malware',\n            },\n            {\n                path: 'malware',\n                component: MalwareIndexComponent,\n                children: [\n                    {path: '', redirectTo: 'user-list', pathMatch: 'full'},\n                    {\n                        path: 'user-list',\n                        component: UserListComponent,\n                        canActivate: [FiltersService],\n                        runGuardsAndResolvers: 'paramsOrQueryParamsChange',\n                    },\n                    {\n                        path: 'files',\n                        component: MaliciousComponent,\n                        canActivate: [FiltersService],\n                        runGuardsAndResolvers: 'paramsOrQueryParamsChange',\n                    },\n                    {\n                        path: 'on-demand-scan',\n                        component: MalwareOnDemandScanComponent,\n                        canActivate: [FiltersService],\n                        runGuardsAndResolvers: 'paramsOrQueryParamsChange',\n                    },\n                    {\n                        path: 'history',\n                        component: MalwareHistoryComponent,\n                        canActivate: [FiltersService],\n                        runGuardsAndResolvers: 'paramsOrQueryParamsChange',\n                    },\n                    {\n                        path: 'ignore-list',\n                        component: IgnoreListComponent,\n                        canActivate: [FiltersService],\n                        runGuardsAndResolvers: 'paramsOrQueryParamsChange',\n                    },\n                ],\n                canActivate: [FiltersService],\n                runGuardsAndResolvers: 'always',\n            },\n            {\n                path: SUPPORT_ROUTE.path,\n                loadChildren: SUPPORT_ROUTE.loadChildren,\n            },\n            {\n                path: 'settings',\n                component: SettingsIndexAVComponent,\n                children: [\n                    {path: '', redirectTo: 'general', pathMatch: 'full'},\n                    {\n                        path: 'general',\n                        component: SettingsComponent,\n                        canDeactivate: [UnsavedConfigRouteGuard],\n                    },\n                    SETTINGS_NOTIFICATION_ROUTE,\n                    {\n                        path: 'features-management',\n                        component: FeaturesManagementWrapperComponent,\n                        canActivate: [FiltersService],\n                        runGuardsAndResolvers: 'paramsOrQueryParamsChange',\n                    },\n                ],\n            },\n            {\n                path: 'upgrade',\n                component: UpgradeComponent,\n                canActivate: [UpgradeGuard],\n            },\n            {\n                path: 'reputation-management',\n                loadChildren: () => import('../reputation/reputation.module')\n                    .then(m => m.ReputationModule),\n            },\n            {\n                path: 'firewall',\n                component: UpgradeNeededComponent,\n                data: { name: 'firewall'},\n            },\n            {\n                path: 'proactive-defense',\n                component: UpgradeNeededComponent,\n                data: { name: 'pd'},\n            },\n            {\n                path: 'kernelcare',\n                component: UpgradeNeededComponent,\n                data: { name: 'kernelcare'},\n            },\n            EULA_ROUTE,\n        ],\n    },\n    {\n        path: 'client',\n        component: RootComponent,\n        canActivate: [AuthService, UserFeaturesStatusGuard],\n        canActivateChild: [UserFeaturesStatusGuard],\n        children: [\n            {\n                path: '',\n                pathMatch: 'full',\n                redirectTo: 'malware',\n            },\n            {\n                path: 'malware',\n                component: MalwareIndexComponent,\n                children: [\n                    {path: '', redirectTo: 'files', pathMatch: 'full'},\n                    {\n                        path: 'files',\n                        component: MaliciousComponent,\n                        data: { feature: FeatureName.av },\n                        canActivate: [FiltersService],\n                        runGuardsAndResolvers: 'paramsOrQueryParamsChange',\n                    },\n                    {\n                        path: 'on-demand-scan',\n                        component: MalwareOnDemandScanComponent,\n                        data: { feature: FeatureName.av },\n                        canActivate: [FiltersService],\n                        runGuardsAndResolvers: 'paramsOrQueryParamsChange',\n                    },\n                    {\n                        path: 'history',\n                        component: MalwareHistoryComponent,\n                        data: { feature: FeatureName.av },\n                        canActivate: [FiltersService],\n                        runGuardsAndResolvers: 'paramsOrQueryParamsChange',\n                    },\n                    {\n                        path: 'ignore-list',\n                        component: IgnoreListComponent,\n                        data: { feature: FeatureName.av },\n                        canActivate: [FiltersService],\n                        runGuardsAndResolvers: 'paramsOrQueryParamsChange',\n                    },\n                ],\n                canActivate: [FiltersService],\n                runGuardsAndResolvers: 'always',\n            },\n        ],\n    },\n   {\n        path: 'client/features-disabled',\n        loadChildren: () => import('../features-disabled/features-disabled.module')\n            .then(m => m.FeaturesDisabledModule),\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class AvRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router,\n    RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { AuthState } from 'app/services/auth-state';\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n    constructor(private authState: AuthState, private router: Router) {}\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree {\n        if (this.authState.isClient.value) {\n            this.router.navigate(['/', 'AV', 'malware', 'files']);\n            return false;\n        }\n        return true;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { UpgradeIframeComponent } from './upgrade-iframe.component';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n    imports: [CommonModule, TranslateModule],\n    declarations: [UpgradeIframeComponent],\n    exports: [UpgradeIframeComponent]\n})\nexport class UpgradeIframeModule {}\n","import { NgModule } from '@angular/core';\nimport { UpgradeComponent } from './upgrade.component';\nimport { CommonModule } from '@angular/common';\nimport { I360LoaderModule } from 'app/utils/loader/loader.module';\nimport { I360TableModule } from 'app/utils/table/table.module';\nimport { MatIconModule } from '@angular/material/icon';\nimport { I360ButtonModule } from 'app/utils/button/button.module';\nimport { UpgradeIframeModule } from './upgrade-iframe/upgrade-iframe.module';\nimport { I360TranslateModule } from 'app/utils/translate/translate.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        I360TranslateModule,\n        I360LoaderModule,\n        I360TableModule,\n        MatIconModule,\n        I360ButtonModule,\n        UpgradeIframeModule\n    ],\n    declarations: [UpgradeComponent],\n    exports: [UpgradeComponent]\n})\nexport class UpgradeModule {}\n","import { I360ConfigModule } from 'app/utils/config/config.module';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { I360NoContentModule } from 'app/components/no-content/no-content.module';\nimport { ClMalwareModule } from 'app/components/malware/malware.module';\nimport { I360TranslateModule } from 'app/utils/translate/translate.module';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport {\n    AddToIgnoreListActionComponent,\n} from 'app/components/malware/actions/add-to-ignore-list-action.component';\nimport {\n    ViewFileActionComponent,\n} from 'app/components/malware/actions/view-file-action.component';\nimport {\n    CleanupActionComponent,\n} from 'app/components/malware/actions/cleanup-action.component';\nimport {\n    RestoreOriginalActionComponent,\n} from 'app/components/malware/actions/restore-original-action.component';\nimport { I360NotificationsModule } from 'app/components/notification/notifications.module';\nimport { I360TableModule } from 'app/utils/table/table.module';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { UserFeaturesStatusGuard } from 'app/core/user-features-status.guard';\nimport { AvRoutingModule } from './av-routing.module';\nimport { AuthService } from 'app/services/auth';\nimport { GetConfigSchema } from 'app/utils/config/config';\nimport { getSchema } from 'app/utils/config/antivirus-config';\nimport { I360CircleProgressModule } from 'app/utils/circle-progress/circle-progress.module';\nimport { RootComponent } from './root/root.component';\nimport { SettingsComponent } from 'app/components/av/settings/general/settings.component';\nimport { I360ValidationModule } from 'app/utils/validator/validation.module';\nimport { I360SettingsModule } from 'app/components/settings/settings.module';\nimport { I360LoaderModule } from 'app/utils/loader/loader.module';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonModule } from '@angular/material/button';\nimport { XHR } from 'app/utils/xhr/xhr';\nimport { AdminGuard } from './guards/admin-guard';\nimport { FeaturesManagementService } from 'app/services/features-management';\nimport {\n    I360FeaturesManagementModule,\n} from 'app/components/settings/features-management/features-management.module';\nimport { UpgradeGuard } from './guards/upgrade-guard';\nimport { MatIconModule } from '@angular/material/icon';\nimport { I360ButtonModule } from 'app/utils/button/button.module';\nimport { CommonModule } from '@angular/common';\nimport { SettingsService } from 'app/services/settings';\nimport { angular18894CrutchProvider } from 'app/core/misc';\nimport { SessionExpiredInterceptor } from 'app/interceptors/session-expired.interceptor';\nimport { FileService } from 'app/services/file';\nimport { I360MenuProfileModule } from 'app/components/menu-profile/menu-profile.module';\nimport { LicenseService } from 'app/services/license';\nimport { TextInputModule } from 'app/components/text-input/text-input.module';\nimport { StatisticsService } from 'app/services/statistics';\nimport { ReputationService } from 'app/services/reputation';\nimport { SettingsIndexAVComponent } from 'app/components/av/settings/settings-index-av.component';\nimport { I360NavigationTabsModule } from 'app/components/navigation-tabs/navigation-tabs.module';\nimport { EulaInterceptor } from 'app/components/eula/eula.interceptor';\nimport { EulaService } from 'app/components/eula/eula.service';\nimport { EulaGuard } from 'app/components/eula/eula.guard';\nimport { UpgradeNeededModule } from '../../upgrade-needed/upgrade-needed.module';\nimport { SettingsNotificationModule } from '../settings/notifications/settings-notification.module';\nimport { UserFeaturesStatusService } from 'app/services/user-features-status';\nimport { UpgradeModule } from './upgrade/upgrade.module';\n\n@NgModule({\n    bootstrap: [RootComponent],\n    imports: [\n        CommonModule,\n        AvRoutingModule,\n        HttpClientModule,\n        ClMalwareModule.import({\n            maliciousActions: [\n                ViewFileActionComponent,\n                CleanupActionComponent,\n                RestoreOriginalActionComponent,\n                AddToIgnoreListActionComponent,\n            ],\n        }),\n        I360NotificationsModule,\n        I360TableModule,\n        I360CircleProgressModule,\n        I360NoContentModule,\n        I360ConfigModule,\n        I360ValidationModule,\n        I360SettingsModule,\n        I360LoaderModule,\n        I360FeaturesManagementModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatButtonModule,\n        I360ButtonModule,\n        MatIconModule,\n        MatMenuModule,\n        I360TranslateModule,\n        I360MenuProfileModule,\n        TextInputModule,\n        I360NavigationTabsModule,\n        UpgradeNeededModule,\n        SettingsNotificationModule,\n        UpgradeModule,\n    ],\n    declarations: [\n        RootComponent,\n        SettingsComponent,\n        SettingsIndexAVComponent,\n    ],\n    providers: [\n        { provide: GetConfigSchema, useValue: getSchema },\n        angular18894CrutchProvider,\n        EulaService,\n        EulaGuard,\n        XHR,\n        AdminGuard,\n        UpgradeGuard,\n        SettingsService,\n        // should be here to allow AuthService\n        // be interceptor for requests from this service\n        FileService,\n        LicenseService,\n        StatisticsService,\n        FeaturesManagementService,\n        UserFeaturesStatusService,\n        UserFeaturesStatusGuard,\n        { provide: HTTP_INTERCEPTORS, useClass: SessionExpiredInterceptor, multi: true},\n        { provide: HTTP_INTERCEPTORS, useExisting: AuthService, multi: true },\n        { provide: HTTP_INTERCEPTORS, useClass: EulaInterceptor, multi: true},\n        ReputationService,\n    ],\n})\nexport class AvModule {\n    constructor(statisticsService: StatisticsService) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, filter, map, take, tap } from 'rxjs';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    CanActivateChild,\n    Router,\n    RouterStateSnapshot,\n} from '@angular/router';\nimport { BoolFeature, ClientFeatures } from '@imunify360-api/features-management';\nimport { AuthState } from 'app/services/auth-state';\nimport { RequestsState } from 'app/services/requests-state';\nimport { UserFeaturesStatusService } from 'app/services/user-features-status';\n\n\n@Injectable()\nexport class UserFeaturesStatusGuard implements CanActivate, CanActivateChild {\n    constructor(\n        private authState: AuthState,\n        private requestsState: RequestsState,\n        private userFeaturesStatusService: UserFeaturesStatusService,\n        private router: Router,\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean>|boolean {\n        if (this.authState.isAdmin.value) {\n            return true;\n        }\n        return this.requestsState.hasEnabledFeatures.pipe(\n            filter(hasEnabledFeatures => hasEnabledFeatures != null),\n            take(1),\n            tap((hasEnabledFeatures: boolean) => {\n                if (!hasEnabledFeatures) {\n                    this.router.navigate(this.authState.featuresDisabledCommands);\n                }\n            }),\n        );\n    }\n\n    canActivateChild(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot,\n    ): Observable<boolean>|boolean {\n        if (this.authState.isAdmin.value) {\n            return true;\n        }\n        return this.requestsState.clientFeatures.cache.pipe(\n            take(1),\n            map((features: ClientFeatures) => {\n                const feature = route.data.feature;\n                const enabled = features[feature] !== BoolFeature.na;\n                if (!enabled) {\n                    const children = route.parent!.routeConfig!.children || [];\n                    const child = children.find((child) =>\n                        !!child.data && features[child.data.feature] !== BoolFeature.na,\n                    );\n\n                    if (child) {\n                        this.router.navigate(\n                            this.authState.getDisabledRouteCommands(child),\n                        );\n                    }\n\n                    return false;\n                }\n                return true;\n            }),\n        );\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { LicenseState } from 'app/services/license-state';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n    selector: 'upgrade-needed',\n    styleUrls: ['./upgrade-needed.component.scss'],\n    templateUrl: './upgrade-needed.component.html',\n})\nexport class UpgradeNeededComponent {\n    @Input() description: string|null = null;\n    @Input() title: string|null = null;\n    constructor(\n        public route: ActivatedRoute,\n        public licenseState: LicenseState,\n    ) {}\n}\n","<div class=\"card-container upgrade-needed_component\">\n    <div class=\"text-center\">\n        <mat-icon svgIcon=\"rocket\"></mat-icon>\n        <p class=\"title\">{{ title || 'upgradeNeeded.title' | translate: {name: (route.data|async)?.name} }}</p>\n        <p class=\"description\" translate>{{ description || 'upgradeNeeded.' + (route.data|async)?.name }}</p>\n        <a i360-button\n           [round]=\"true\"\n           [primary]=\"true\"\n           class=\"upgrade-button\"\n           target=\"_blank\"\n           href=\"{{(licenseState.license|async).upgrade_url_360}}\">\n            {{ 'upgradeNeeded.upgrade' | translate }}\n        </a>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CommonModule } from '@angular/common';\nimport { UpgradeNeededComponent } from './upgrade-needed.component';\nimport { I360ButtonModule } from '../utils/button/button.module';\nimport { I360TranslateModule } from '../utils/translate/translate.module';\n\n@NgModule({\n    imports: [\n        MatIconModule,\n        CommonModule,\n        I360ButtonModule,\n        I360TranslateModule,\n    ],\n    declarations: [UpgradeNeededComponent],\n    exports: [\n        UpgradeNeededComponent,\n    ],\n})\nexport class UpgradeNeededModule {}\n"],"names":["i0","SettingsComponent","constructor","licenseState","permissions","i1","i2","selectors","decls","vars","consts","template","rf","ctx","SettingsComponent_i360_settings_field_8_Template","SettingsComponent_i360_malware_cleanup_section_17_Template","_r0","form","license","isFreeVersion","MS_CLEAN","ctx_r0","upgradeIframeSrc","UpgradeIframeComponent","detector","sanitizer","renderer","ngZone","window","iframeLoaded","EventEmitter","isReady","this","listenMessageFromIframe","ngOnChanges","changes","lang","getIframeUrl","ngOnDestroy","stopListening","listen","event","handleWindowMessage","data","run","postIframeData","detectChanges","emit","iframeWindow","upgradeIframe","nativeElement","contentWindow","location","upgrade_url","upgrade_url_360","startsWith","origin","pathname","product","pricing","im_av","standard","im_360","priceFull","postMessage","JSON","stringify","token","iaidToken","url","bypassSecurityTrustResourceUrl","viewQuery","UpgradeIframeComponent_iframe_0_Template","ctx_r4","UpgradeComponent_div_1_div_1_div_27_Template","_r6","ctx_r5","buy","ctx_r2","ctx_r3","UpgradeComponent_div_1_div_1_Template","UpgradeComponent_div_1_div_44_Template","_r8","ctx_r7","Product","imunifyAVPlus","_r10","ctx_r9","onIframeLoaded","ctx_r1","UpgradeComponent","translateService","authCloudService","iframeLoadingTimeout","isIframeLoaded","destroy$","Subject","currentLang","loadData","waitIframe","listenLangChange","ngAfterViewInit","loader","show","next","clearTimeout","iframeTimeoutId","upgradeUrl","open","hide","markForCheck","iaidToken$","getIaidToken","combineLatest","pipe","takeUntil","subscribe","setLicense","error","noop","onLangChange","value","getFullPrice","count","user_count","getPrice","setTimeout","i","LicensePriceCounts","entry","String","im_360_unlimited","i3","LoaderDirective","UpgradeComponent_div_1_Template","UpgradeComponent_i360_upgrade_iframe_2_Template","UpgradeGuard","router","canActivate","route","state","upgradeAvailable","navigate","factory","ɵfac","RootComponent","features","I360Config","SettingsIndexAVComponent","SettingsIndexAVComponent_a_12_Template","routes","path","component","AuthService","children","pathMatch","redirectTo","MalwareIndexComponent","UserListComponent","FiltersService","runGuardsAndResolvers","MaliciousComponent","MalwareOnDemandScanComponent","MalwareHistoryComponent","IgnoreListComponent","SUPPORT_ROUTE","loadChildren","canDeactivate","UnsavedConfigRouteGuard","SETTINGS_NOTIFICATION_ROUTE","FeaturesManagementWrapperComponent","then","m","ReputationModule","UpgradeNeededComponent","name","EULA_ROUTE","UserFeaturesStatusGuard","canActivateChild","feature","FeatureName","FeaturesDisabledModule","AvRoutingModule","RouterModule","AdminGuard","authState","isClient","UpgradeIframeModule","CommonModule","TranslateModule","UpgradeModule","I360TranslateModule","I360LoaderModule","I360TableModule","MatIconModule","I360ButtonModule","AvModule","statisticsService","bootstrap","provide","GetConfigSchema","useValue","getSchema","angular18894CrutchProvider","EulaService","EulaGuard","XHR","SettingsService","FileService","LicenseService","StatisticsService","FeaturesManagementService","UserFeaturesStatusService","HTTP_INTERCEPTORS","useClass","SessionExpiredInterceptor","multi","useExisting","EulaInterceptor","ReputationService","imports","HttpClientModule","ClMalwareModule","maliciousActions","ViewFileActionComponent","CleanupActionComponent","RestoreOriginalActionComponent","AddToIgnoreListActionComponent","I360NotificationsModule","I360CircleProgressModule","I360NoContentModule","I360ConfigModule","I360ValidationModule","I360SettingsModule","I360FeaturesManagementModule","MatTooltipModule","MatCheckboxModule","MatButtonModule","MatMenuModule","I360MenuProfileModule","TextInputModule","I360NavigationTabsModule","UpgradeNeededModule","SettingsNotificationModule","requestsState","userFeaturesStatusService","isAdmin","hasEnabledFeatures","filter","take","tap","featuresDisabledCommands","clientFeatures","cache","map","BoolFeature","child","parent","routeConfig","find","getDisabledRouteCommands","i4","description","title","inputs","_c0","tmp_0_0","tmp_1_0"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}