{"version":3,"file":"src_app_components_proactive-defense_proactive-defense_module_ts.js","mappings":"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","sources":["./src/app/services/proactive-defense.ts","./src/app/components/proactive-defense/details/details.component.html","./src/app/components/proactive-defense/details/details.component.ts","./src/app/components/proactive-defense/utils/ignore-confirm-modal.component.ts","./src/app/components/proactive-defense/events/events.component.html","./src/app/components/proactive-defense/events/events.component.ts","./src/app/components/chip/chip.directive.ts","./src/app/components/proactive-defense/ignore-list/ignore-list.component.html","./src/app/components/proactive-defense/ignore-list/ignore-list.component.ts","./src/app/components/proactive-defense/mode/mode.component.html","./src/app/components/proactive-defense/mode/mode.component.ts","./src/app/components/proactive-defense/proactive-defense.component.html","./src/app/components/proactive-defense/proactive-defense.component.ts","./src/app/components/proactive-defense/proactive-defense.module.ts","./src/app/services/lists.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { map } from 'rxjs';\nimport {\n    ProactiveDefenseAPI, ProactiveDefenseDetails,\n    ProactiveDefenseIgnoreItem, ProactiveDefenseItem,\n} from '@imunify360-api/proactive-defense';\nimport { XHR } from 'app/utils/xhr/xhr';\n\n\n/**\n * TODO: add scope when migrate to 6\n */\n@Injectable()\nexport class ProactiveDefenseService {\n    constructor(public xhr: XHR) {}\n\n    _ignoreList = this.xhr.rx(ProactiveDefenseAPI.ignoreList);\n    ignoreList = this.xhr.wrap(this._ignoreList, ProactiveDefenseIgnoreItem);\n    ignoreAdd = this.xhr.rx(ProactiveDefenseAPI.ignoreAdd);\n    ignoreDeletePaths = this.xhr.rx(\n        ProactiveDefenseAPI.ignoreDeletePaths);\n    ignoreDeleteRule = this.xhr.rx(ProactiveDefenseAPI.ignoreDeleteRule);\n\n    _list = this.xhr.rx(ProactiveDefenseAPI.list);\n    list = this.xhr.wrap(this._list, ProactiveDefenseItem);\n    private _details = this.xhr.rx(ProactiveDefenseAPI.details);\n    details(id: number) {\n        return this._details(id).pipe(\n            map(result => new ProactiveDefenseDetails(result.data.items)),\n        );\n    }\n}\n","<i360-modal-content\n        [showConfirm]=\"false\"\n        [showCancel]=\"false\">\n    <ng-container modal-title>\n        {{data.rule_name}}\n    </ng-container>\n    <div modal-body>\n        <div i360-description\n             *ngIf=\"data.description\"\n             class=\"main-description\">\n            {{data.description}}\n        </div>\n        <div>\n            <button\n                    mat-raised-button\n                    *ngIf=\"data.rule_id !== null\"\n                    id=\"details-ignore-detected\"\n                    (click)=\"addToIgnore(true)\"\n                    color=\"\">\n                {{ 'pd.details.ignore.detected' | translate }}\n            </button>\n            <button\n                    mat-raised-button\n                    id=\"details-ignore-all\"\n                    (click)=\"addToIgnore()\"\n                    color=\"\">\n                {{ 'pd.details.ignore.all' | translate }}\n            </button>\n            <button mat-raised-button\n                    id=\"details-view-file\"\n                    (click)=\"viewFile()\">\n                {{ 'pd.details.viewFileContent' | translate }}\n            </button>\n        </div>\n        <div class=\"details-data\" i360Loader>\n            <div class=\"details-data-column\">\n                <div class=\"details-data-item\">\n                    <div class=\"details-data-title\" translate>pd.details.titles.url</div>\n                    <div class=\"details-data-value rtl-except\" id=\"details-url\">{{data.url}}</div>\n                </div>\n                <div class=\"details-data-item\" *ngIf=\"data.ip\">\n                    <div class=\"details-data-title\" translate>pd.details.titles.ip</div>\n                    <div class=\"details-data-value\">\n                        <i360-colored-ip [listName]=\"data.purpose\">\n                            {{data.ip}}\n                            <ng-container *ngIf=\"data.country\">\n                                ({{data.country}})\n                            </ng-container>\n                        </i360-colored-ip>\n                        <div i360-description translate>pd.details.onlyOne</div>\n                        <div class=\"flexer flex-nowrap\" *ngIf=\"(authState.isAdmin|async)\">\n                            <button mat-button\n                                    id=\"details-add-to-black\"\n                                    (click)=\"addToBlackList()\"\n                                    *ngIf=\"data.purpose !== IPList.black && data.purpose !== IPList.drop\">\n                                {{ 'pd.details.blockIp' | translate }}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"details-data-item\">\n                    <div class=\"details-data-title\" translate>pd.details.titles.numberOfTimes</div>\n                    <div class=\"details-data-value\" id=\"details-number-of-times\">\n                        {{data.count}}\n                    </div>\n                </div>\n            </div>\n            <div class=\"details-data-column\">\n                <div class=\"details-data-item\">\n                    <div class=\"details-data-title\" translate>pd.details.titles.time</div>\n                    <div class=\"details-data-value\" id=\"details-time\">\n                        {{(1000*data.timestamp)|date:'dd-MM-yyyy HH:mm a'}}\n                    </div>\n                </div>\n                <div class=\"details-data-item\">\n                    <div class=\"details-data-title\" translate>pd.details.titles.action</div>\n                    <div class=\"details-data-value\" id=\"details-action\">\n                        {{data.action}}\n                    </div>\n                </div>\n                <div class=\"details-data-item\">\n                    <div class=\"details-data-title\" translate>pd.details.titles.scriptPath</div>\n                    <div class=\"details-data-value rtl-except\" id=\"details-script-path\">\n                        {{data.path}}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div>\n            <i360-header>\n                {{ 'pd.details.environment' | translate }}\n            </i360-header>\n            <i360-table class=\"fixedLayout\">\n                <i360-column headerText=\"pd.details.headers.name\">\n                    <ng-template i360HostTemplate let-item>\n                        {{item.name}}\n                    </ng-template>\n                </i360-column>\n                <i360-column headerText=\"pd.details.headers.value\">\n                    <ng-template i360HostTemplate let-item>\n                        {{item.value}}\n                    </ng-template>\n                </i360-column>\n            </i360-table>\n        </div>\n    </div>\n</i360-modal-content>\n","import {\n    forwardRef, Component, Inject, Optional, ViewChild, ViewEncapsulation,\n} from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { IPList } from '@imunify360-api/lists';\nimport {\n    ProactiveDefenseDetails,\n    ProactiveDefenseIgnoreData,\n} from '@imunify360-api/proactive-defense';\nimport { AuthState } from 'app/services/auth-state';\nimport { ListsService } from 'app/services/lists';\nimport { ProactiveDefenseService } from 'app/services/proactive-defense';\nimport { useLoader } from 'app/utils/loader/decorators';\nimport { LoaderDirective } from 'app/utils/loader/loader.directive';\nimport { ModalService } from 'app/utils/modals/modal.service';\nimport { ModalEntry } from 'app/utils/modals/entry';\nimport { DataLoader, DataLoaderImpl } from 'app/utils/table/data-loader';\nimport { ProactiveDefenseEventsComponent } from '../events/events.component';\n\n\n@Component({\n    templateUrl: './details.component.html',\n    styleUrls: ['./details.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [{\n        provide: DataLoaderImpl,\n        useExisting: DetailsComponent,\n    }],\n})\nexport class DetailsComponent extends ModalEntry<ProactiveDefenseDetails, false>\n    implements DataLoader {\n    IPList = IPList;\n    loaded = new BehaviorSubject([] as any[]);\n    @ViewChild(LoaderDirective, {static: true}) loader: LoaderDirective;\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: ProactiveDefenseDetails,\n                private modalService: ModalService,\n                public authState: AuthState,\n                private proactiveDefenseService: ProactiveDefenseService,\n                @Inject(forwardRef(() => ProactiveDefenseEventsComponent))\n                public eventsComponent: ProactiveDefenseEventsComponent,\n                @Optional() private listsService: ListsService,\n        ) {\n        super();\n        this.loaded.next(data.env);\n    }\n\n    @useLoader\n    async addToBlackList() {\n        if (await this.listsService.changeListWithConfirm(\n            [this.data.ip!], this.data.listname, IPList.black,\n        ) ) {\n            this.data.listname = IPList.black;\n        }\n    }\n\n    @useLoader\n    async addToIgnore(detectedOnly: boolean = false) {\n        await this.eventsComponent.addToIgnore(\n            [this.data as ProactiveDefenseIgnoreData], detectedOnly);\n    }\n\n    @useLoader\n    async viewFile() {\n        await this.modalService.openFileViewer(this.data.path);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { ProactiveDefenseIgnoreData } from '@imunify360-api/proactive-defense';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ModalEntry } from 'app/utils/modals/entry';\n\ninterface IgnoreConfirmModalComponentParams {\n    detectedOnly: boolean;\n    items: ProactiveDefenseIgnoreData[];\n}\n\n@Component({\n    template: `\n        <i360-modal-content\n                confirmText=\"pd.addToIgnoreModal.confirm\"\n                id=\"ignore-confirm-modal\">\n            <ng-container modal-title>{{ title | translate }}</ng-container>\n            <ng-container modal-body>\n                <p *ngFor=\"let item of groupedItems\" class=\"rtl-except break-word\">\n                    <strong>{{ 'pd.addToIgnoreModal.path' | translate }}</strong>\n                     {{ item.path }}<br/>\n                    <ng-container *ngIf=\"item.rules\">\n                        <strong>{{ 'pd.addToIgnoreModal.rules' | translate }}</strong>\n                         {{ item.rules }}\n                    </ng-container>\n                </p>\n            </ng-container>\n        </i360-modal-content>\n    `,\n})\nexport class IgnoreConfirmModalComponent\n    extends ModalEntry<IgnoreConfirmModalComponentParams, false> {\n    title: string;\n    groupedItems: Array<{path: string, rules?: string}> = [];\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data: IgnoreConfirmModalComponentParams,\n    ) {\n        super();\n        this.title = data.detectedOnly\n            ? 'pd.addToIgnoreModal.title.detectedOnly'\n            : 'pd.addToIgnoreModal.title.all';\n\n        if (data.detectedOnly) {\n            const ruleIdToName: {[id: number]: string} = {};\n            let rulesByPath: {[path: string]: Set<number>} = {};\n            for (let item of data.items) {\n                if (!rulesByPath[item.path]) {\n                    rulesByPath[item.path] = new Set();\n                }\n                rulesByPath[item.path].add(item.rule_id!);\n                ruleIdToName[item.rule_id!] = item.rule_name!;\n            }\n\n            for (let [path, rules] of Object.entries(rulesByPath)) {\n                this.groupedItems.push({\n                    path,\n                    rules: Array.from(rules).map(id => ruleIdToName[id]).join(', '),\n                });\n            }\n        } else {\n            const uniquePaths = new Set(data.items.map(item => item.path));\n            this.groupedItems = Array.from(uniquePaths).map(path => ({path}));\n        }\n\n    }\n}\n","<div>\n    <i360-data-view [i360-request]=\"proactiveDefenseService.list\">\n        <i360-action\n                [filter]=\"{rule_id: null, NEGATE: true}\"\n                icon=\"visibility_off\"\n                (perform)=\"addToIgnore($event, true)\"\n                title=\"pd.events.groupActions.ignoreDetected\">\n        </i360-action>\n        <i360-action\n                icon=\"ignore-all\"\n                (perform)=\"addToIgnore($event)\"\n                title=\"pd.events.groupActions.ignoreAll\">\n        </i360-action>\n        <i360-widget i360-timeframe></i360-widget>\n        <i360-widget i360-search></i360-widget>\n        <i360-widget i360-paginator [simplePagination]=\"true\"></i360-widget>\n        <i360-widget i360-limit></i360-widget>\n        <i360-table i360-main-view i360-sortable [defaultValue]=\"['timestamp-']\">\n            <i360-checkbox-column labelField=\"path\"></i360-checkbox-column>\n            <i360-column>\n                <i360-sort-header field=\"timestamp\" startWith=\"-\">\n                    {{ 'pd.events.headers.detectionTime' | translate }}\n                </i360-sort-header>\n                <clock *i360HostTemplate=\"let item\"\n                       [timestamp]=\"item.timestamp\">\n                </clock>\n            </i360-column>\n            <i360-column>\n                <i360-sort-header field=\"rule_name\">\n                    {{ 'pd.events.headers.reason' | translate }}\n                </i360-sort-header>\n                <ng-template i360HostTemplate let-item>\n                    {{item.rule_name}}\n                </ng-template>\n            </i360-column>\n            <i360-column classes=\"rtl-except\">\n                <i360-sort-header field=\"path\">\n                    {{ 'pd.events.headers.scriptPath' | translate }}\n                </i360-sort-header>\n                <ng-template i360HostTemplate let-item>\n                    {{item.path}}\n                    <div class=\"tries-count\">{{item.count}}</div>\n                </ng-template>\n            </i360-column>\n            <i360-column bodyField=\"host\">\n                <i360-sort-header field=\"host\">\n                    {{ 'pd.events.headers.host' | translate }}\n                </i360-sort-header>\n            </i360-column>\n            <i360-column>\n                <i360-sort-header field=\"ip\">\n                    {{ 'pd.events.headers.ip' | translate }}\n                </i360-sort-header>\n                <ng-container *i360HostTemplate=\"let item\">\n                    <i360-colored-ip\n                            *ngIf=\"item.ip\"\n                            [listName]=\"item.purpose\">\n                        {{item.ip}}\n                    </i360-colored-ip>\n                </ng-container>\n            </i360-column>\n            <i360-column>\n                <i360-sort-header field=\"action\">\n                    {{ 'pd.events.headers.action' | translate }}\n                </i360-sort-header>\n                <div *i360HostTemplate=\"let item\" class=\"text-nowrap\">\n                    <div class=\"severity-icon {{item.action|lowercase}}\"></div>\n                    {{item.action}}\n                </div>\n            </i360-column>\n            <i360-actions-column>\n                <i360-action\n                        (perform)=\"showDetails($event[0].id)\"\n                        title=\"pd.events.actions.viewDetails\"\n                        icon=\"remove_red_eye\"></i360-action>\n                <i360-action i360-group-actions>\n                    <i360-action\n                            (perform)=\"viewFile($event[0])\"\n                            title=\"pd.events.actions.viewFileContent\">\n                    </i360-action>\n                    <i360-action\n                            [filter]=\"{rule_id: null, NEGATE: true}\"\n                            (perform)=\"addToIgnore($event, true)\"\n                            title=\"pd.events.actions.ignoreDetected\">\n                    </i360-action>\n                    <i360-action\n                            (perform)=\"addToIgnore($event)\"\n                            title=\"pd.events.actions.ignoreAll\">\n                    </i360-action>\n                </i360-action>\n            </i360-actions-column>\n        </i360-table>\n    </i360-data-view>\n</div>\n","import { Component, OnDestroy, ViewChild, ViewContainerRef } from '@angular/core';\nimport { Subject, firstValueFrom, switchMap, takeUntil, tap } from 'rxjs';\n\nimport {\n    ProactiveDefenseIgnoreData,\n    ProactiveDefenseItem,\n} from '@imunify360-api/proactive-defense';\nimport { NotificationsService } from 'app/services/notifications';\nimport { ProactiveDefenseService } from 'app/services/proactive-defense';\nimport { LoaderDirective } from 'app/utils/loader/loader.directive';\nimport { useLoader } from 'app/utils/loader/decorators';\nimport { ModalService } from 'app/utils/modals/modal.service';\nimport { RequestDirective } from 'app/utils/table/request/request.directive';\nimport { DetailsComponent } from '../details/details.component';\nimport { IgnoreConfirmModalComponent } from '../utils/ignore-confirm-modal.component';\n\n@Component({\n    selector: 'i360-proactive-defense-events',\n    templateUrl: './events.component.html',\n    styleUrls: ['./events.component.scss'],\n})\nexport class ProactiveDefenseEventsComponent implements OnDestroy {\n    destroyed = new Subject<void>();\n    @ViewChild(LoaderDirective, {static: true}) loader: LoaderDirective;\n    @ViewChild(RequestDirective, {static: true}) request: RequestDirective;\n\n    constructor(\n        public proactiveDefenseService: ProactiveDefenseService,\n        private modalService: ModalService,\n        private notifications: NotificationsService,\n        private viewContainerRef: ViewContainerRef,\n    ) {}\n\n    @useLoader\n    async showDetails(id: number) {\n        await firstValueFrom(this.proactiveDefenseService.details(id).pipe(\n            switchMap(details => this.modalService.open(DetailsComponent, {\n                    data: details,\n                    panelClass: 'i360-pro-active-details-panel',\n                    viewContainerRef: this.viewContainerRef,\n                }),\n            ),\n            switchMap(() => this.request.load()), // listnames may change in details view\n            takeUntil(this.destroyed),\n        ), { defaultValue: undefined });\n    }\n    ngOnDestroy() {\n        this.destroyed.next();\n    }\n\n    @useLoader\n    async addToIgnore(items: ProactiveDefenseIgnoreData[], detectedOnly: boolean = false) {\n        const confirmed = await this.modalService\n            .open(IgnoreConfirmModalComponent, {data: {detectedOnly, items}});\n        if (confirmed) {\n            items = items.map(({path, rule_id, rule_name}) => ({\n                path,\n                ...(detectedOnly ? {rule_id, rule_name} : {}),\n            }));\n\n            await firstValueFrom(this.proactiveDefenseService.ignoreAdd({items}).pipe(tap(() => {\n                this.notifications.success(\n                    'pd.events.notifications.successfullyAddedToIgnore',\n                    null,\n                    {count: items.length},\n                );\n            })), { defaultValue: undefined });\n        }\n    }\n\n    @useLoader\n    async viewFile(item: ProactiveDefenseItem) {\n        await this.modalService.openFileViewer(item.path);\n    }\n}\n","import { Directive, HostListener } from '@angular/core';\nimport { MatChip } from '@angular/material/chips';\n\n\n@Directive({\n    selector: 'mat-chip[i360-chip]',\n})\nexport class ExtendMatChipDirective {\n    constructor(private chip: MatChip) {\n        this.chip.selectable = false;\n    }\n\n    @HostListener('click', ['$event']) onClick(event: Event) {\n        // remove the chip on click anywhere, not only the \"close\" icon\n        if (!/\\bmat-chip-remove\\b/.test((<HTMLElement>event.target).className)) {\n            this.chip.remove();\n        }\n    }\n}\n","<div>\n    <i360-data-view [i360-request]=\"proactiveDefenseService.ignoreList\">\n        <i360-widget i360-timeframe></i360-widget>\n        <i360-widget i360-search></i360-widget>\n        <i360-widget i360-paginator [simplePagination]=\"true\"></i360-widget>\n        <i360-widget i360-limit></i360-widget>\n        <i360-action\n                (perform)=\"deletePaths($event)\"\n                icon=\"delete\"\n                title=\"pd.ignoreList.groupActions.remove\">\n        </i360-action>\n        <i360-table i360-main-view i360-sortable [defaultValue]=\"['timestamp-']\">\n            <i360-checkbox-column labelField=\"path\"></i360-checkbox-column>\n            <i360-column>\n                <i360-sort-header field=\"timestamp\" startWith=\"-\">\n                    {{ 'pd.ignoreList.headers.dateTime' | translate }}\n                </i360-sort-header>\n                <clock *i360HostTemplate=\"let item\"\n                       [timestamp]=\"item.timestamp\">\n                </clock>\n            </i360-column>\n            <i360-column classes=\"rtl-except\">\n                <i360-sort-header field=\"path\">\n                    {{ 'pd.ignoreList.headers.path' | translate }}\n                </i360-sort-header>\n                <ng-template i360HostTemplate let-item>{{item.path}}</ng-template>\n            </i360-column>\n            <i360-column headerText=\"pd.ignoreList.headers.rules\">\n                <ng-template i360HostTemplate let-item>\n                    <mat-chip-list\n                            class=\"i360-chips\"\n                            attr.aria-label=\"{{ 'pd.ignoreList.headers.rules' | translate }}\"\n                            *ngIf=\"item.rules && item.rules.length; else allRules\">\n                        <mat-chip\n                                i360-chip\n                                *ngFor=\"let rule of item.rules\"\n                                [removable]=\"true\"\n                                (removed)=\"deleteRule(item, rule)\">\n                            <i360-ellipsis [text]=\"rule.name\"></i360-ellipsis>\n                            <mat-icon matChipRemove>close</mat-icon>\n                        </mat-chip>\n                    </mat-chip-list>\n                    <ng-template #allRules>\n                        <mat-chip-list\n                                class=\"i360-chips\"\n                                attr.aria-label=\"{{ 'pd.ignoreList.headers.rules' | translate }}\">\n                            <mat-chip i360-chip>{{ 'pd.ignoreList.allRulesChip' | translate }}</mat-chip>\n                        </mat-chip-list>\n                    </ng-template>\n                </ng-template>\n            </i360-column>\n            <i360-actions-column [width]=\"100\">\n                <i360-action\n                        icon=\"remove_red_eye\"\n                        (perform)=\"viewFile($event[0])\"\n                        title=\"pd.ignoreList.actions.viewFile\">\n                </i360-action>\n                <i360-action\n                        icon=\"delete\"\n                        title=\"pd.ignoreList.actions.remove\"\n                        (perform)=\"deletePaths($event)\">\n                </i360-action>\n            </i360-actions-column>\n        </i360-table>\n    </i360-data-view>\n</div>\n\n<ng-template let-data #removeModal>\n    <i360-modal-content\n            i360-dialog-template\n            confirmText=\"pd.ignoreList.removeModal.confirm\">\n        <ng-container modal-title>{{ 'pd.ignoreList.removeModal.title' | translate }}</ng-container>\n        <ng-container modal-body>\n            <p><strong>{{ 'pd.ignoreList.removeModal.path' | translate }}</strong> {{ data.item.path }}</p>\n            <p><strong>{{ 'pd.ignoreList.removeModal.rule' | translate }}</strong> {{ data.rule.name }}</p>\n        </ng-container>\n    </i360-modal-content>\n</ng-template>\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { ProactiveDefenseIgnoreItem } from '@imunify360-api/proactive-defense';\n\nimport { NotificationsService } from 'app/services/notifications';\nimport { ProactiveDefenseService } from 'app/services/proactive-defense';\nimport { useLoader } from 'app/utils/loader/decorators';\nimport { LoaderDirective } from 'app/utils/loader/loader.directive';\nimport { ModalService } from 'app/utils/modals/modal.service';\nimport { RequestDirective } from 'app/utils/table/request/request.directive';\nimport { firstValueFrom } from 'rxjs';\n\n\n@Component({\n    selector: 'i360-proactive-defense-ignore-list',\n    templateUrl: './ignore-list.component.html',\n})\nexport class ProactiveDefenseIgnoreListComponent {\n    @ViewChild(LoaderDirective, {static: true}) loader: LoaderDirective;\n    @ViewChild(RequestDirective, {static: true}) request: RequestDirective;\n    @ViewChild('removeModal', {static: true}) public removeModal: TemplateRef<any>;\n\n    constructor(public proactiveDefenseService: ProactiveDefenseService,\n                private modalService: ModalService,\n                private notifications: NotificationsService,\n                ) {}\n\n    @useLoader\n    async deletePaths(items: ProactiveDefenseIgnoreItem[]) {\n        const action = 'proactive-remove-from-ignore';\n        const paths = items.map(item => item.path);\n        if (await this.modalService.confirm(action, paths)) {\n            await firstValueFrom(\n                this.proactiveDefenseService.ignoreDeletePaths({paths}),\n                { defaultValue: undefined }\n            );\n            this.notifications.success(\n                'pd.ignoreList.notifications.successfullyRemoved',\n                null,\n                {count: items.length},\n            );\n            await this.request.load();\n        }\n    }\n    @useLoader\n    async deleteRule(item: ProactiveDefenseIgnoreItem, rule: {id: number, name: string}) {\n        if (await this.modalService.open(this.removeModal, {data: {item, rule}})) {\n            await firstValueFrom(\n                this.proactiveDefenseService.ignoreDeleteRule({path: item.path, id: rule.id}),\n                { defaultValue: undefined }\n            );\n            this.notifications.success(\n                'pd.ignoreList.notifications.successfullyRemoved',\n                null,\n                {count: 1},\n            );\n            await this.request.load();\n        }\n    }\n    @useLoader\n    async viewFile(item: ProactiveDefenseIgnoreItem) {\n        await this.modalService.openFileViewer(item.path);\n    }\n}\n","<form [formGroup]=\"config.form\"\n      i360Config\n      [successSaveMessage]=\"{\n            key: 'pd.mode.notifications.changed',\n            params: {mode: mode.value | uppercase}}\"\n      #config=\"i360Config\">\n    <div formGroupName=\"PROACTIVE_DEFENCE\">\n        <mat-radio-group\n            class=\"canvas flexer\"\n            #mode=\"matRadioGroup\"\n            formControlName=\"mode\"\n            [class.disabled]=\"disableMode\"\n            (change)=\"config.updateConfig()\">\n            <i360-warning-message class=\"full-width\" *ngIf=\"disableMode && disableMessage\">\n                {{ disableMessage | translate }}\n            </i360-warning-message>\n            <div class=\"canvas-body flexer\">\n                <div class=\"proactive-mode-item\" i360Loader>\n                    <div class=\"mode-title text-nowrap\" translate>pd.mode.title</div>\n                </div>\n                <div id=\"disabled-mode\"\n                     #disabledMode\n                     (click)=\"changeModeHandler(disabledMode)\"\n                     [matRippleDisabled]=\"disableMode\"\n                     class=\"proactive-mode-item\"\n                     matRipple>\n                    <mat-radio-button [disabled]=\"disableMode\" [value]=\"Mode.disabled\">\n                        {{ 'pd.mode.modes.disabled' | translate }}\n                    </mat-radio-button>\n                </div>\n                <div id=\"log-mode\"\n                     #logMode\n                     (click)=\"changeModeHandler(logMode)\"\n                     class=\"proactive-mode-item\"\n                     [matRippleDisabled]=\"disableMode\"\n                     matRipple>\n                    <mat-radio-button [disabled]=\"disableMode\" [value]=\"Mode.log\">\n                        {{ 'pd.mode.modes.log' | translate }}\n                        <span class=\"severity-icon log\"></span>\n                    </mat-radio-button>\n                    <div i360-description translate>pd.mode.modes.descriptions.log</div>\n                </div>\n                <div id=\"kill-mode\"\n                     #killMode\n                     (click)=\"changeModeHandler(killMode)\"\n                     class=\"proactive-mode-item\"\n                     [matRippleDisabled]=\"disableMode\"\n                     matRipple>\n                    <mat-radio-button [disabled]=\"disableMode\" [value]=\"Mode.kill\">\n                        {{ 'pd.mode.modes.kill' | translate }}\n                        <span class=\"severity-icon kill\"></span>\n                    </mat-radio-button>\n                    <div i360-description translate>pd.mode.modes.descriptions.kill</div>\n                </div>\n            </div>\n        </mat-radio-group>\n    </div>\n</form>\n","import { Component, OnDestroy } from '@angular/core';\nimport { Mode } from '@imunify360-api/proactive-defense';\nimport { I360Config } from 'app/utils/config/config';\nimport { AuthState } from 'app/services/auth-state';\nimport { MyImunifyService } from 'app/services/my-imunify';\nimport { combineLatest, Subject, takeUntil } from 'rxjs';\nimport { IMyImunifyState } from 'app/services/my-imunify-state';\nimport { AdminConfigType } from 'app/utils/config/admin-config';\n\n@Component({\n    selector: 'i360-mode',\n    templateUrl: './mode.component.html',\n    styleUrls: ['./mode.component.scss'],\n})\nexport class ModeComponent implements OnDestroy {\n    Mode = Mode;\n    public disableMode: boolean;\n    public disableMessage: string;\n\n    private destroy$ = new Subject<void>();\n\n    constructor(\n        public config: I360Config,\n        public authState: AuthState,\n        private myImunifyService: MyImunifyService,\n    ) {\n        combineLatest([this.config.changes, this.myImunifyService.getMyImunifyState(), this.authState.isClient])\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(([config, myImunifyState, isClient]: [AdminConfigType, IMyImunifyState, boolean]) => {\n                this.updateDisabledState(config, myImunifyState, isClient);\n            });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n    }\n\n    changeModeHandler(element: HTMLDivElement) {\n        element.querySelector('input')!.click();\n    }\n\n    private updateDisabledState(config: AdminConfigType, myImunifyState: IMyImunifyState, isClient: boolean): void {\n        if (myImunifyState.enabled && !myImunifyState.protection) {\n            this.disableMode = true;\n            this.disableMessage = '';\n            return;\n        }\n\n        const pdClientDisabled = isClient\n            && config.PERMISSIONS.user_override_proactive_defense === false;\n\n        this.disableMode = config.PROACTIVE_DEFENCE.php_immunity || pdClientDisabled;\n        this.disableMessage = pdClientDisabled\n            ? 'warning.set_by_admin'\n            : 'warning.php_immunity_enabled';\n    }\n}\n","<i360-header [subheader]=\"'pd.subtitle' | translate\">\n  {{ 'pd.title' | translate }}\n</i360-header>\n<i360-protection-status *ngIf=\"myImunifyState?.enabled\"\n                        class=\"proactive-defense__protection-status\"\n                        [isEnabledProtection]=\"myImunifyState.protection\"\n                        [maliciousCount]=\"maliciousCount\"\n                        [maliciousFixed]=\"maliciousFixed\"\n></i360-protection-status>\n<i360-mode></i360-mode>\n<i360-tabs class=\"proactive-defense__tabs\">\n  <a routerLink=\"events\"\n     routerLinkActive=\"active\"\n     translate>pd.navigation.detectedEvents</a>\n  <!--looks like preserveWhitespaces: false do not remove spaces in this case\n  it leaves ' pd.navigation.detectedEvents '\n  this cases issues in some versions of ngx-translate\n   (it tries to translate already translated lines)-->\n  <a routerLink=\"ignore-list\"\n     routerLinkActive=\"active\"\n     translate>pd.navigation.ignoreList</a>\n</i360-tabs>\n<router-outlet></router-outlet>\n","import { Component, ChangeDetectorRef } from '@angular/core';\nimport { MyImunifyService } from 'app/services/my-imunify';\nimport { Subject, noop, takeUntil, take } from 'rxjs';\nimport { IMyImunifyState } from 'app/services/my-imunify-state';\nimport { MaliciousService } from 'app/services/malicious';\nimport { getFixedCount } from 'app/utils/malicious.utils';\n\n@Component({\n    selector: 'i360-proactive-defense',\n    templateUrl: './proactive-defense.component.html',\n    styleUrls: ['./proactive-defense.component.scss'],\n})\nexport class ProactiveDefenseComponent {\n    myImunifyState: IMyImunifyState;\n\n    maliciousCount: number;\n    maliciousFixed: number;\n\n    private destroy$ = new Subject<void>();\n\n    constructor(\n        private cdr: ChangeDetectorRef,\n        private myImunifyService: MyImunifyService,\n        private maliciousService: MaliciousService,\n    ) {\n        this.listenMyImunify();\n    }\n\n    private listenMyImunify(): void {\n        this.myImunifyService.getMyImunifyState()\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(state => {\n                this.myImunifyState = state;\n\n                if (this.myImunifyState.enabled) {\n                    this.loadMaliciousCounts();\n                }\n\n                this.cdr.markForCheck();\n            });\n    }\n\n    private loadMaliciousCounts(): void {\n        this.maliciousService.list({offset: 0, limit: 100, since: 0})\n            .pipe(take(1))\n            .subscribe({\n                next: (result) => {\n                    this.maliciousCount = result?.data?.malicious_count || 0;\n                    this.maliciousFixed = getFixedCount(result?.data?.items);\n                    this.cdr.markForCheck();\n                },\n                error: noop\n            });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { ProactiveDefenseEventsComponent } from './events/events.component';\nimport { ProactiveDefenseIgnoreListComponent } from './ignore-list/ignore-list.component';\nimport { ProactiveDefenseComponent } from './proactive-defense.component';\nimport { ModeComponent } from './mode/mode.component';\nimport { DetailsComponent } from './details/details.component';\nimport { ExtendMatChipDirective } from 'app/components/chip/chip.directive';\nimport { I360NavigationTabsModule } from 'app/components/navigation-tabs/navigation-tabs.module';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { I360LoaderModule } from 'app/utils/loader/loader.module';\nimport { I360ValidationModule } from 'app/utils/validator/validation.module';\nimport { I360TableModule } from 'app/utils/table/table.module';\nimport { I360ModalModule } from 'app/utils/modals/modal.module';\nimport { I360TranslateModule } from 'app/utils/translate/translate.module';\nimport { SharedModule } from 'app/core/shared.module';\nimport { ProactiveDefenseService } from 'app/services/proactive-defense';\nimport { IgnoreConfirmModalComponent } from './utils/ignore-confirm-modal.component';\nimport { ProtectionStatusModule } from '../protection-status/protection-status.module';\nimport { MaliciousService } from 'app/services/malicious';\n\nconst publicDirectives = [\n    ProactiveDefenseComponent,\n    ProactiveDefenseEventsComponent,\n    ProactiveDefenseIgnoreListComponent,\n];\nconst privateDirectives = [\n    ModeComponent,\n    DetailsComponent,\n    ExtendMatChipDirective,\n    IgnoreConfirmModalComponent,\n];\n\n@NgModule({\n    imports: [\n        RouterModule,\n        CommonModule,\n        I360LoaderModule,\n        I360ValidationModule,\n        I360TableModule,\n        I360ModalModule,\n        I360NavigationTabsModule,\n        I360TranslateModule,\n        ProtectionStatusModule,\n        RouterModule.forChild([{\n                path: '',\n                component: ProactiveDefenseComponent,\n                children: [\n                    { path: '', redirectTo: 'events', pathMatch: 'full' },\n                    { path: 'events', component: ProactiveDefenseEventsComponent },\n                    { path: 'ignore-list', component: ProactiveDefenseIgnoreListComponent },\n                ],\n            }]),\n        SharedModule,\n    ],\n    declarations: [\n        ...publicDirectives,\n        ...privateDirectives,\n    ],\n    providers: [\n        ProactiveDefenseService,\n        MaliciousService,\n    ],\n    exports: publicDirectives\n})\nexport class ProactiveDefenseModule {}\n","import { Injectable } from '@angular/core';\nimport { IPList, IPScope, ListsAPI, ListItem } from '@imunify360-api/lists';\nimport { NotificationsService } from './notifications';\nimport { ModalService } from 'app/utils/modals/modal.service';\nimport { XHR } from 'app/utils/xhr/xhr';\n\ntype ActionType = 'added' | 'moved' | 'deleted';\n\nexport const PURPOSE  = {\n    white: 'utils.table.widgets.content.purpose.values.white',\n    drop: 'utils.table.widgets.content.purpose.values.drop',\n    captcha: 'utils.table.widgets.content.purpose.values.captcha',\n    splashscreen: 'utils.table.widgets.content.purpose.values.splashscreen',\n};\n\n\n@Injectable()\nexport class ListsService {\n    getALL = this.xhr.wrap(this.xhr.rx(ListsAPI.getAllList), ListItem);\n    addOrUpdateItems = this.xhr.request(ListsAPI.addOrUpdateItem, false);\n    deleteItems = this.xhr.request(ListsAPI.deleteItems);\n    // the old editItem endpoint needed for the country comment\n    editItem = this.xhr.request(ListsAPI.editItem);\n\n    constructor(\n        private modalService: ModalService,\n        private notifications: NotificationsService,\n        public xhr: XHR,\n    ) {}\n\n    changeListWithConfirm(ips: string[],\n                          currentListType: IPList | null,\n                          nextListType: IPList | null) {\n        const params = this.getActionAndRequest(ips, currentListType, nextListType);\n        return this.confirmListChangeAndNotify(\n            params.request,\n            params.action,\n            ips,\n            params.confirmName,\n        );\n    }\n\n    async changeListWithConfirmFromIncidents(\n        ipLists: Array<{ ip: string, list: IPList | null }>,\n        nextListType: IPList | null,\n        scope?: IPScope,\n    ) {\n        const modalAction = this.getActionAndRequest(\n            [],\n            ipLists[0].list,\n            nextListType,\n            scope,\n        );\n        if (!modalAction) {\n            return false;\n        }\n        const items = Array.from(new Set(ipLists.map(item => item.ip)));\n        const result = await this.modalService\n            .confirm(modalAction.confirmName, items);\n        if (result) {\n            for (let [list, ips] of this.sortIps(ipLists)) {\n                const ipList = Array.from(ips);\n                const params = this.getActionAndRequest(ipList, list, nextListType);\n                try {\n                    await this.confirmListChangeAndNotify(\n                        params.request,\n                        params.action,\n                        ipList,\n                        null,\n                    );\n                } catch (e) {\n                }\n            }\n            if (scope && nextListType) {\n                await this.addOrUpdateItems({\n                    value: items,\n                    scope,\n                    list: nextListType,\n                });\n            }\n        }\n        return result;\n    }\n\n    public sortIps(\n        ips: Array<{ ip: string, list: IPList | null }>,\n    ): Map<IPList | null, Set<string>> {\n        let sortedData = new Map<IPList | null, Set<string>>();\n        for (let {list, ip} of ips) {\n            let ips = (sortedData.get(list) || new Set());\n            ips.add(ip);\n            sortedData.set(list, ips);\n        }\n        return sortedData;\n    }\n\n    private getActionAndRequest(\n        ips: string[],\n        currentList: IPList | null,\n        nextList: IPList | null,\n        scope?: IPScope,\n    ) {\n        let action: ActionType;\n        let request: () => Promise<any>;\n        let confirmName: string;\n        if (currentList === null || nextList !== null) {\n            confirmName = `add-to-${nextList}`;\n            if (currentList === null && nextList !== null) {\n                action = 'added';\n            } else if (nextList !== null) {\n                action = 'moved';\n            } else {\n                throw new Error('impossible');\n            }\n            request = () => this.addOrUpdateItems({\n                value: ips,\n                list: nextList,\n            });\n\n        } else {\n            action = 'deleted';\n            confirmName = `delete-ip-from-list`;\n            request = () => this.deleteItems({\n                itemType: 'ip',\n                items: ips,\n                list: currentList,\n            });\n        }\n\n        if (scope) {\n            confirmName += `-${scope}-scope`;\n        }\n        return {action, confirmName, request};\n    }\n\n    private async confirmListChangeAndNotify(\n        request: (() => Promise<any>),\n        action: ActionType,\n        ips: string[],\n        confirmName: string | null,\n    ) {\n        if (!confirmName || await this.modalService.confirm(confirmName, ips)) {\n            await request();\n            this.notifications.success(\n                `notifications.ipAction`,\n                null,\n                {count: ips.length, action},\n            );\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"],"names":["ProactiveDefenseService","constructor","xhr","_ignoreList","this","rx","ProactiveDefenseAPI","ignoreList","wrap","ProactiveDefenseIgnoreItem","ignoreAdd","ignoreDeletePaths","ignoreDeleteRule","_list","list","ProactiveDefenseItem","_details","details","id","pipe","map","result","ProactiveDefenseDetails","data","items","i0","i1","factory","ɵfac","ctx_r0","description","_r6","ctx_r5","addToIgnore","ctx_r7","country","_r11","ctx_r10","addToBlackList","DetailsComponent_div_20_div_9_button_1_Template","ctx_r8","purpose","IPList","black","drop","DetailsComponent_div_20_ng_container_6_Template","DetailsComponent_div_20_div_9_Template","ctx_r2","ip","authState","isAdmin","item_r12","name","item_r13","value","DetailsComponent","ModalEntry","modalService","proactiveDefenseService","eventsComponent","listsService","super","loaded","BehaviorSubject","next","env","_this","_asyncToGenerator","changeListWithConfirm","listname","detectedOnly","_this2","viewFile","_this3","openFileViewer","path","item_r1","rules","IgnoreConfirmModalComponent_p_5_ng_container_6_Template","MAT_DIALOG_DATA","i2","i3","forwardRef","ProactiveDefenseEventsComponent","i4","selectors","viewQuery","rf","ctx","LoaderDirective","provide","DataLoaderImpl","useExisting","decls","vars","consts","template","DetailsComponent_div_4_Template","DetailsComponent_button_6_Template","DetailsComponent_div_20_Template","DetailsComponent_ng_template_49_Template","DetailsComponent_ng_template_51_Template","rule_name","rule_id","url","count","timestamp","action","useLoader","IgnoreConfirmModalComponent","groupedItems","title","ruleIdToName","rulesByPath","item","Set","add","Object","entries","push","Array","from","join","uniquePaths","features","IgnoreConfirmModalComponent_p_5_Template","item_r5","item_r6","item_r7","item_r8","ProactiveDefenseEventsComponent_ng_container_33_i360_colored_ip_1_Template","item_r11","notifications","viewContainerRef","destroyed","Subject","showDetails","firstValueFrom","switchMap","open","panelClass","request","load","takeUntil","defaultValue","undefined","ngOnDestroy","tap","success","length","RequestDirective","$event","ProactiveDefenseEventsComponent_clock_14_Template","ProactiveDefenseEventsComponent_ng_template_19_Template","ProactiveDefenseEventsComponent_ng_template_24_Template","ProactiveDefenseEventsComponent_ng_container_33_Template","ProactiveDefenseEventsComponent_div_38_Template","_c0","_c1","ExtendMatChipDirective","chip","selectable","onClick","event","test","target","className","remove","hostBindings","rule_r12","_r15","$implicit","ctx_r13","deleteRule","ProactiveDefenseIgnoreListComponent_ng_template_20_mat_chip_list_0_mat_chip_2_Template","ProactiveDefenseIgnoreListComponent_ng_template_20_mat_chip_list_0_Template","ProactiveDefenseIgnoreListComponent_ng_template_20_ng_template_1_Template","_r9","data_r17","rule","ProactiveDefenseIgnoreListComponent","deletePaths","paths","confirm","removeModal","ProactiveDefenseIgnoreListComponent_clock_13_Template","ProactiveDefenseIgnoreListComponent_ng_template_18_Template","ProactiveDefenseIgnoreListComponent_ng_template_20_Template","ProactiveDefenseIgnoreListComponent_ng_template_24_Template","disableMessage","ModeComponent","config","myImunifyService","Mode","destroy$","combineLatest","changes","getMyImunifyState","isClient","subscribe","myImunifyState","updateDisabledState","changeModeHandler","element","querySelector","click","enabled","protection","disableMode","pdClientDisabled","PERMISSIONS","user_override_proactive_defense","PROACTIVE_DEFENCE","php_immunity","_r0","updateConfig","ModeComponent_i360_warning_message_6_Template","_r3","_r4","_r5","form","_r1","disabled","log","kill","maliciousCount","maliciousFixed","ProactiveDefenseComponent","cdr","maliciousService","listenMyImunify","state","loadMaliciousCounts","markForCheck","offset","limit","since","take","malicious_count","getFixedCount","error","noop","ProactiveDefenseComponent_i360_protection_status_4_Template","ProactiveDefenseModule","MaliciousService","imports","RouterModule","CommonModule","I360LoaderModule","I360ValidationModule","I360TableModule","I360ModalModule","I360NavigationTabsModule","I360TranslateModule","ProtectionStatusModule","component","children","redirectTo","pathMatch","SharedModule","PURPOSE","white","captcha","splashscreen","ListsService","getALL","ListsAPI","ListItem","addOrUpdateItems","deleteItems","editItem","ips","currentListType","nextListType","params","getActionAndRequest","confirmListChangeAndNotify","confirmName","changeListWithConfirmFromIncidents","ipLists","scope","modalAction","sortIps","ipList","e","sortedData","Map","get","set","currentList","nextList","Error","itemType"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}