{"version":3,"file":"src_app_core_shared_module_ts.js","mappings":"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","sources":["./src/app/services/emails.ts","./src/app/components/application/app.component.ts","./src/app/components/application/app.component.html","./src/app/components/coming-soon/coming-soon.component.ts","./src/app/components/coming-soon/coming-soon.component.html","./src/app/utils/pipes/timestamp.ts","./src/app/components/settings/log-watcher/log-watcher.module.ts","./src/app/components/i360-malware/restore-from-backup-action.component.ts","./src/app/components/i360-malware/restore-from-quarantine-action.component.ts","./src/app/components/i360-malware/group-actions.component.ts","./src/app/components/i360-malware/i360-malware.module.ts","./src/app/utils/navigation/navigation.module.ts","./src/app/interceptors/demo.interceptor.ts","./src/app/utils/add-item/add-item.module.ts","./src/app/core/shared.module.ts","./src/app/services/backup-systems.ts","./src/app/utils/colored-ip/colored-ip.component.ts","./src/app/utils/csf/csf.component.ts","./src/app/utils/ellipsis.component.ts","./src/app/utils/inline/inline.component.ts","./src/app/utils/log-box/log-box.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { EmailsApi, ViewEmailParams } from '@imunify360-api/emails';\nimport { EmailItem } from '@imunify360-api/emails';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable, of, catchError, map } from 'rxjs';\nimport { cache } from 'app/utils/cache';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { XHR } from 'app/utils/xhr/xhr';\n\ndeclare const i360ieExist: any;\n\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EmailsService implements CanActivate {\n    constructor(\n        private router: Router,\n        public xhr: XHR,\n    ) {}\n\n    private emailFilterBy: {\n        sender: string,\n        account_name?: string,\n        any: string,\n        recipients: string,\n        received_date_from: string,\n        received_date_to: string,\n        reason: string,\n        subject: string,\n    } = {\n        sender: 'emails.quarantine.headers.sender',\n        account_name: 'emails.quarantine.headers.account',\n        reason: 'emails.quarantine.filters.reason',\n        recipients: 'emails.quarantine.headers.recipients',\n        any: 'emails.quarantine.headers.any',\n        received_date_from: 'emails.quarantine.filters.receivedDateFrom',\n        received_date_to: 'emails.quarantine.filters.receivedDateTo',\n        subject: 'emails.quarantine.headers.subject',\n    };\n    list = this.xhr.wrap(this.xhr.rx(EmailsApi.list), EmailItem);\n    editEmails = this.xhr.request(EmailsApi.editEmails);\n    viewEmail = this.xhr.rx<ViewEmailParams, any>(EmailsApi.viewEmail);\n    emailVersions: Observable<{\n        version: string,\n        components: string,\n    } | null> = this.xhr.rx(EmailsApi.imunifyEmailVersion, false, false)()\n        .pipe(\n            map(result => {\n                let components: string[] = [];\n                if (result.data.items) {\n                    components = result.data.items.components.map((component) => {\n                        return component.name + ' - ' + component.version;\n                    })\n                }\n                return {\n                    version: result.data.items.version,\n                    components: components.join('\\r\\n')\n                };\n            }),\n            cache(300),\n            catchError((e: HttpErrorResponse) => {\n                return  of(null);\n            }),\n        );\n\n    getAvailableKeys(isAdmin: boolean) {\n        if (!isAdmin && this.emailFilterBy.account_name) {\n            delete this.emailFilterBy.account_name;\n        }\n        return this.emailFilterBy;\n    }\n\n    canActivate(): Observable<boolean> | boolean {\n        if (this.imunifyEmailExist()) {\n            return true;\n        } else {\n            this.router.navigate(['/']);\n            return false;\n        }\n    }\n\n    imunifyEmailExist = () => typeof i360ieExist !== 'undefined' && i360ieExist === '1';\n}\n","import { Component, Optional, ViewEncapsulation } from '@angular/core';\nimport { Panel } from 'app/utils/panel';\nimport { ReputationService } from 'app/services/reputation';\nimport { LicenseService } from 'app/services/license';\nimport { EulaService } from 'app/components/eula/eula.service';\nimport { UserFeaturesStatusService } from 'app/services/user-features-status';\nimport { I360Config } from 'app/utils/config/config';\nimport { HistoryService } from 'app/services/history';\nimport { AppState } from 'app/core/app.service';\nimport { fromEvent, bufferCount, filter, map } from 'rxjs';\nimport { I360ConfigDataItems } from '@imunify360-api/settings';\nimport { EmailsService } from 'app/services/emails';\n\n\n@Component({\n    templateUrl: './app.component.html',\n    providers: [\n        I360Config,\n    ],\n    styleUrls: ['./app.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class AppComponent {\n    support = this.config.changes.pipe(\n        map((c: I360ConfigDataItems) =>  c.PERMISSIONS.support_form),\n    );\n\n    constructor(\n        public panel: Panel,\n        public emailsService: EmailsService,\n        public historyService: HistoryService,\n        public appState: AppState,\n        @Optional() public licenseService: LicenseService,\n        @Optional() public eulaService: EulaService,\n        // looks like component level providers are lazy loaded\n        @Optional() public reputationService: ReputationService,\n        @Optional() public userFeaturesStatus: UserFeaturesStatusService,\n        public config: I360Config,\n    ) {\n         //  Need for iframe in DirectAdmin panel\n        if (this.panel.isDirectAdmin && document.querySelector('#iframe-container')) {\n            fromEvent(window, 'mousemove').pipe(\n                map((event: MouseEvent) => event.clientY),\n                bufferCount(20, 1),\n                filter((clientY) => {\n                    return ((this.appState.mousePositonY + 30  < clientY[0]) ||\n                        (this.appState.mousePositonY - 30 > clientY[0]));\n                }),\n            ).subscribe((position) => {\n                this.appState.mousePositonY = position[0];\n            });\n        }\n    }\n}\n","<main>\n    <i360-help-link></i360-help-link>\n    <router-outlet></router-outlet>\n</main>\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'coming-soon',\n    styleUrls: ['./coming-soon.component.scss'],\n    templateUrl: './coming-soon.component.html',\n})\nexport class ComingSoonComponent {\n\n}\n","<div class=\"card-container coming-soon_component\">\n    <div class=\"text-center\">\n        <mat-icon svgIcon=\"dmc\"></mat-icon>\n        <p class=\"text\" translate>comingSoon.teaser</p>\n    </div>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport dayjs from 'dayjs';\n\n@Pipe({name: 'timestamp'})\nexport class TimestampPipe implements PipeTransform {\n    transform(value) {\n        return value ? dayjs.unix(value).format('DD.MM.YYYY') : value;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { LogWatcherDirective } from './log-watcher.directive';\n\n@NgModule({\n    declarations: [LogWatcherDirective],\n    exports: [LogWatcherDirective],\n})\nexport class I360LogWatcherModule {}\n","import { Component } from '@angular/core';\nimport { MaliciousComponent } from 'app/components/malware/malicious/malicious.component';\nimport { BackupSystemsService } from 'app/services/backup-systems';\nimport { MaliciousFileStatus } from '@imunify360-api/malicious';\nimport { ResourceType } from '@imunify360-api/malware';\n\n@Component({\n    selector: 'i360-restore-from-backup-malicious-action',\n    template: `\n        <i360-action\n                *ngIf=\"backupSystemsService.backupsEnabled | async\"\n                [filter]=\"{status: status, resource_type: ResourceType.file}\"\n                title=\"actions.tryToRestore\"\n                (perform)=\"malicious.changeItems('restore-from-backup', $event)\">\n        </i360-action>\n    `,\n})\nexport class RestoreFromBackupActionComponent {\n    ResourceType = ResourceType;\n    status = [\n        MaliciousFileStatus.quarantined,\n        MaliciousFileStatus.found,\n    ];\n    constructor(public malicious: MaliciousComponent,\n                public backupSystemsService: BackupSystemsService) {}\n}\n","import { Component } from '@angular/core';\nimport { MaliciousComponent } from 'app/components/malware/malicious/malicious.component';\nimport { MaliciousFileStatus } from '@imunify360-api/malicious';\n\n@Component({\n    selector: 'i360-restore-from-quarantine-malicious-action',\n    template: `\n        <i360-action\n                [filter]=\"{status: status}\"\n                icon=\"fish\"\n                title=\"actions.restoreFromQuarantine\"\n                (perform)=\"malicious.changeItems('restore-from-quarantine', $event)\">\n        </i360-action>\n    `,\n})\nexport class RestoreFromQuarantineActionComponent {\n    status = [MaliciousFileStatus.quarantined];\n    constructor(public malicious: MaliciousComponent) {}\n}\n","import { Component } from '@angular/core';\nimport { MaliciousComponent } from 'app/components/malware/malicious/malicious.component';\nimport { BackupSystemsService } from 'app/services/backup-systems';\nimport { MaliciousFileStatus } from '@imunify360-api/malicious';\n\n/**\n * If there will be second type of group actions, then:\n * 1. Implement actions as parameters\n * or\n * 2. Implement dynamic grouping action to group actions\n */\n@Component({\n    template: `\n        <i360-action\n                title=\"actions.other\"\n                i360-group-actions\n                [filter]=\"{status: status}\">\n            <cl-add-to-ignore-malicious-action></cl-add-to-ignore-malicious-action>\n            <i360-restore-from-backup-malicious-action></i360-restore-from-backup-malicious-action>\n            <i360-restore-from-quarantine-malicious-action>\n            </i360-restore-from-quarantine-malicious-action>\n        </i360-action>\n    `,\n})\nexport class GroupActionsComponent {\n    status = [\n        MaliciousFileStatus.quarantined,\n        MaliciousFileStatus.found,\n    ];\n\n    constructor(public malicious: MaliciousComponent,\n                public backupSystemsService: BackupSystemsService) {\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { ClMalwareModule } from 'app/components/malware/malware.module';\nimport { GroupActionsComponent } from './group-actions.component';\nimport { RestoreFromBackupActionComponent } from './restore-from-backup-action.component';\nimport { CleanupActionComponent } from 'app/components/malware/actions/cleanup-action.component';\nimport { RestoreFromQuarantineActionComponent } from './restore-from-quarantine-action.component';\nimport {\n    RestoreOriginalActionComponent,\n} from 'app/components/malware/actions/restore-original-action.component';\nimport { ViewFileActionComponent } from 'app/components/malware/actions/view-file-action.component';\nimport { CommonModule } from '@angular/common';\nimport { I360TableModule } from 'app/utils/table/table.module';\n\nconst actions = [\n    GroupActionsComponent,\n    RestoreFromBackupActionComponent,\n    RestoreFromQuarantineActionComponent,\n];\n\n@NgModule({\n    imports: [\n        ClMalwareModule.import({\n            maliciousActions: [\n                ViewFileActionComponent,\n                CleanupActionComponent,\n                RestoreOriginalActionComponent,\n                RestoreFromQuarantineActionComponent,\n                GroupActionsComponent,\n            ],\n        }),\n        CommonModule,\n        I360TableModule,\n    ],\n    declarations: [\n        ...actions,\n    ]\n})\nexport class I360MalwareModule {}\n","import { NgModule } from '@angular/core';\nimport {\n    NavigationComponent,\n} from 'app/utils/navigation/navigation.component';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { I360TranslateModule } from 'app/utils/translate/translate.module';\nimport { EulaService } from 'app/components/eula/eula.service';\nimport { PackageVersionsComponent } from 'app/utils/navigation/package-versions/package-versions.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatButtonModule,\n        MatMenuModule,\n        MatIconModule,\n        MatTooltipModule,\n        I360TranslateModule,\n    ],\n    providers: [\n        EulaService,\n    ],\n    declarations: [\n        NavigationComponent,\n        PackageVersionsComponent\n    ],\n    exports: [\n        NavigationComponent,\n        PackageVersionsComponent\n    ],\n})\nexport class I360NavigationModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { of,  Observable, switchMap } from 'rxjs';\nimport { postOnly } from './utils';\nimport { AppState } from '../core/app.service';\n\n\n@Injectable()\nexport class DemoInterceptor implements HttpInterceptor {\n    constructor(\n        private appState: AppState,\n    ) {}\n\n    @postOnly\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<any> {\n        return next.handle(req).pipe(\n            switchMap(event => {\n                if (event instanceof HttpResponse) {\n                    const license = event.body.data ? event.body.data.license : event.body.license;\n                    if (license && license.demo) {\n                        this.appState.demo = true;\n                    }\n                }\n                return of(event);\n            }),\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport {AddItemTabDirective} from \"./add-item-tab/add-item-tab.directive\";\nimport {AddItemFormComponent} from \"./add-item-form/add-item-form.component\";\nimport { MatButtonModule } from '@angular/material/button';\nimport {I360TranslateModule} from \"../translate/translate.module\";\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatButtonModule,\n        I360TranslateModule,\n    ],\n    declarations: [\n        AddItemTabDirective,\n        AddItemFormComponent,\n    ],\n    exports: [\n        AddItemTabDirective,\n        AddItemFormComponent,\n    ],\n})\nexport class I360AddItemModule {}\n","import { MatChipsModule } from '@angular/material/chips';\nimport { FormsModule } from '@angular/forms';\nimport { ComingSoonComponent } from 'app/components/coming-soon/coming-soon.component';\nimport { TimestampPipe } from 'app/utils/pipes/timestamp';\nimport { CommonModule } from '@angular/common';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { CheckboxGroupDirective } from 'app/utils/checkbox-group.directive';\nimport { ReactiveFormsModule } from '@angular/forms';  // <-- #1 import module\nimport { I360LoaderModule } from 'app/utils/loader/loader.module';\nimport { I360TableModule } from 'app/utils/table/table.module';\nimport { I360ValidationModule } from 'app/utils/validator/validation.module';\nimport { RouterModule } from '@angular/router';\nimport { ModuleWithProviders, NgModule, Optional } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { InlineComponent } from 'app/utils/inline/inline.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { CsfComponent } from 'app/utils/csf/csf.component';\nimport { I360LogWatcherModule } from 'app/components/settings/log-watcher/log-watcher.module';\nimport { EllipsisComponent } from 'app/utils/ellipsis.component';\nimport { ColoredIpComponent } from 'app/utils/colored-ip/colored-ip.component';\nimport { MatRippleModule } from '@angular/material/core';\nimport { I360ModalModule } from 'app/utils/modals/modal.module';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { I360NavigationTabsModule } from 'app/components/navigation-tabs/navigation-tabs.module';\nimport { AppComponent } from 'app/components/application/app.component';\nimport { I360TranslateModule } from 'app/utils/translate/translate.module';\nimport { I360WarningMessageModule } from 'app/utils/warning-message/warning-message.module';\nimport { I360CircleProgressModule } from 'app/utils/circle-progress/circle-progress.module';\nimport { I360RefresherModule } from 'app/utils/refresher/refresher.module';\nimport { MatIconModule } from '@angular/material/icon';\nimport { I360ClockModule } from 'app/utils/clock/clock.module';\nimport { I360MalwareModule } from 'app/components/i360-malware/i360-malware.module';\nimport { I360NavigationModule } from 'app/utils/navigation/navigation.module';\nimport { I360NotificationsModule } from 'app/components/notification/notifications.module';\nimport { I360SettingsModule } from 'app/components/settings/settings.module';\nimport { I360DescriptionModule } from 'app/utils/description/description.module';\nimport { I360ConfigModule } from 'app/utils/config/config.module';\nimport { angular18894CrutchProvider } from 'app/core/misc';\nimport { XHR } from 'app/utils/xhr/xhr';\nimport { SettingsService } from 'app/services/settings';\nimport { SessionExpiredInterceptor } from '../interceptors/session-expired.interceptor';\nimport { FileService } from 'app/services/file';\nimport { I360MenuProfileModule } from 'app/components/menu-profile/menu-profile.module';\nimport { BackupSystemsService } from 'app/services/backup-systems';\nimport { DemoInterceptor } from 'app/interceptors/demo.interceptor';\nimport { LicenseService } from 'app/services/license';\nimport { I360ButtonModule } from 'app/utils/button/button.module';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { TextInputModule } from 'app/components/text-input/text-input.module';\nimport { I360ExperimentalModule } from 'app/utils/experimental/experimental.module';\nimport { I360LogBoxModule } from 'app/utils/log-box/log-box.module';\nimport { StatisticsService } from 'app/services/statistics';\nimport { I360AddItemModule } from '../utils/add-item/add-item.module';\n\nconst declarations = [\n    ComingSoonComponent,\n    TimestampPipe,\n    CheckboxGroupDirective,\n    InlineComponent,\n    CsfComponent,\n    ColoredIpComponent,\n    // ExtendMatChipDirective,\n    EllipsisComponent,\n    AppComponent,\n];\n\nconst modules = [\n    MatRippleModule,\n    MatSlideToggleModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatProgressBarModule,\n    RouterModule,\n    CommonModule,\n    MatSliderModule, // after BrowserModule, see https://github.com/angular/material2/issues/4278\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    I360AddItemModule,\n    I360LoaderModule,\n    I360TableModule,\n    I360ValidationModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    I360ModalModule,\n    MatDialogModule,\n    MatIconModule,\n    MatMenuModule,\n    MatChipsModule,\n    MatTooltipModule,\n    I360TranslateModule,\n    I360NavigationTabsModule,\n    I360MalwareModule,\n    I360LogWatcherModule,\n    I360WarningMessageModule,\n    I360CircleProgressModule,\n    I360RefresherModule,\n    I360ClockModule,\n    I360NavigationModule,\n    I360SettingsModule,\n    I360DescriptionModule,\n    I360ConfigModule,\n    I360ExperimentalModule,\n    I360MenuProfileModule,\n    I360ButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    TextInputModule,\n    I360LogBoxModule,\n];\n\n@NgModule({\n    exports: [\n        I360NotificationsModule,\n        ...declarations,\n        ...modules,\n    ],\n    imports: [\n        ...modules,\n        I360NotificationsModule,\n    ],\n    declarations: declarations,\n})\nexport class SharedModule {\n    static forUser(): ModuleWithProviders<SharedModule> {\n        return {\n            ngModule: SharedModule,\n            providers: [\n                angular18894CrutchProvider,\n                SettingsService,\n                XHR,\n                FileService,\n                BackupSystemsService,\n                // LicenseService should be here to allow LicenseInterceptor\n                // interrupt register request\n                LicenseService,\n                StatisticsService,\n                { provide: HTTP_INTERCEPTORS, useClass: DemoInterceptor, multi: true},\n                { provide: HTTP_INTERCEPTORS, useClass: SessionExpiredInterceptor, multi: true},\n            ],\n        };\n    }\n    // it is needed because service is not instantiated if there is no usage\n    // optional - this service is declared in 'forUser' method, so will be present not\n    // in all imports of shared module\n    // this functionality is covered by tests\n    constructor(\n        @Optional() statistics: StatisticsService,\n    ) {}\n}\n","import { map } from 'rxjs';\nimport { BackupSystemsAPI } from '@imunify360-api/backup-systems';\nimport { Injectable } from '@angular/core';\nimport { cache } from 'app/utils/cache';\nimport { XHR } from 'app/utils/xhr/xhr';\n\n\n@Injectable()\nexport class BackupSystemsService {\n    // extended-status!\n    status = this.xhr.rx(BackupSystemsAPI.status);\n    // just status actually\n    narrowStatus = this.xhr.rx(BackupSystemsAPI.narrowStatus);\n    list = this.xhr.rx(BackupSystemsAPI.list);\n    disable = this.xhr.rx(BackupSystemsAPI.disable);\n    disableCloudlinux = this.xhr.rx(BackupSystemsAPI.disableCloudlinux);\n    checkCloudlinux = this.xhr.rx(BackupSystemsAPI.checkCloudlinux);\n    init = this.xhr.rx(BackupSystemsAPI.init);\n\n    backupsEnabled = this.narrowStatus().pipe(\n        cache(5),\n        map(res => res.data.items && res.data.items.enabled),\n    );\n\n    constructor(\n        public xhr: XHR,\n    ) {}\n}\n","import { Component, HostBinding, Input } from '@angular/core';\nimport { IPList } from '@imunify360-api/lists';\n\n@Component({\n    selector: 'i360-colored-ip',\n    template: `\n        <span class=\"text-nowrap\">\n            <ng-content></ng-content>\n        </span>\n    `,\n    styleUrls: ['./colored-ip.component.scss'],\n})\nexport class ColoredIpComponent {\n    @HostBinding('attr.color') @Input() listName: IPList;\n}\n","import { Component, Input } from '@angular/core';\nimport { Panel } from 'app/utils/panel';\n\n@Component({\n    selector: 'i360-csf-warning',\n    template: `\n        <i360-whole-page-error>\n            <ng-container title>\n                {{ 'utils.csf.title' | translate: {listName: listName} }}\n            </ng-container>\n            <ng-container note *ngIf=\"panel.isCpanel\">\n                {{ 'utils.csf.note' | translate: {listName: listName} | translateCut:0}}\n                <a href=\"../../../cgi/configserver/csf.cgi\" class=\"i360-dashboard-link\">\n                    {{ 'utils.csf.note' | translate: {listName: listName} | translateCut:1}}\n                </a>\n                {{ 'utils.csf.note' | translate: {listName: listName} | translateCut:2}}\n            </ng-container>\n        </i360-whole-page-error>\n    `,\n})\nexport class CsfComponent {\n    @Input() listName: string;\n\n    constructor(public panel: Panel) {}\n}\n","import {\n    AfterViewInit, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, NgZone, OnChanges,\n    OnDestroy, ViewChild,\n} from '@angular/core';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { fromEvent, Subscription, debounceTime } from 'rxjs';\n\n@Component({\n    selector: 'i360-ellipsis',\n    template: `\n        <span #container\n              matTooltipClass=\"wide-tooltip\"\n              [matTooltip]=\"showTooltip ? (tooltip||text) : '' \">\n            {{ text }}\n        </span>`,\n    styles: [`\n        :host {\n            display: flex;\n            max-width: 100%;\n        }\n        span {\n            text-overflow: ellipsis;\n            overflow: hidden;\n            white-space: nowrap;\n        }\n    `],\n})\nexport class EllipsisComponent implements AfterViewInit, OnDestroy, OnChanges {\n    static onResize = new EventEmitter();\n    subscribe = Subscription.EMPTY;\n\n    @ViewChild('container', {static: true}) container: ElementRef;\n    @ViewChild(MatTooltip, {static: true}) matTooltip: MatTooltip;\n\n    @Input() tooltip: string = '';\n    @Input() text: string;\n\n    showTooltip: boolean;\n    constructor(private zone: NgZone, private detector: ChangeDetectorRef) {}\n    normalize() {\n        const elem = this.container.nativeElement;\n        const show = elem.offsetWidth < elem.scrollWidth;\n        if (show !== this.showTooltip) {\n            this.showTooltip = show;\n            // this called after change detection synchronously (after updating html for \"text\"\n            // parameter), so need to trigger it again to pass new parameter to tooltip\n            this.detector.markForCheck();\n        }\n    }\n\n    ngAfterViewInit() {\n        this.subscribe = EllipsisComponent.onResize.subscribe(() => this.normalize());\n    }\n\n    ngOnDestroy() {\n        this.subscribe.unsubscribe();\n    }\n    ngOnChanges() {\n        const sub = this.zone.onStable.subscribe(() => {\n            sub.unsubscribe();\n            this.normalize();\n        });\n    }\n\n}\n\nfromEvent(window, 'resize').pipe(\n    debounceTime(1000),\n).subscribe(() => EllipsisComponent.onResize.emit());\n","import {\n    ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ElementRef, EventEmitter,\n    HostListener, Inject, Output, TemplateRef, ViewRef,\n} from '@angular/core';\nimport { ExtendFormGroupDirective } from 'app/utils/validator/extend-form-group.directive';\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { fromEvent, Subscription, first } from 'rxjs';\n\ndeclare const Zone;\n\n@Component({\n    selector: 'i360-inline',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <ng-template [ngTemplateOutlet]=\"editing ? editTemplate : valueTemplate\"></ng-template>\n`,\n})\nexport class InlineComponent {\n    editing = false;\n    @ContentChild(ExtendFormGroupDirective, {static: true})\n    set extendFormGroup(extendFormGroup: ExtendFormGroupDirective) {\n        if (extendFormGroup) {\n            this.onSubmit = extendFormGroup.i360Submit.pipe(first())\n                .subscribe(() => this.done());\n            setTimeout(() => extendFormGroup.focusOnDirective());\n        }\n    }\n    @ContentChild('valueTemplate', {static: true}) valueTemplate: TemplateRef<any>;\n    @ContentChild('editTemplate', {static: true}) editTemplate: TemplateRef<any>;\n    @Output() onBegin = new EventEmitter();\n    @Output() onDone = new EventEmitter();\n    @Output() afterBegin = new EventEmitter();\n    onSubmit = Subscription.EMPTY;\n    onCancelOrBlur = Subscription.EMPTY;\n    handleErrorZone;\n    constructor(private element: ElementRef,\n                private overlay: OverlayContainer,\n                @Inject(ChangeDetectorRef) private detector: ViewRef) {}\n    @HostListener('click', ['$event']) onClick(event): void|false {\n        if (this.editing) {\n            event.stopPropagation();\n            return false;\n        }\n    }\n\n    begin() {\n        this.onBegin.emit();\n        this._begin();\n    }\n    _begin() {\n        this.setEditing(true);\n        this.onCancelOrBlur = fromEvent(document, 'mouseup')\n            .subscribe((e: MouseEvent) => this._cancelOnBlurListener(e));\n        this.afterBegin.emit();\n    }\n\n    cancel() {\n        this.setEditing(false);\n        this.onCancelOrBlur.unsubscribe();\n        this.onSubmit.unsubscribe();\n    }\n    done() {\n        this.cancel();\n        // can not exit zone, so have to reuse it because of calling detectChanges in this zone\n        // new submit button appears in this zone\n        // looks line angular will not call detectChanges itself until this zone has tasks\n        (this.handleErrorZone || (this.handleErrorZone = Zone.current.fork({\n            onHandleError: (parentZoneDelegate, currentZone, targetZone, error2) => {\n                if (!this.detector.destroyed) {\n                    // event listener should be set in angular zone\n                    this._begin();\n                    // change detection will not fire automatically\n                    this.detector.markForCheck();\n                }\n                parentZoneDelegate.handleError(targetZone, error2);\n            },\n        }))).run(() => this.onDone.emit());\n    }\n\n    private _cancelOnBlurListener(event: MouseEvent) {\n        const target = <Node>event.target;\n        const inComponent = this.element.nativeElement.contains(target);\n        const inOverlay = this.overlay.getContainerElement().contains(target);\n\n        if (!inComponent && !inOverlay) {\n            this.cancel();\n        }\n    }\n    private setEditing(value) {\n        this.editing = value;\n        if (!this.detector.destroyed) {\n            this.detector.detectChanges();\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { LogBoxComponent } from 'app/utils/log-box/log-box.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [LogBoxComponent],\n    exports: [LogBoxComponent],\n})\nexport class I360LogBoxModule {}\n"],"names":["EmailsService","constructor","router","xhr","emailFilterBy","sender","account_name","reason","recipients","any","received_date_from","received_date_to","subject","list","this","wrap","rx","EmailsApi","EmailItem","editEmails","request","viewEmail","emailVersions","pipe","map","result","components","data","items","component","name","version","join","cache","catchError","e","of","imunifyEmailExist","i360ieExist","getAvailableKeys","isAdmin","canActivate","navigate","i0","i1","i2","factory","ɵfac","providedIn","AppComponent","panel","emailsService","historyService","appState","licenseService","eulaService","reputationService","userFeaturesStatus","config","support","changes","c","PERMISSIONS","support_form","isDirectAdmin","document","querySelector","fromEvent","window","event","clientY","bufferCount","filter","mousePositonY","subscribe","position","i3","i4","i5","i6","i7","i8","i9","selectors","features","I360Config","decls","vars","template","rf","ctx","ComingSoonComponent","consts","TimestampPipe","transform","value","dayjs","format","pure","I360LogWatcherModule","$event","_r2","ctx_r1","malicious","changeItems","_c0","ctx_r0","status","ResourceType","file","RestoreFromBackupActionComponent","backupSystemsService","MaliciousFileStatus","RestoreFromBackupActionComponent_i360_action_0_Template","backupsEnabled","RestoreFromQuarantineActionComponent","GroupActionsComponent","I360MalwareModule","ClMalwareModule","maliciousActions","ViewFileActionComponent","CleanupActionComponent","RestoreOriginalActionComponent","CommonModule","I360TableModule","I360NavigationModule","EulaService","imports","MatButtonModule","MatMenuModule","MatIconModule","MatTooltipModule","I360TranslateModule","DemoInterceptor","intercept","req","next","handle","switchMap","HttpResponse","license","body","demo","postOnly","I360AddItemModule","CheckboxGroupDirective","InlineComponent","CsfComponent","ColoredIpComponent","EllipsisComponent","modules","MatRippleModule","MatSlideToggleModule","MatCheckboxModule","MatRadioModule","MatProgressBarModule","RouterModule","MatSliderModule","FormsModule","HttpClientModule","ReactiveFormsModule","I360LoaderModule","I360ValidationModule","MatSelectModule","MatAutocompleteModule","I360ModalModule","MatDialogModule","MatChipsModule","I360NavigationTabsModule","I360WarningMessageModule","I360CircleProgressModule","I360RefresherModule","I360ClockModule","I360SettingsModule","I360DescriptionModule","I360ConfigModule","I360ExperimentalModule","I360MenuProfileModule","I360ButtonModule","MatFormFieldModule","MatInputModule","TextInputModule","I360LogBoxModule","SharedModule","statistics","forUser","ngModule","providers","angular18894CrutchProvider","SettingsService","XHR","FileService","BackupSystemsService","LicenseService","StatisticsService","provide","HTTP_INTERCEPTORS","useClass","multi","SessionExpiredInterceptor","I360NotificationsModule","BackupSystemsAPI","narrowStatus","disable","disableCloudlinux","checkCloudlinux","init","res","enabled","hostVars","hostBindings","listName","inputs","CsfComponent_ng_container_4_Template","isCpanel","zone","detector","Subscription","tooltip","normalize","elem","container","nativeElement","show","offsetWidth","scrollWidth","showTooltip","markForCheck","ngAfterViewInit","onResize","ngOnDestroy","unsubscribe","ngOnChanges","sub","onStable","EventEmitter","viewQuery","MatTooltip","text","debounceTime","emit","element","overlay","editing","onBegin","onDone","afterBegin","onSubmit","onCancelOrBlur","extendFormGroup","i360Submit","first","done","setTimeout","focusOnDirective","onClick","stopPropagation","begin","_begin","setEditing","_cancelOnBlurListener","cancel","handleErrorZone","Zone","current","fork","onHandleError","parentZoneDelegate","currentZone","targetZone","error2","destroyed","handleError","run","target","inComponent","contains","inOverlay","getContainerElement","detectChanges","ChangeDetectorRef","contentQueries","dirIndex","ExtendFormGroupDirective","InlineComponent_ng_template_0_Template","editTemplate","valueTemplate"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}