System.register(["@angular/cdk/a11y","@angular/cdk/coercion","@angular/cdk/collections","@angular/core","@angular/forms","@angular/material/core"],(function(t){"use strict";var e,o,n,a,i,l,s,r,c,u,g,d;return{setters:[function(t){e=t},function(t){o=t.coerceBooleanProperty},function(t){n=t.SelectionModel},function(t){a=t.InjectionToken,i=t.forwardRef,l=t.EventEmitter,s=t,t.Directive,t.Optional,t.Inject,t.ContentChildren,t.Input,t.Output,t.Component,t.ViewEncapsulation,t.ChangeDetectionStrategy,t.Attribute,t.ViewChild,t.NgModule},function(t){r=t.NG_VALUE_ACCESSOR},function(t){c=t.mixinDisableRipple,u=t,g=t.MatCommonModule,d=t.MatRippleModule}],execute:function(){const h=["button"],p=t("MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS",new a("MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS")),b=t("MAT_BUTTON_TOGGLE_GROUP",new a("MatButtonToggleGroup")),m=t("MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR",{provide:r,useExisting:i((()=>f)),multi:!0});let _=0;class v{constructor(t,e){this.source=t,this.value=e}}t("MatButtonToggleChange",v);class f{constructor(t,e){this._changeDetector=t,this._vertical=!1,this._multiple=!1,this._disabled=!1,this._controlValueAccessorChangeFn=()=>{},this._onTouched=()=>{},this._name="mat-button-toggle-group-"+_++,this.valueChange=new l,this.change=new l,this.appearance=e&&e.appearance?e.appearance:"standard"}get name(){return this._name}set name(t){this._name=t,this._markButtonsForCheck()}get vertical(){return this._vertical}set vertical(t){this._vertical=o(t)}get value(){const t=this._selectionModel?this._selectionModel.selected:[];return this.multiple?t.map((t=>t.value)):t[0]?t[0].value:void 0}set value(t){this._setSelectionByValue(t),this.valueChange.emit(this.value)}get selected(){const t=this._selectionModel?this._selectionModel.selected:[];return this.multiple?t:t[0]||null}get multiple(){return this._multiple}set multiple(t){this._multiple=o(t),this._markButtonsForCheck()}get disabled(){return this._disabled}set disabled(t){this._disabled=o(t),this._markButtonsForCheck()}ngOnInit(){this._selectionModel=new n(this.multiple,void 0,!1)}ngAfterContentInit(){this._selectionModel.select(...this._buttonToggles.filter((t=>t.checked)))}writeValue(t){this.value=t,this._changeDetector.markForCheck()}registerOnChange(t){this._controlValueAccessorChangeFn=t}registerOnTouched(t){this._onTouched=t}setDisabledState(t){this.disabled=t}_emitChangeEvent(t){const e=new v(t,this.value);this._controlValueAccessorChangeFn(e.value),this.change.emit(e)}_syncButtonToggle(t,e,o=!1,n=!1){this.multiple||!this.selected||t.checked||(this.selected.checked=!1),this._selectionModel?e?this._selectionModel.select(t):this._selectionModel.deselect(t):n=!0,n?Promise.resolve().then((()=>this._updateModelValue(t,o))):this._updateModelValue(t,o)}_isSelected(t){return this._selectionModel&&this._selectionModel.isSelected(t)}_isPrechecked(t){return void 0!==this._rawValue&&(this.multiple&&Array.isArray(this._rawValue)?this._rawValue.some((e=>null!=t.value&&e===t.value)):t.value===this._rawValue)}_setSelectionByValue(t){this._rawValue=t,this._buttonToggles&&(this.multiple&&t?(Array.isArray(t),this._clearSelection(),t.forEach((t=>this._selectValue(t)))):(this._clearSelection(),this._selectValue(t)))}_clearSelection(){this._selectionModel.clear(),this._buttonToggles.forEach((t=>t.checked=!1))}_selectValue(t){const e=this._buttonToggles.find((e=>null!=e.value&&e.value===t));e&&(e.checked=!0,this._selectionModel.select(e))}_updateModelValue(t,e){e&&this._emitChangeEvent(t),this.valueChange.emit(this.value)}_markButtonsForCheck(){this._buttonToggles?.forEach((t=>t._markForCheck()))}}t("MatButtonToggleGroup",f),f.\u0275fac=function(t){return new(t||f)(s.\u0275\u0275directiveInject(s.ChangeDetectorRef),s.\u0275\u0275directiveInject(p,8))},f.\u0275dir=s.\u0275\u0275defineDirective({type:f,selectors:[["mat-button-toggle-group"]],contentQueries:function(t,e,o){if(1&t&&s.\u0275\u0275contentQuery(o,T,5),2&t){let t;s.\u0275\u0275queryRefresh(t=s.\u0275\u0275loadQuery())&&(e._buttonToggles=t)}},hostAttrs:["role","group",1,"mat-button-toggle-group"],hostVars:5,hostBindings:function(t,e){2&t&&(s.\u0275\u0275attribute("aria-disabled",e.disabled),s.\u0275\u0275classProp("mat-button-toggle-vertical",e.vertical)("mat-button-toggle-group-appearance-standard","standard"===e.appearance))},inputs:{appearance:"appearance",name:"name",vertical:"vertical",value:"value",multiple:"multiple",disabled:"disabled"},outputs:{valueChange:"valueChange",change:"change"},exportAs:["matButtonToggleGroup"],features:[s.\u0275\u0275ProvidersFeature([m,{provide:b,useExisting:f}])]});const k=c(class{});class T extends k{constructor(t,e,o,n,a,i){super(),this._changeDetectorRef=e,this._elementRef=o,this._focusMonitor=n,this._checked=!1,this.ariaLabelledby=null,this._disabled=!1,this.change=new l;const s=Number(a);this.tabIndex=s||0===s?s:null,this.buttonToggleGroup=t,this.appearance=i&&i.appearance?i.appearance:"standard"}get buttonId(){return`${this.id}-button`}get appearance(){return this.buttonToggleGroup?this.buttonToggleGroup.appearance:this._appearance}set appearance(t){this._appearance=t}get checked(){return this.buttonToggleGroup?this.buttonToggleGroup._isSelected(this):this._checked}set checked(t){const e=o(t);e!==this._checked&&(this._checked=e,this.buttonToggleGroup&&this.buttonToggleGroup._syncButtonToggle(this,this._checked),this._changeDetectorRef.markForCheck())}get disabled(){return this._disabled||this.buttonToggleGroup&&this.buttonToggleGroup.disabled}set disabled(t){this._disabled=o(t)}ngOnInit(){const t=this.buttonToggleGroup;this.id=this.id||"mat-button-toggle-"+_++,t&&(t._isPrechecked(this)?this.checked=!0:t._isSelected(this)!==this._checked&&t._syncButtonToggle(this,this._checked))}ngAfterViewInit(){this._focusMonitor.monitor(this._elementRef,!0)}ngOnDestroy(){const t=this.buttonToggleGroup;this._focusMonitor.stopMonitoring(this._elementRef),t&&t._isSelected(this)&&t._syncButtonToggle(this,!1,!1,!0)}focus(t){this._buttonElement.nativeElement.focus(t)}_onButtonClick(){const t=!!this._isSingleSelector()||!this._checked;t!==this._checked&&(this._checked=t,this.buttonToggleGroup&&(this.buttonToggleGroup._syncButtonToggle(this,this._checked,!0),this.buttonToggleGroup._onTouched())),this.change.emit(new v(this,this.value))}_markForCheck(){this._changeDetectorRef.markForCheck()}_getButtonName(){return this._isSingleSelector()?this.buttonToggleGroup.name:this.name||null}_isSingleSelector(){return this.buttonToggleGroup&&!this.buttonToggleGroup.multiple}}t("MatButtonToggle",T),T.\u0275fac=function(t){return new(t||T)(s.\u0275\u0275directiveInject(b,8),s.\u0275\u0275directiveInject(s.ChangeDetectorRef),s.\u0275\u0275directiveInject(s.ElementRef),s.\u0275\u0275directiveInject(e.FocusMonitor),s.\u0275\u0275injectAttribute("tabindex"),s.\u0275\u0275directiveInject(p,8))},T.\u0275cmp=s.\u0275\u0275defineComponent({type:T,selectors:[["mat-button-toggle"]],viewQuery:function(t,e){if(1&t&&s.\u0275\u0275viewQuery(h,5),2&t){let t;s.\u0275\u0275queryRefresh(t=s.\u0275\u0275loadQuery())&&(e._buttonElement=t.first)}},hostAttrs:["role","presentation",1,"mat-button-toggle"],hostVars:12,hostBindings:function(t,e){1&t&&s.\u0275\u0275listener("focus",(function(){return e.focus()})),2&t&&(s.\u0275\u0275attribute("aria-label",null)("aria-labelledby",null)("id",e.id)("name",null),s.\u0275\u0275classProp("mat-button-toggle-standalone",!e.buttonToggleGroup)("mat-button-toggle-checked",e.checked)("mat-button-toggle-disabled",e.disabled)("mat-button-toggle-appearance-standard","standard"===e.appearance))},inputs:{disableRipple:"disableRipple",ariaLabel:["aria-label","ariaLabel"],ariaLabelledby:["aria-labelledby","ariaLabelledby"],id:"id",name:"name",value:"value",tabIndex:"tabIndex",appearance:"appearance",checked:"checked",disabled:"disabled"},outputs:{change:"change"},exportAs:["matButtonToggle"],features:[s.\u0275\u0275InheritDefinitionFeature],ngContentSelectors:["*"],decls:6,vars:9,consts:[["type","button",1,"mat-button-toggle-button","mat-focus-indicator",3,"id","disabled","click"],["button",""],[1,"mat-button-toggle-label-content"],[1,"mat-button-toggle-focus-overlay"],["matRipple","",1,"mat-button-toggle-ripple",3,"matRippleTrigger","matRippleDisabled"]],template:function(t,e){if(1&t&&(s.\u0275\u0275projectionDef(),s.\u0275\u0275elementStart(0,"button",0,1),s.\u0275\u0275listener("click",(function(){return e._onButtonClick()})),s.\u0275\u0275elementStart(2,"span",2),s.\u0275\u0275projection(3),s.\u0275\u0275elementEnd()(),s.\u0275\u0275element(4,"span",3)(5,"span",4)),2&t){const t=s.\u0275\u0275reference(1);s.\u0275\u0275property("id",e.buttonId)("disabled",e.disabled||null),s.\u0275\u0275attribute("tabindex",e.disabled?-1:e.tabIndex)("aria-pressed",e.checked)("name",e._getButtonName())("aria-label",e.ariaLabel)("aria-labelledby",e.ariaLabelledby),s.\u0275\u0275advance(5),s.\u0275\u0275property("matRippleTrigger",t)("matRippleDisabled",e.disableRipple||e.disabled)}},dependencies:[u.MatRipple],styles:[".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;border-radius:2px;-webkit-tap-highlight-color:rgba(0,0,0,0);transform:translateZ(0)}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:4px}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:.04}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.12}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;pointer-events:none;opacity:0}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 36px;opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked:hover .mat-button-toggle-focus-overlay{opacity:.6}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}"],encapsulation:2,changeDetection:0});class y{}t("MatButtonToggleModule",y),y.\u0275fac=function(t){return new(t||y)},y.\u0275mod=s.\u0275\u0275defineNgModule({type:y}),y.\u0275inj=s.\u0275\u0275defineInjector({imports:[g,d,g]})}}}));
