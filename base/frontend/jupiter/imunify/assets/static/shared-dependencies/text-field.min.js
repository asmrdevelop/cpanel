System.register(["@angular/cdk/platform","@angular/core","@angular/cdk/coercion","rxjs","rxjs/operators","@angular/common"],(function(e){"use strict";var t,i,s,n,o,r,a,l,h,c,d,u,m;return{setters:[function(e){t=e.normalizePassiveListenerOptions,i=e},function(e){s=e,e.Injectable,e.Directive,e.Output,e.Optional,e.Inject,e.Input,e.NgModule,n=e.EventEmitter},function(e){o=e.coerceElement,r=e.coerceNumberProperty,a=e.coerceBooleanProperty},function(e){l=e.EMPTY,h=e.Subject,c=e.fromEvent},function(e){d=e.auditTime,u=e.takeUntil},function(e){m=e.DOCUMENT}],execute:function(){const _=t({passive:!0});class g{constructor(e,t){this._platform=e,this._ngZone=t,this._monitoredElements=new Map}monitor(e){if(!this._platform.isBrowser)return l;const t=o(e),i=this._monitoredElements.get(t);if(i)return i.subject;const s=new h,n="cdk-text-field-autofilled",r=e=>{"cdk-text-field-autofill-start"!==e.animationName||t.classList.contains(n)?"cdk-text-field-autofill-end"===e.animationName&&t.classList.contains(n)&&(t.classList.remove(n),this._ngZone.run((()=>s.next({target:e.target,isAutofilled:!1})))):(t.classList.add(n),this._ngZone.run((()=>s.next({target:e.target,isAutofilled:!0}))))};return this._ngZone.runOutsideAngular((()=>{t.addEventListener("animationstart",r,_),t.classList.add("cdk-text-field-autofill-monitored")})),this._monitoredElements.set(t,{subject:s,unlisten:()=>{t.removeEventListener("animationstart",r,_)}}),s}stopMonitoring(e){const t=o(e),i=this._monitoredElements.get(t);i&&(i.unlisten(),i.subject.complete(),t.classList.remove("cdk-text-field-autofill-monitored"),t.classList.remove("cdk-text-field-autofilled"),this._monitoredElements.delete(t))}ngOnDestroy(){this._monitoredElements.forEach(((e,t)=>this.stopMonitoring(t)))}}e("AutofillMonitor",g),g.\u0275fac=function(e){return new(e||g)(s.\u0275\u0275inject(i.Platform),s.\u0275\u0275inject(s.NgZone))},g.\u0275prov=s.\u0275\u0275defineInjectable({token:g,factory:g.\u0275fac,providedIn:"root"});class f{constructor(e,t){this._elementRef=e,this._autofillMonitor=t,this.cdkAutofill=new n}ngOnInit(){this._autofillMonitor.monitor(this._elementRef).subscribe((e=>this.cdkAutofill.emit(e)))}ngOnDestroy(){this._autofillMonitor.stopMonitoring(this._elementRef)}}e("CdkAutofill",f),f.\u0275fac=function(e){return new(e||f)(s.\u0275\u0275directiveInject(s.ElementRef),s.\u0275\u0275directiveInject(g))},f.\u0275dir=s.\u0275\u0275defineDirective({type:f,selectors:[["","cdkAutofill",""]],outputs:{cdkAutofill:"cdkAutofill"}});class x{constructor(e,t,i,s){this._elementRef=e,this._platform=t,this._ngZone=i,this._destroyed=new h,this._enabled=!0,this._previousMinRows=-1,this._isViewInited=!1,this._handleFocusEvent=e=>{this._hasFocus="focus"===e.type},this._document=s,this._textareaElement=this._elementRef.nativeElement}get minRows(){return this._minRows}set minRows(e){this._minRows=r(e),this._setMinHeight()}get maxRows(){return this._maxRows}set maxRows(e){this._maxRows=r(e),this._setMaxHeight()}get enabled(){return this._enabled}set enabled(e){e=a(e),this._enabled!==e&&((this._enabled=e)?this.resizeToFitContent(!0):this.reset())}get placeholder(){return this._textareaElement.placeholder}set placeholder(e){this._cachedPlaceholderHeight=void 0,e?this._textareaElement.setAttribute("placeholder",e):this._textareaElement.removeAttribute("placeholder"),this._cacheTextareaPlaceholderHeight()}_setMinHeight(){const e=this.minRows&&this._cachedLineHeight?this.minRows*this._cachedLineHeight+"px":null;e&&(this._textareaElement.style.minHeight=e)}_setMaxHeight(){const e=this.maxRows&&this._cachedLineHeight?this.maxRows*this._cachedLineHeight+"px":null;e&&(this._textareaElement.style.maxHeight=e)}ngAfterViewInit(){this._platform.isBrowser&&(this._initialHeight=this._textareaElement.style.height,this.resizeToFitContent(),this._ngZone.runOutsideAngular((()=>{const e=this._getWindow();c(e,"resize").pipe(d(16),u(this._destroyed)).subscribe((()=>this.resizeToFitContent(!0))),this._textareaElement.addEventListener("focus",this._handleFocusEvent),this._textareaElement.addEventListener("blur",this._handleFocusEvent)})),this._isViewInited=!0,this.resizeToFitContent(!0))}ngOnDestroy(){this._textareaElement.removeEventListener("focus",this._handleFocusEvent),this._textareaElement.removeEventListener("blur",this._handleFocusEvent),this._destroyed.next(),this._destroyed.complete()}_cacheTextareaLineHeight(){if(this._cachedLineHeight)return;let e=this._textareaElement.cloneNode(!1);e.rows=1,e.style.position="absolute",e.style.visibility="hidden",e.style.border="none",e.style.padding="0",e.style.height="",e.style.minHeight="",e.style.maxHeight="",e.style.overflow="hidden",this._textareaElement.parentNode.appendChild(e),this._cachedLineHeight=e.clientHeight,e.remove(),this._setMinHeight(),this._setMaxHeight()}_measureScrollHeight(){const e=this._textareaElement,t=e.style.marginBottom||"",i=this._platform.FIREFOX,s=i&&this._hasFocus,n=i?"cdk-textarea-autosize-measuring-firefox":"cdk-textarea-autosize-measuring";s&&(e.style.marginBottom=`${e.clientHeight}px`),e.classList.add(n);const o=e.scrollHeight-4;return e.classList.remove(n),s&&(e.style.marginBottom=t),o}_cacheTextareaPlaceholderHeight(){if(!this._isViewInited||null!=this._cachedPlaceholderHeight)return;if(!this.placeholder)return void(this._cachedPlaceholderHeight=0);const e=this._textareaElement.value;this._textareaElement.value=this._textareaElement.placeholder,this._cachedPlaceholderHeight=this._measureScrollHeight(),this._textareaElement.value=e}ngDoCheck(){this._platform.isBrowser&&this.resizeToFitContent()}resizeToFitContent(e=!1){if(!this._enabled)return;if(this._cacheTextareaLineHeight(),this._cacheTextareaPlaceholderHeight(),!this._cachedLineHeight)return;const t=this._elementRef.nativeElement,i=t.value;if(!e&&this._minRows===this._previousMinRows&&i===this._previousValue)return;const s=this._measureScrollHeight(),n=Math.max(s,this._cachedPlaceholderHeight||0);t.style.height=`${n}px`,this._ngZone.runOutsideAngular((()=>{"undefined"!=typeof requestAnimationFrame?requestAnimationFrame((()=>this._scrollToCaretPosition(t))):setTimeout((()=>this._scrollToCaretPosition(t)))})),this._previousValue=i,this._previousMinRows=this._minRows}reset(){void 0!==this._initialHeight&&(this._textareaElement.style.height=this._initialHeight)}_noopInputHandler(){}_getDocument(){return this._document||document}_getWindow(){return this._getDocument().defaultView||window}_scrollToCaretPosition(e){const{selectionStart:t,selectionEnd:i}=e;!this._destroyed.isStopped&&this._hasFocus&&e.setSelectionRange(t,i)}}e("CdkTextareaAutosize",x),x.\u0275fac=function(e){return new(e||x)(s.\u0275\u0275directiveInject(s.ElementRef),s.\u0275\u0275directiveInject(i.Platform),s.\u0275\u0275directiveInject(s.NgZone),s.\u0275\u0275directiveInject(m,8))},x.\u0275dir=s.\u0275\u0275defineDirective({type:x,selectors:[["textarea","cdkTextareaAutosize",""]],hostAttrs:["rows","1",1,"cdk-textarea-autosize"],hostBindings:function(e,t){1&e&&s.\u0275\u0275listener("input",(function(){return t._noopInputHandler()}))},inputs:{minRows:["cdkAutosizeMinRows","minRows"],maxRows:["cdkAutosizeMaxRows","maxRows"],enabled:["cdkTextareaAutosize","enabled"],placeholder:"placeholder"},exportAs:["cdkTextareaAutosize"]});class p{}e("TextFieldModule",p),p.\u0275fac=function(e){return new(e||p)},p.\u0275mod=s.\u0275\u0275defineNgModule({type:p}),p.\u0275inj=s.\u0275\u0275defineInjector({})}}}));
