define(["angular","cjt/util/locale","cjt/util/parse","cjt/io/uapi-request","cjt/services/APIService","cjt/io/uapi"],(function(e,r,t,n){"use strict";var a;try{a=e.module("App")}catch(r){a=e.module("App",[])}a.factory("backupAPIService",["APIService",function(a){var i={compressed:r.maketext("Compressed"),uncompressed:r.maketext("Uncompressed"),incremental:r.maketext("Incremental")},o={file:r.maketext("File"),dir:r.maketext("Directory"),symlink:r.maketext("Symlink")};function s(e){var t=e.data,n=[];return t.forEach((function(e){if(e.lastModifiedTime=r.local_datetime(parseInt(e.mtime,10),"datetime_format_short"),!i.hasOwnProperty(e.backupType))throw"DEVELOPER ERROR: Invalid backup type";e.backupType=i[e.backupType],e.type=o[e.type],n.push(e)})),n}function c(e){var r=[];return e.data.forEach((function(e){e.conflict=t.parsePerlBoolean(e.conflict),e.exists=t.parsePerlBoolean(e.exists),r.push(e)})),e.data=r,e}var u=function(){};return u.prototype=new a,e.extend(u.prototype,{listDirectoryContents:function(e,r,t){var a=new n.Class;return a.initialize("Restore","directory_listing"),a.addArgument("path",e),t&&a.addPaging(r,t),this.deferred(a,{transformAPISuccess:c,transformAPIFailure:function(e){return e.error}}).promise},listBackups:function(e,r){var t=new n.Class;return t.initialize("Restore","query_file_info"),t.addArgument("path",e),t.addArgument("exists",r),this.deferred(t,{transformAPISuccess:s,transformAPIFailure:function(e){return e.error}}).promise},restoreBackup:function(e,r){var t=new n.Class;return t.initialize("Restore","restore_file"),t.addArgument("backupID",r),t.addArgument("path",e),t.addArgument("overwrite",1),this.deferred(t,{transformAPISuccess:function(e){return e.data},transformAPIFailure:function(e){return e.error}}).promise}}),new u}])}));