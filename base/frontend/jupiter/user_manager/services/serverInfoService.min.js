define(["angular","lodash","cjt/util/parse"],(function(e,r,a){e.module("App").factory("serverInfoService",[function(){var n={prepareSslInfo:function(e){return e.cert_valid_not_after=new Date(1e3*e.cert_valid_not_after),e.cert_valid=new Date<e.cert_valid_not_after,e.is_self_signed=a.parsePerlBoolean(e.is_self_signed),e.is_wild_card=a.parsePerlBoolean(e.is_wild_card),e.ssldomain_matches_cert=a.parsePerlBoolean(e.ssldomain_matches_cert),e},prepareFtpDaemonInfo:function(e){return e.enabled=a.parsePerlBoolean(e.enabled),e.supports.quota=a.parsePerlBoolean(e.supports.quota),e.supports.login_without_domain=a.parsePerlBoolean(e.supports.login_without_domain),e},prepareDefaultInfo:function(e){return r.each(["email","ftp","webdisk"],(function(n){var t=e[n];r.each(["default_quota","default_value","max_quota","unlimitedValue"],(function(e){t[e]=parseInt(t[e],10),isNaN(t[e])&&(t[e]=0)})),t.select_unlimited=a.parsePerlBoolean(t.select_unlimited)})),e},prepareQuotaInfo:function(e){return n.parseObj(e,{under_megabyte_limit:a.parsePerlBoolean,under_inode_limit:a.parsePerlBoolean,under_quota_overall:a.parsePerlBoolean,inodes_used:a.parseInteger,inode_limit:a.parseInteger,inodes_remain:a.parseInteger,megabytes_used:a.parseNumber,megabyte_limit:a.parseNumber,megabytes_remain:a.parseNumber})},parseObj:function(r,a){return e.forEach(a,(function(e,a){r[a]=e(r[a])})),r}};return n}])}));