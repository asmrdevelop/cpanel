[%
    USE SSL;

    SET CPANEL.CPVAR.dprefix = "../../";

    SET has_WebServer_role = ExpVar.expand("\$HASROLE{'WebServer'}");

    IF !has_WebServer_role;
        SET domains_api_args = {
            'api.filter' => 1,
            'api.filter_column' => 'domain',
            'api.filter_type' => 'matches',
            'api.filter_term' => '^(?!www\\.)',
        };
    END;
    SET domains = execute('WebVhosts','list_ssl_capable_domains', domains_api_args || {}).data;

    SET domain_types = execute('DomainInfo','list_domains').data;
    SET installed_hosts = execute('SSL','installed_hosts').data;
    SET autossl_excluded_domains = execute('SSL','get_autossl_excluded_domains').data;
    SET autossl_override_enabled = SSL.autossl_override_enabled();
    SET autossl_enabled = CPANEL.feature("autossl");
    SET ddns_enabled = CPANEL.feature("dynamicdns");
    SET ddns_domains = ddns_enabled ? execute('DynamicDNS','list').data : [];
    SET autossl_provider = SSL.get_autossl_provider();
    SET autossl_can_wildcard = SSL.autossl_supports_wildcard();

    SET products = execute('Market', 'get_all_products', {
        'api.filter'=>1,
        'api.filter_type_0'=>'eq',
        'api.filter_term_0'=>'ssl_certificate',
        'api.filter_column_0'=>'product_group',
        'api.filter_type_1'=>'eq',
        'api.filter_term_1'=>'1',
        'api.filter_column_1'=>'enabled',
        "api.sort"=>1,
        'api.sort_column_0' => "recommended",
        "api.sort_method_0" => "numeric"
        "api.sort_reverse_0" => "1"
        'api.sort_column_1' => "x_price_per_domain",
        "api.sort_method_1" => "numeric"
    }).data;
%]

[% WRAPPER '_assets/master.html.tt'
    app_key = 'tls_status'
    use_master_bootstrap = 0
    page_stylesheets = ['security/tls_status/index.css']
-%]

    <section id="txtPageDescription" class="description">
        [% locale.maketext('You can use this interface to view the [asis,SSL] status of your domains.') %]
        [% locale.maketext("For more information on this interface, read the [output,url,_1,documentation,target,_2,id,_3].", "https://go.cpanel.net/tlsstatus", "_blank", "lnktlsstatusDocumentation") %]
    </section>


    <div ng-controller="BaseController" class="ng-cloak" ng-cloak id="app_tlsStatus">

        <div class="loading" ng-show="loading">
            <div class="callout callout-info">
                <span class="fas fa-spinner fa-lg fa-spin"></span>
                [% locale.maketext('Loading â€¦') %]
            </div>
        </div>
        <!-- NOTE: leave the alert-group in single quotes -->
        <cp-alert-list alert-group="'tlsStatus'"></cp-alert-list>
        <div ng-class="{'view-disabled':loading}" class="animate-view" ng-view></div>
    </div>

    <script type="text/javascript">
        PAGE = {};
        PAGE.domains = [% domains.json() %];
        PAGE.ddns_domains = [% ddns_domains.json() %]
        PAGE.domain_types = [% domain_types.json() %];
        PAGE.installed_hosts = [% installed_hosts.json() %];
        PAGE.products = [% products.json() %];
        PAGE.hasWebServerRole = !![% has_WebServer_role || 0 %];
        PAGE.has_tls_wizard_feature = [% JSON.stringify(CPANEL.feature('tls_wizard')) %];
        PAGE.autossl_override_enabled = [% autossl_override_enabled.json() %];
        PAGE.autossl_enabled = [% autossl_enabled.json() %];
        PAGE.ddnsEnabled = [% ddns_enabled.json() %];
        PAGE.autossl_provider = [% autossl_provider.json() %];
        PAGE.autossl_excluded_domains = [% autossl_excluded_domains.json() %];
        PAGE.autossl_can_wildcard = [% autossl_can_wildcard.json() %];

        [% INSERT 'sharedjs/asn1_optimized.js' %]
        [% INSERT "sharedjs/ssl_optimized.js" %]
        [% INSERT 'cjt/ssl-min.js' %]
    </script>

    [% PROCESS '_assets/cjt2_header_include.tt' %]

[% END #wrapper %]
