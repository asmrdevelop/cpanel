//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/base/frontend/jupiter/security/tls_wizard/views/VirtualHostsController.js
// Generated: /usr/local/cpanel/base/frontend/jupiter/security/tls_wizard/views/VirtualHostsController-ja.js
// Module:    /jupiter/security/tls_wizard/views/VirtualHostsController-ja
// Locale:    ja
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"A [output,abbr,DV,Domain Validated] certificate is installed.":"[output,abbr,DV,DV]の証明書がインストールされています。","A certificate of unknown type is installed.":"不明なタイプの証明書がインストールされています。","A self-signed certificate is installed.":"自己署名証明書がインストールされています。","An [output,abbr,EV,Extended Validation] certificate is installed.":"[output,abbr,EV,EV] 証明書がインストールされています。","An [output,abbr,OV,Organization Validated] certificate is installed.":"[output,abbr,OV,OV] 証明書がインストールされています。","Deselect all unresolved domains ([numf,_1]).":"未解決のドメイン ([numf,_1]) の選択をすべて解除してください。","Failed to save information to browser cache.":"ブラウザのキャッシュに情報を保存できませんでした。","Item Successfully Added to Cart.":"アイテムが正常に買い物かごに追加されました。","Proceed to checkout.":"支払いに進みます。","You have altered an item in your cart. The system has removed that item. After you make the necessary changes, add that item back to your cart.":"買い物かごの中にあるアイテムを変更しました。システムが該当アイテムを取り除きました。必要な変更が済んだ際にアイテムを買い物かごに戻してください。","[output,strong,Showing] [numf,_1] - [numf,_2] of [quant,_3,domain,domains].":"[quant,_3,個のドメイン,個のドメイン] のうち、[numf,_1] - [numf,_2] 個を [output,strong,表示しています] 。","[output,strong,Showing] [numf,_1] of [quant,_2,website,websites]":"[output,strong,Showing] [numf,_1] of [quant,_2,website,websites]","[quant,_1,Certificate,Certificates]":"[quant,_1,証明書,証明書]"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
