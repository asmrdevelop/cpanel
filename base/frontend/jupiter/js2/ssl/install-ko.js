//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/base/frontend/jupiter/js2/ssl/install.js
// Generated: /usr/local/cpanel/base/frontend/jupiter/js2/ssl/install-ko.js
// Module:    /jupiter/js2/ssl/install-ko
// Locale:    ko
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"Actions":"작업","Are you sure that you want to delete the SSL host “[_1]”? This operation cannot be undone!":"SSL 호스트 “[_1]”을(를) 삭제하시겠습니까? 이 작업은 실행 취소할 수 없습니다!","Certificate Expiration":"인증서 만료","Confirm SSL Host Delete":"SSL 호스트 삭제 확인","Deleting SSL host “[_1]” …":"SSL 호스트 “[_1]”을(를) 삭제하는 중…","Document Root":"문서 루트","Is Primary Website on IP Address?":"기본 웹 사이트가 IP 주소로 연결되어 있습니까?","Is Web [output,acronym,SNI,Server Name Indication] Required?":"웹 [output,acronym,SNI,Server Name Indication]가 필요합니까?","Loading …":"로드하는 중 …","No":"아니요","Setting “[_1]” as the primary SSL host …":"Setting “[_1]” as the primary SSL host …","The SSL host for “[_1]” has been removed.":"“[_1]”에 대한 SSL 호스트가 제거되었습니다.","Yes":"예","[output,abbr,FQDN,Fully Qualified Domain Name]s":"[output,abbr,FQDN,Fully Qualified Domain Name]s","[output,strong,Note:] You don’t have a dedicated IP address. Browsers that were released before 2013 may not support [output,abbr,SNI,Server Name Indication]. Because of this, users may see false security warnings when they visit your SSL-secured websites.":"[output,strong,Note:] You don’t have a dedicated IP address. Browsers that were released before 2013 may not support [output,abbr,SNI,Server Name Indication]. Because of this, users may see false security warnings when they visit your SSL-secured websites.","“[_1]” is now the primary SSL host.":"“[_1]” is now the primary SSL host."};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
