//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/base/sharedjs/sslwidgets.js
// Generated: /usr/local/cpanel/base/sharedjs/sslwidgets-zh_tw.js
// Module:    legacy_shared/sslwidgets-zh_tw
// Locale:    zh_tw
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"Certificate Expiration":"憑證到期","Certificate Key Sizes":"憑證金鑰大小","Contact your certificate authority ([_1]) to reissue this certificate with a [numf,_2]-bit key.":"連絡您的憑證授權單位 ([_1])，重新發行 [numf,_2] 位元金鑰的憑證。","Contact your certificate authority to reissue this certificate with a longer key.":"連絡您的憑證授權單位，重新發行較長金鑰的憑證。","Generate and install a new self-signed certificate immediately. Then, replace this certificate with a certificate signed by a valid certificate authority as soon as possible.":"立即產生並安裝新的自我簽署憑證。 然後，盡快使用有效憑證授權單位所簽署的憑證取代此憑證。","It is highly recommended that you do not install this certificate.":"強烈建議您不要安裝此憑證。","Purchase a new certificate.":"Purchase a new certificate.","Self-Signed Certificates":"自我簽署憑證","The recommended key size for a certificate is currently [quant,_1,bit,bits].":"目前建議的憑證金鑰大小為 [quant,_1,位元,位元]。","This certificate will expire in [quant,_1,day,days].":"此憑證將在 [quant,_1,天,天]後到期。","This certificate’s key is too short ([quant,_1,bit,bits]). This key will not protect against a spoofing attack.":"憑證金鑰太短 ([quant,_1,位元,位元])。 此金鑰將無法防止詐騙攻擊。","You should generate another self-signed certificate for [quant,_1,this domain,these domains] with a [numf,_2]-bit key.":"您應該為 [quant,_1,此網域,這些網域] 產生另一個有 [numf,_2] 位元金鑰的自我簽署憑證。","You should request a replacement certificate from the issuer ([_1]) as soon as possible.":"您應盡快向發行者 ([_1]) 要求替換憑證。"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
