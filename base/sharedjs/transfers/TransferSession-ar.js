//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/base/sharedjs/transfers/TransferSession.js
// Generated: /usr/local/cpanel/base/sharedjs/transfers/TransferSession-ar.js
// Module:    legacy_shared/transfers/TransferSession-ar
// Locale:    ar
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"Abort Session Processing":"إيقاف معالجة جلسة العمل قبل الاكتمال","Are you sure you want to abort this transfer?":"هل تريد بالتأكيد إيقاف عملية النقل قبل الاكتمال؟","Are you sure you want to pause this transfer?":"هل تريد بالتأكيد إيقاف عملية النقل مؤقتًا؟","Failed to abort the session.":"فشل إيقاف جلسة العمل قبل الاكتمال.","Failed to pause the session.":"فشل إيقاف جلسة العمل مؤقتًا.","Failed to start transfer.":"فشل بدء عملية النقل.","Pausing queue processing …":"جارٍ إيقاف معالجة قائمة الانتظار مؤقتًا…","The system will abort any transfer processes as soon as possible. In order to prevent data loss, the system will complete ongoing restore operations before the entire session aborts.":"سيقوم النظام بإيقاف أي عمليات نقل قبل الاكتمال في أسرع وقت ممكن. ولمنع فقد البيانات، سيقوم النظام بإكمال عمليات الاستعادة المستمرة قبل إيقاف جلسة العمل بالكامل قبل الاكتمال.","The system will not add new items to the queue until you choose to resume. In order to prevent data loss, the system will complete ongoing operations.":"لن يقوم النظام بإضافة عناصر جديدة إلى قائمة الانتظار حتى تختار استئناف ذلك. ولمنع فقد البيانات، سيقوم النظام بإكمال العمليات المستمرة.","There is no handler for [asis,sessionState]: [_1]":"لا توجد أية معالجات لـ [asis,sessionState]: [_1]"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
