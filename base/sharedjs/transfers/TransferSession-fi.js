//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/base/sharedjs/transfers/TransferSession.js
// Generated: /usr/local/cpanel/base/sharedjs/transfers/TransferSession-fi.js
// Module:    legacy_shared/transfers/TransferSession-fi
// Locale:    fi
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"Abort Session Processing":"Keskeytä istunnon käsittely","Are you sure you want to abort this transfer?":"Haluatko varmasti keskeyttää tämän siirron?","Are you sure you want to pause this transfer?":"Haluatko varmasti pysäyttää tämän siirron?","Failed to abort the session.":"Istunnon keskeyttäminen epäonnistui.","Failed to pause the session.":"Istunnon pysäyttäminen epäonnistui.","Failed to start transfer.":"Siirron aloitus epäonnistui.","Pausing queue processing …":"Keskeytetään jonon käsittelyä…","The system will abort any transfer processes as soon as possible. In order to prevent data loss, the system will complete ongoing restore operations before the entire session aborts.":"Järjestelmä keskeyttää siirtoprosessit mahdollisimman pian. Jotta tietoja ei menetetä, järjestelmä tekee meneillään olevat palautustoimet valmiiksi, ennen kuin koko istunto keskeytyy.","The system will not add new items to the queue until you choose to resume. In order to prevent data loss, the system will complete ongoing operations.":"Järjestelmä ei lisää uusia kohteita jonoon, ennen kuin jatkat. Jotta tietoja ei menetetä, järjestelmä tekee meneillään olevat palautustoimet valmiiksi.","There is no handler for [asis,sessionState]: [_1]":"Tiedoille [asis,sessionState] ei ole käsittelijää: [_1]"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
