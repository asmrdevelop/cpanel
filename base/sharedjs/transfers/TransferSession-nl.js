//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/base/sharedjs/transfers/TransferSession.js
// Generated: /usr/local/cpanel/base/sharedjs/transfers/TransferSession-nl.js
// Module:    legacy_shared/transfers/TransferSession-nl
// Locale:    nl
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"Abort Session Processing":"Sessieverwerking afbreken","Are you sure you want to abort this transfer?":"Weet u zeker dat u deze overdracht wilt afbreken?","Are you sure you want to pause this transfer?":"Weet u zeker dat u deze overdracht wilt onderbreken?","Failed to abort the session.":"Kan de sessies niet afbreken.","Failed to pause the session.":"Kan de sessies niet onderbreken.","Failed to start transfer.":"Kan de overdracht niet starten.","Pausing queue processing …":"Wachtrijverwerking onderbreken …","The system will abort any transfer processes as soon as possible. In order to prevent data loss, the system will complete ongoing restore operations before the entire session aborts.":"Actieve overdrachtsprocessen worden zo snel mogelijk afgebroken. Om gegevensverlies te voorkomen, worden actieve herstelbewerkingen afgerond voordat de sessie in zijn geheel wordt afgebroken.","The system will not add new items to the queue until you choose to resume. In order to prevent data loss, the system will complete ongoing operations.":"Er worden pas nieuwe items in de wachtrij geplaatst nadat u hebt aangegeven dat u verder wilt gaan. Om gegevensverlies te voorkomen, worden actieve bewerkingen afgerond.","There is no handler for [asis,sessionState]: [_1]":"Er is geen handler voor [asis,sessionState]: [_1]"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
