//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/base/sharedjs/transfers/TransferSession.js
// Generated: /usr/local/cpanel/base/sharedjs/transfers/TransferSession-fr.js
// Module:    legacy_shared/transfers/TransferSession-fr
// Locale:    fr
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"Abort Session Processing":"Abandonner le traitement de la session","Are you sure you want to abort this transfer?":"Voulez-vous vraiment abandonner ce transfert ?","Are you sure you want to pause this transfer?":"Voulez-vous vraiment mettre ce transfert en pause ?","Failed to abort the session.":"L’abandon de la session a échoué.","Failed to pause the session.":"La mise en pause de la session a échoué.","Failed to start transfer.":"Le démarrage du transfert a échoué.","Pausing queue processing …":"Mise en pause du traitement de la file d’attente…","The system will abort any transfer processes as soon as possible. In order to prevent data loss, the system will complete ongoing restore operations before the entire session aborts.":"Le système abandonnera dès que possible tous les processus de transfert. Pour éviter toute perte de données, le système terminera les opérations de restauration en cours avant d’abandonner la session.","The system will not add new items to the queue until you choose to resume. In order to prevent data loss, the system will complete ongoing operations.":"Le système n’ajoutera pas de nouveaux éléments à la file d’attente avant la reprise. Pour éviter toute perte de données, le système terminera les opérations en cours.","There is no handler for [asis,sessionState]: [_1]":"Il n’existe pas de gestionnaire pour [asis,sessionState] : [_1]"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
