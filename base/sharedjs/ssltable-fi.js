//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/base/sharedjs/ssltable.js
// Generated: /usr/local/cpanel/base/sharedjs/ssltable-fi.js
// Module:    legacy_shared/ssltable-fi
// Locale:    fi
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"Certificate ID:":"Varmenteen tunnus:","Contact your Certificate Authority ([_1]) to request a certificate renewal.":"Ota yhteys varmenteen myöntäjään ([_1]) ja pyydä varmenteen uusimista.","Contact your certificate authority ([_1]) to reissue this certificate with a [numf,_2]-bit key.":"Pyydä varmenteen myöntäjää ([_1]) myöntämään tämä varmenne uudelleen käyttämällä [numf,_2]-bittistä avainta.","Purchase a replacement certificate in the “[_1]”.":"Purchase a replacement certificate in the “[_1]”.","SSL/TLS Wizard":"SSL/TLS Wizard","This certificate has expired.":"Tämä varmenne on vanhentunut.","This certificate will expire in [quant,_1,day,days].":"Tämä varmenne vanhentuu [quant,_1,päivä,päivää] kuluttua.","This certificate will expire later today.":"Tämä varmenne vanhentuu myöhemmin tänään.","This certificate’s key is too short ([quant,_1,bit,bits]). This key will not protect against a spoofing attack.":"Tämän varmenteen avain on liian lyhyt ([quant,_1,-bittinen,-bittinen]). Tämä avain ei suojaa huijaushyökkäyksiltä.","You should generate another self-signed certificate for [quant,_1,this domain,these domains] with a [numf,_2]-bit key.":"Luo [quant,_1,tälle toimialueelle,näille toimialueille] toinen itse allekirjoitettu varmenne, jossa on [numf,_2]-bittinen avain.","unknown":"tuntematon"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
