//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/base/sharedjs/zone_editor/views/manage.js
// Generated: /usr/local/cpanel/base/sharedjs/zone_editor/views/manage-ja.js
// Module:    legacy_shared/zone_editor/views/manage-ja
// Locale:    ja
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"Certificate Authority":"認証局","Copy failed.":"コピーに失敗しました。","Mail Address for Notifications":"通知用のメールアドレス","Only 1 “[_1]” record may exist per name. Rename or delete [_2]’s extra “[_1]” [numerate,_3,record,records].":"Only 1 “[_1]” record may exist per name. Rename or delete [_2]’s extra “[_1]” [numerate,_3,record,records].","Successfully copied to the clipboard.":"クリップボードへ正常にコピーしました。","The certificate authority’s domain name.":"認証局のドメイン名。","The location to which the certificate authority will report exceptions. Either a [asis,mailto] or standard [asis,URL].":"認証局が例外を報告する場所。[asis,mailto]または標準の[asis,URL]。","You successfully deleted the [_1] record.":"[_1]記録の削除に成功しました。","You successfully deleted the [_1] record: [_2]":"[_1]記録：[_2]の削除に成功しました。","You successfully reset the zone for “[_1]”.":"「[_1]」のゾーンをリセットすることに成功しました。","You successfully saved [quant,_1,record,records] for “[_2]”.":"You successfully saved [quant,_1,record,records] for “[_2]”.","You successfully saved the following [_1] record for “[_2]”: “[_3]”.":"「[_2]」: 「[_3]」の[_1]記録を保存することに成功しました。","[_1]’s “[_2]” [numerate,_3,,records have] mismatched [asis,TTL] [numerate,_3,,values] ([list_and,_4]). Records of the same name and type must always have the same [asis,TTL] value.":"[_1]’s “[_2]” [numerate,_3,,records have] mismatched [asis,TTL] [numerate,_3,,values] ([list_and,_4]). Records of the same name and type must always have the same [asis,TTL] value."};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
