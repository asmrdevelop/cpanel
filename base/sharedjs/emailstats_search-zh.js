//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/base/sharedjs/emailstats_search.js
// Generated: /usr/local/cpanel/base/sharedjs/emailstats_search-zh.js
// Module:    legacy_shared/emailstats_search-zh
// Locale:    zh
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"Close":"关闭","Delivery Event Details":"传递事件详细信息","If you cannot find what you are looking for by paging through these results, please restrict the query further by narrowing your search.":"如果查看这些结果页面仍无法找到搜索内容，请通过缩小搜索范围进一步限制查询。","Invalid date.":"日期无效。","Loading new data …":"正在加载新数据…","Print":"打印","The mail server delivered this message successfully.":"邮件服务器已成功传递该邮件。","The mail server is currently delivering this message.":"邮件服务器当前正在传递该邮件。","The results available below may not contain the record or records you are looking for.":"下面提供的结果可能未包含您要查找的记录。","The specified record’s details are already visible. See the corresponding popup window.":"指定记录的详细信息已可见。 请参见相应的弹出窗口。","This can only be selected when [output,class,Delivery Type,code] is [output,class,All,code].":"这只能在[output,class,传递类型,code]为[output,class,全部,code]时选择。","This message could not be delivered yet. The mail server will attempt delivery again later.":"尚无法传递该邮件。 邮件服务器稍后将尝试再次传递。","This message could not be delivered.":"无法传递该邮件。","This message was discarded by an email filter or spam detection software.":"此邮件被电子邮件筛选器或垃圾邮件检测软件丢弃。","This message was rejected at SMTP time by an RBL, filter, or other configuration.":"此邮件在经过 SMTP 处理时被 RBL、筛选器或其他配置拒绝。","This message was saved into an email archive.":"此邮件已保存至电子邮件存档。","This query produced a result set that exceeds the reportable limit.":"该请求得到的结果集超出了可报告的限制。"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
