//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/base/sharedjs/ssltable.js
// Generated: /usr/local/cpanel/base/sharedjs/ssltable-el.js
// Module:    legacy_shared/ssltable-el
// Locale:    el
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"Certificate ID:":"Αναγνωριστικό πιστοποιητικού:","Contact your Certificate Authority ([_1]) to request a certificate renewal.":"Επικοινωνήστε με την αρχή έκδοσης του πιστοποιητικού ([_1]) για να ζητήσετε ανανέωση του πιστοποιητικού.","Contact your certificate authority ([_1]) to reissue this certificate with a [numf,_2]-bit key.":"Επικοινωνήστε με την αρχή έκδοσης του πιστοποιητικού ([_1]) για να εκδώσει ξανά αυτό το πιστοποιητικό με κλειδί [numf,_2]-bit.","Purchase a replacement certificate in the “[_1]”.":"Purchase a replacement certificate in the “[_1]”.","SSL/TLS Wizard":"SSL/TLS Wizard","This certificate has expired.":"Αυτό το πιστοποιητικό έχει λήξει.","This certificate will expire in [quant,_1,day,days].":"Αυτό το πιστοποιητικό θα λήξει σε [quant,_1,ημέρα,ημέρες].","This certificate will expire later today.":"Αυτό το πιστοποιητικό θα λήξει αργότερα σήμερα.","This certificate’s key is too short ([quant,_1,bit,bits]). This key will not protect against a spoofing attack.":"Το κλειδί αυτού του πιστοποιητικού είναι πολύ μικρό ([quant,_1,bit,bit]). Το κλειδί δεν θα προσφέρει προστασία σε μια επίθεση πλαστογράφησης.","You should generate another self-signed certificate for [quant,_1,this domain,these domains] with a [numf,_2]-bit key.":"Πρέπει να δημιουργήσετε ένα άλλο πιστοποιητικό αυτόματης υπογραφής για [quant,_1,αυτός ο τομέας,αυτοί οι τομείς] με κλειδί [numf,_2]-bit.","unknown":"άγνωστο"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
