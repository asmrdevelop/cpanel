//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/base/sharedjs/api_shell.js
// Generated: /usr/local/cpanel/base/sharedjs/api_shell-ja.js
// Module:    legacy_shared/api_shell-ja
// Locale:    ja
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"Hide Sort/Filter/Paginate Options":"並び替え/フィルタ/ページ番号 オプションを非表示にする","Invalid JSON.":"無効な JSON です。","Raw view":"生ビュー","Retrieving API call results …":"API 呼び出し結果を取得中 …","Show Sort/Filter/Paginate Options":"並び替え/フィルタ/ページ番号 オプションを表示","Table View is unavailable for this function’s data.":"テーブルビューは、この関数のデータでは利用できません。","Table view":"テーブルビュー","Tree view":"ツリービュー","[format_bytes,_1] compressed, [format_bytes,_2] uncompressed":"[format_bytes,_1] 圧縮済み、[format_bytes,_2]非圧縮","[quant,_1,record,records], [quant,_2,field,fields] per record":"[quant,_1,record,records], [quant,_2,field,fields] per record","compressed size unknown, [format_bytes,_1] uncompressed":"圧縮後のサイズが不明です。[format_bytes,_1] が圧縮されていません。"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
