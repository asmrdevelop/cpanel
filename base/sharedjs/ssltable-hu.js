//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/base/sharedjs/ssltable.js
// Generated: /usr/local/cpanel/base/sharedjs/ssltable-hu.js
// Module:    legacy_shared/ssltable-hu
// Locale:    hu
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"Certificate ID:":"Tanúsítvány azonosítója:","Contact your Certificate Authority ([_1]) to request a certificate renewal.":"Forduljon a tanúsító hatósághoz ([_1]) és kérje a tanúsítvány meghosszabbítását.","Contact your certificate authority ([_1]) to reissue this certificate with a [numf,_2]-bit key.":"Forduljon a tanúsító hatósághoz ([_1]) és kérje e tanúsítvány [numf,_2] bites kulccsal történő ismételt kiadását.","Purchase a replacement certificate in the “[_1]”.":"Purchase a replacement certificate in the “[_1]”.","SSL/TLS Wizard":"SSL/TLS Wizard","This certificate has expired.":"Ez a tanúsítvány lejárt.","This certificate will expire in [quant,_1,day,days].":"Ez a tanúsítvány [quant,_1,nap,nap] múlva lejár.","This certificate will expire later today.":"Ez a tanúsítvány a mai nap folyamán lejár.","This certificate’s key is too short ([quant,_1,bit,bits]). This key will not protect against a spoofing attack.":"A tanúsítvány kulcsa túl rövid ([quant,_1,bit,bit]) Ez a kulcs hamisításos támadás ellen nem ad védelmet.","You should generate another self-signed certificate for [quant,_1,this domain,these domains] with a [numf,_2]-bit key.":"Érdemes egy másik önaláírt tanúsítványt is generálnia [quant,_1,ehhez a tartományhoz,ezekhez a tartományokhoz], [numf,_2] bites kulccsal.","unknown":"ismeretlen"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
