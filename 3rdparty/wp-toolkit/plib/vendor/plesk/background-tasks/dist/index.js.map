{"version":3,"file":"index.js","sources":["../frontend/constants.js","../frontend/helper.js","../frontend/actions.js","../node_modules/style-inject/dist/style-inject.es.js","../frontend/BackgroundTasks/BackgroundTaskItem.js","../frontend/BackgroundTasks/BackgroundTaskDetails.js","../frontend/BackgroundTasks/BackgroundTasks.js","../frontend/BackgroundTasks/index.js","../frontend/poller.js","../frontend/middleware.js","../node_modules/deep-equal/lib/keys.js","../node_modules/deep-equal/lib/is_arguments.js","../node_modules/deep-equal/index.js","../frontend/reducer.js","../frontend/index.js"],"sourcesContent":["// Copyright 1999-2019. Plesk International GmbH. All rights reserved.\n\nexport const BACKGROUND_TASK_STATUS = {\n    NOT_STARTED: 'not_started',\n    STARTED: 'started',\n    RUNNING: 'running',\n    // TODO: currently isn't used in back-end\n    CANCELED: 'canceled',\n    ERROR: 'error',\n    DONE: 'done',\n};\n\nexport const BACKGROUND_TASK_STEP_STATUS = {\n    NOT_STARTED: 'not_started',\n    STARTED: 'started',\n    RUNNING: 'running',\n    CANCELED: 'canceled',\n    ERROR: 'error',\n    DONE: 'done',\n};\n\nexport const BACKGROUND_TASK_POLLING_TIMEOUT = 2000;\n\nexport const BACKGROUND_TASK_ACTIONS = {\n    ADD: 'backgroundTask/ADD',\n    UPDATE: 'backgroundTask/UPDATE',\n    POLL: 'backgroundTask/POLL',\n    REMOVE: 'backgroundTask/REMOVE',\n};\n\nexport const RESPONSE_STATUS_ERROR = 'error';\n\nexport const CLS_PREFIX = 'background-tasks-';\n","// Copyright 1999-2019. Plesk International GmbH. All rights reserved.\n\nimport { BACKGROUND_TASK_STATUS } from './constants';\n\nexport const isBackgroundTaskCompleted = task => task && [\n    BACKGROUND_TASK_STATUS.CANCELED,\n    BACKGROUND_TASK_STATUS.ERROR,\n    BACKGROUND_TASK_STATUS.DONE,\n].includes(task.status);\n\nexport const isBackgroundTaskDone = task => task && task.status === BACKGROUND_TASK_STATUS.DONE;\n\nexport const isBackgroundTaskFailed = task => task && task.status === BACKGROUND_TASK_STATUS.ERROR;\n\nexport const getBackgroundTask = (id, tasks) => tasks.find(task => task.id === id);\n\nexport const convertStepsForProgressInDrawer = steps => Object.keys(steps).map(stepName => {\n    const step = steps[stepName];\n    return {\n        ...step,\n        stepName,\n    };\n});\n\nexport const getIntent = task => {\n    if (task.status === BACKGROUND_TASK_STATUS.ERROR) {\n        return 'danger';\n    }\n    return 'warning';\n};\n","// Copyright 1999-2019. Plesk International GmbH. All rights reserved.\n\nimport { BACKGROUND_TASK_ACTIONS, RESPONSE_STATUS_ERROR } from './constants';\nimport { isBackgroundTaskCompleted } from './helper';\n\n/**\n * @typedef BackgroundTask\n * @property {number} id\n * @property {string} code\n * @property {string} title\n * @property {string} status\n * @property {number} progress\n * @property {Array} errors\n * @property {Array} steps\n * @property {Array} publicParams\n */\n\n/**\n * @param {function} getTaskData\n * @param {number} id\n * @param {string} code\n * @returns {function(function, function): Promise<BackgroundTask | null>}\n */\nexport const fetchBackgroundTask = (getTaskData, id, code) => (dispatch, getState) => getTaskData({ id, code })\n    .then(({ data: response }) => {\n        if (response.status === RESPONSE_STATUS_ERROR) {\n            // Task not found\n            return null;\n        }\n\n        const {\n            task,\n        } = response.data;\n\n        const {\n            tasks,\n        } = getState().backgroundTasks;\n\n        if (!tasks.some(existedTask => existedTask.id === task.id)) {\n            // If task isn't currently polled, need to start polling\n            dispatch({ type: BACKGROUND_TASK_ACTIONS.POLL, task });\n        }\n\n        return task;\n    })\n    // Unhandled error\n    .catch(() => null);\n\n/**\n * @param {function} getTasksData\n * @param {Object[]} tasks\n * @param {number} tasks[].id\n * @param {string} tasks[].code\n * @returns {function(function, function): Promise<BackgroundTask[]>}\n */\nexport const fetchBackgroundTasks = (getTasksData, tasks) => (dispatch, getState) => getTasksData(tasks)\n    .then(({ data: response }) => {\n        if (response.status === RESPONSE_STATUS_ERROR) {\n            // Tasks not found\n            return [];\n        }\n\n        const {\n            tasks,\n        } = response.data;\n\n        const {\n            tasks: existedTasks,\n        } = getState().backgroundTasks;\n\n        tasks.forEach(task => {\n            if (!existedTasks.some(existedTask => existedTask.id === task.id)) {\n                // If task isn't currently polled, need to start polling\n                dispatch({ type: BACKGROUND_TASK_ACTIONS.POLL, task });\n            }\n        });\n\n        return tasks;\n    })\n    // Unhandled error\n    .catch(() => []);\n\n/**\n * @param {function} removeTask\n * @param {number} id\n * @param {string} code\n * @returns {function(function): Promise}\n */\nexport const removeBackgroundTask = (removeTask, id, code) => dispatch => {\n    dispatch({ type: BACKGROUND_TASK_ACTIONS.REMOVE, taskId: id });\n    return removeTask({ id, code });\n};\n\n/**\n * @param {function} removeTasks\n * @returns {function(function, function): Promise}\n */\nexport const removeCompletedBackgroundTasks = removeTasks => (dispatch, getState) => {\n    const {\n        tasks: existedTasks,\n    } = getState().backgroundTasks;\n\n    const tasksToRemove = [];\n    existedTasks.forEach(task => {\n        if (!isBackgroundTaskCompleted(task)) {\n            return;\n        }\n        tasksToRemove.push(task);\n        dispatch({ type: BACKGROUND_TASK_ACTIONS.REMOVE, taskId: task.id });\n    });\n    return removeTasks(tasksToRemove);\n};\n\nexport const pollBackgroundTasks = tasks => dispatch => tasks.forEach(task => {\n    if (isBackgroundTaskCompleted(task)) {\n        return;\n    }\n    dispatch({ type: BACKGROUND_TASK_ACTIONS.POLL, task });\n});\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// Copyright 1999-2019. Plesk International GmbH. All rights reserved.\n\nimport { Component, Fragment, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Grid,\n    GridCol,\n    Icon,\n    Text,\n    Action,\n    ProgressStep,\n    Translate,\n} from '@plesk/ui-library';\nimport { CLS_PREFIX } from '../constants';\nimport { isBackgroundTaskCompleted, isBackgroundTaskDone, isBackgroundTaskFailed } from '../helper';\n\nimport './BackgroundTaskItem.less';\n\nclass BackgroundTaskItem extends Component {\n    renderStatusIcon = task => {\n        if (!isBackgroundTaskCompleted(task)) {\n            return <Icon name=\"reload\" animation=\"spin\" intent=\"info\" />;\n        }\n        if (isBackgroundTaskFailed(task)) {\n            return <Icon name=\"cross-mark-circle-filled\" intent=\"danger\" />;\n        }\n        if (task.errors.length > 0) {\n            return <Icon name=\"check-mark-circle-filled\" intent=\"warning\" />;\n        }\n        return <Icon name=\"check-mark-circle-filled\" intent=\"success\" />;\n    };\n\n    renderDetails = task => {\n        const {\n            baseClassName,\n            onShowDetails,\n        } = this.props;\n\n        if (!isBackgroundTaskCompleted(task)) {\n            const hasSteps = Object.keys(task.steps).length > 0;\n            return (\n                <Fragment>\n                    {task.title}\n                    <ProgressStep className={`${baseClassName}__progress-bar`} progress={task.progress} status={task.status} />\n                    <div className={`${baseClassName}__progress-footer`}>\n                        {hasSteps && (\n                            <div className={`${baseClassName}__progress-control`}>\n                                <Action onClick={() => onShowDetails(task)}>\n                                    <Translate content=\"backgroundTasks.showDetails\" fallback=\"show details\" />\n                                </Action>\n                            </div>\n                        )}\n                        <Translate\n                            content=\"backgroundTasks.completedProgress\"\n                            params={{ progress: task.progress }}\n                            fallback=\"%%progress%%% completed\"\n                        />\n                    </div>\n                </Fragment>\n            );\n        }\n\n        if (isBackgroundTaskDone(task) && task.errors.length === 0) {\n            return task.title;\n        }\n\n        return (\n            <Fragment>\n                <Text>{task.title}</Text>\n                <br />\n                <Text className={`${baseClassName}__errors`}>\n                    {task.errors.map(error => (\n                        <span key={error}>\n                            {error}\n                            <br />\n                        </span>\n                    ))}\n                </Text>\n            </Fragment>\n        );\n    };\n\n    renderAction = task => {\n        if (!isBackgroundTaskCompleted(task)) {\n            return null;\n        }\n\n        const {\n            onClose,\n        } = this.props;\n        return <Action icon=\"cross-mark\" onClick={() => onClose(task)} />;\n    };\n\n    render() {\n        const {\n            task,\n            baseClassName,\n        } = this.props;\n\n        if (!isBackgroundTaskCompleted(task)) {\n            return (\n                <div className={baseClassName}>\n                    <Grid xs={1}>\n                        <GridCol xs={12}>\n                            {this.renderDetails(task)}\n                        </GridCol>\n                    </Grid>\n                </div>\n            );\n        }\n\n        return (\n            <div className={baseClassName}>\n                <Grid xs={3}>\n                    <GridCol xs={1}>\n                        {this.renderStatusIcon(task)}\n                    </GridCol>\n                    <GridCol xs={10}>\n                        {this.renderDetails(task)}\n                    </GridCol>\n                    <GridCol xs={1} className={`${baseClassName}__action`}>\n                        {this.renderAction(task)}\n                    </GridCol>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nBackgroundTaskItem.propTypes = {\n    task: PropTypes.object.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onShowDetails: PropTypes.func.isRequired,\n    baseClassName: PropTypes.string,\n};\n\nBackgroundTaskItem.defaultProps = {\n    baseClassName: `${CLS_PREFIX}background-task-item`,\n};\n\nexport default BackgroundTaskItem;\n","// Copyright 1999-2019. Plesk International GmbH. All rights reserved.\n/* eslint-disable react/prefer-stateless-function */\n\nimport { Component, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Dialog,\n    Progress,\n    Translate,\n    ProgressStep,\n    Action,\n    Alert,\n} from '@plesk/ui-library';\nimport { CLS_PREFIX } from '../constants';\nimport { getIntent, isBackgroundTaskCompleted } from '../helper';\n\nimport './BackgroundTaskDetails.less';\n\nclass BackgroundTaskDetails extends Component {\n    isErrorsVisible = () => {\n        const {\n            task,\n        } = this.props;\n        return isBackgroundTaskCompleted(task) && task.errors.length > 0;\n    };\n\n    render() {\n        const {\n            task,\n            onClose,\n            baseClassName,\n        } = this.props;\n\n        const steps = [];\n        Object.keys(task.steps).forEach(stepCode => {\n            const step = task.steps[stepCode];\n            if (!step) {\n                return;\n            }\n\n            const progressStep = (\n                <ProgressStep\n                    key={stepCode}\n                    title={step.title}\n                    status={step.status}\n                    progress={step.progress}\n                >\n                    {isBackgroundTaskCompleted(task) === false && step.hint}\n                </ProgressStep>\n            );\n            steps.push(progressStep);\n        });\n\n        return (\n            <Dialog\n                actions={[\n                    <Action key=\"minimize\" onClick={onClose}>\n                        <Translate content=\"backgroundTasks.minimizeDetails\" fallback=\"minimize\" />\n                    </Action>,\n                ]}\n                className={baseClassName}\n                title={task.title}\n                size=\"xs\"\n                onClose={onClose}\n                closable={false}\n                isOpen\n            >\n                <Progress className={`${baseClassName}__content`}>\n                    {steps}\n                </Progress>\n                {this.isErrorsVisible() && (\n                    <Alert className={`${baseClassName}__errors`} intent={getIntent(task)}>\n                        {task.errors.map(error => (\n                            <span key={error}>\n                                {error}\n                                <br />\n                            </span>\n                        ))}\n                    </Alert>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nBackgroundTaskDetails.propTypes = {\n    task: PropTypes.object.isRequired,\n    onClose: PropTypes.func.isRequired,\n    baseClassName: PropTypes.string,\n};\n\nBackgroundTaskDetails.defaultProps = {\n    baseClassName: `${CLS_PREFIX}background-task-details`,\n};\n\nexport default BackgroundTaskDetails;\n","// Copyright 1999-2019. Plesk International GmbH. All rights reserved.\n\nimport { Component, Fragment, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Icon,\n    Translate,\n    Action,\n} from '@plesk/ui-library';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport { BACKGROUND_TASK_STATUS, BACKGROUND_TASK_STEP_STATUS, CLS_PREFIX } from '../constants';\nimport {\n    isBackgroundTaskCompleted,\n    isBackgroundTaskDone,\n    isBackgroundTaskFailed,\n    getBackgroundTask,\n} from '../helper';\nimport {\n    removeBackgroundTask,\n    removeCompletedBackgroundTasks,\n    pollBackgroundTasks,\n} from '../actions';\nimport BackgroundTaskItem from './BackgroundTaskItem';\nimport BackgroundTaskDetails from './BackgroundTaskDetails';\n\nimport './BackgroundTasks.less';\n\nclass BackgroundTasksComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isCollapsed: false,\n            showDetailsTaskId: null,\n        };\n    }\n\n    componentDidMount() {\n        const {\n            tasks,\n            pollBackgroundTasks,\n        } = this.props;\n        if (tasks.length === 0) {\n            return;\n        }\n\n        const activeTasks = tasks.filter(task => !isBackgroundTaskCompleted(task));\n        if (activeTasks.length === 0) {\n            return;\n        }\n\n        pollBackgroundTasks(activeTasks);\n    }\n\n    isNeedToRender = () => this.props.tasks.length > 0;\n\n    handleToggleCollaps = () => this.setState(prevState => ({\n        isCollapsed: !prevState.isCollapsed,\n    }));\n\n    // eslint-disable-next-line max-params\n    hasSeveralStatusesOrTasks = (runningTasksCount, doneTasksCount, warningTasksCount, failedTasksCount) => {\n        const {\n            hasSeveralStatusesOrTasks,\n        } = [runningTasksCount, doneTasksCount, warningTasksCount, failedTasksCount].reduce((acc, element) => {\n            if (element <= 0) {\n                return acc;\n            }\n            if (acc.wasOneMoreThanZero || element > 1) {\n                acc.hasSeveralStatusesOrTasks = true;\n            }\n            acc.wasOneMoreThanZero = true;\n            return acc;\n        }, { hasSeveralStatusesOrTasks: false, wasOneMoreThanZero: false });\n        return hasSeveralStatusesOrTasks;\n    };\n\n    handleCloseItem = task => this.props.removeBackgroundTask(this.props.removeTaskApi, task.id, task.code);\n\n    handleOpenDetails = task => this.setState({\n        showDetailsTaskId: task.id,\n    });\n\n    handleCloseDetails = () => this.setState({\n        showDetailsTaskId: null,\n    });\n\n    renderHideCompletedAction = hasSeveralStatusesOrTasks => {\n        if (!hasSeveralStatusesOrTasks) {\n            return null;\n        }\n\n        const {\n            baseClassName,\n            removeCompletedBackgroundTasks,\n            removeTasksApi,\n        } = this.props;\n        const handleOnClick = () => removeCompletedBackgroundTasks(removeTasksApi);\n        return (\n            <Action className={`${baseClassName}__hide-completed`} onClick={handleOnClick}>\n                <Translate content=\"backgroundTasks.hideCompleted\" fallback=\"Hide completed\" />\n            </Action>\n        );\n    };\n\n    renderTitle = () => {\n        const {\n            baseClassName,\n            tasks,\n        } = this.props;\n\n        const runningTasksCount = tasks.filter(task => isBackgroundTaskCompleted(task) === false).length;\n        const doneTasksCount = tasks.filter(task => isBackgroundTaskDone(task) && task.errors.length === 0).length;\n        const warningTasksCount = tasks.filter(task => isBackgroundTaskDone(task) && task.errors.length > 0).length;\n        const failedTasksCount = tasks.filter(task => isBackgroundTaskFailed(task)).length;\n\n        let runningTasksTitle = null;\n        if (runningTasksCount > 0) {\n            runningTasksTitle = (\n                <Fragment>\n                    <Icon className={`${baseClassName}__title__icon`} name=\"reload\" animation=\"spin\" intent=\"info\" />\n                    <Translate\n                        content=\"backgroundTasks.tasksInProgress\"\n                        params={{ count: runningTasksCount }}\n                        className={`${baseClassName}__title__text`}\n                        fallback=\"All %%count%% tasks in progress\"\n                    />\n                    <span className={`${baseClassName}__title__count`}>{runningTasksCount}</span>\n                </Fragment>\n            );\n        }\n\n        let doneTasksTitle = null;\n        if (doneTasksCount > 0) {\n            doneTasksTitle = (\n                <Fragment>\n                    <Icon className={`${baseClassName}__title__icon`} name=\"check-mark-circle-filled\" intent=\"success\" />\n                    <Translate\n                        content=\"backgroundTasks.tasksDone\"\n                        params={{ count: doneTasksCount }}\n                        className={`${baseClassName}__title__text`}\n                        fallback=\"All %%count%% tasks were successfully completed\"\n                    />\n                    <span className={`${baseClassName}__title__count`}>{doneTasksCount}</span>\n                </Fragment>\n            );\n        }\n\n        let warningTasksTitle = null;\n        if (warningTasksCount > 0) {\n            warningTasksTitle = (\n                <Fragment>\n                    <Icon className={`${baseClassName}__title__icon`} name=\"check-mark-circle-filled\" intent=\"warning\" />\n                    <Translate\n                        content=\"backgroundTasks.tasksWarning\"\n                        params={{ count: warningTasksCount }}\n                        className={`${baseClassName}__title__text`}\n                        fallback=\"All %%count%% tasks was performed with errors\"\n                    />\n                    <span className={`${baseClassName}__title__count`}>{warningTasksCount}</span>\n                </Fragment>\n            );\n        }\n\n        let failedTasksTitle = null;\n        if (failedTasksCount > 0) {\n            failedTasksTitle = (\n                <Fragment>\n                    <Icon className={`${baseClassName}__title__icon`} name=\"cross-mark-circle-filled\" intent=\"danger\" />\n                    <Translate\n                        content=\"backgroundTasks.tasksFailed\"\n                        params={{ count: failedTasksCount }}\n                        className={`${baseClassName}__title__text`}\n                        fallback=\"All %%count%% tasks failed\"\n                    />\n                    <span className={`${baseClassName}__title__count`}>{failedTasksCount}</span>\n                </Fragment>\n            );\n        }\n\n        const hasSeveralStatusesOrTasks = this.hasSeveralStatusesOrTasks(runningTasksCount, doneTasksCount, warningTasksCount, failedTasksCount);\n\n        return (\n            <div\n                className={classNames(\n                    `${baseClassName}__title`,\n                    {\n                        [`${baseClassName}__title--several-statuses`]: hasSeveralStatusesOrTasks,\n                    }\n                )}\n            >\n                {runningTasksTitle}\n                {doneTasksTitle}\n                {warningTasksTitle}\n                {failedTasksTitle}\n                {this.renderHideCompletedAction(hasSeveralStatusesOrTasks)}\n            </div>\n        );\n    };\n\n    renderTaskDetails = () => {\n        const {\n            showDetailsTaskId,\n        } = this.state;\n        if (!showDetailsTaskId) {\n            return null;\n        }\n\n        const {\n            tasks,\n        } = this.props;\n        const task = getBackgroundTask(showDetailsTaskId, tasks);\n        if (!task) {\n            return null;\n        }\n\n        return (\n            <BackgroundTaskDetails\n                task={task}\n                onClose={this.handleCloseDetails}\n            />\n        );\n    };\n\n    render() {\n        if (!this.isNeedToRender()) {\n            return null;\n        }\n\n        const {\n            baseClassName,\n            tasks,\n        } = this.props;\n        const {\n            isCollapsed,\n        } = this.state;\n        return (\n            <div\n                className={classNames(\n                    `${baseClassName}__container`,\n                    {\n                        [`${baseClassName}__container--collapsed`]: isCollapsed,\n                    }\n                )}\n            >\n                <div className={`${baseClassName}__wrapper`}>\n                    <div className={`${baseClassName}__header`} onClick={this.handleToggleCollaps}>\n                        <div className={`${baseClassName}__control`}>\n                            {isCollapsed\n                                ? <Icon name=\"chevron-up\" intent=\"info\" />\n                                : <Icon name=\"chevron-down\" intent=\"info\" />\n                            }\n                        </div>\n                        {this.renderTitle()}\n                    </div>\n                    <div className={`${baseClassName}__body`}>\n                        <ul className={`${baseClassName}__list`}>\n                            {tasks.sort((taskA, taskB) => taskA.id > taskB.id ? -1 : 1).map(task => (\n                                <li key={task.id} className={`${baseClassName}__item`}>\n                                    <BackgroundTaskItem task={task} onClose={this.handleCloseItem} onShowDetails={this.handleOpenDetails} />\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n                {this.renderTaskDetails()}\n            </div>\n        );\n    }\n}\n\nBackgroundTasksComponent.propTypes = {\n    tasks: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number,\n            code: PropTypes.string,\n            title: PropTypes.string,\n            status: PropTypes.oneOf(Object.keys(BACKGROUND_TASK_STATUS).map(key => BACKGROUND_TASK_STATUS[key])),\n            progress: PropTypes.number,\n            errors: PropTypes.arrayOf(PropTypes.string),\n            steps: PropTypes.oneOf([\n                PropTypes.arrayOf(\n                    PropTypes.shape({\n                        title: PropTypes.string,\n                        icon: PropTypes.string,\n                        progress: PropTypes.number,\n                        status: PropTypes.oneOf(Object.keys(BACKGROUND_TASK_STEP_STATUS).map(key => BACKGROUND_TASK_STEP_STATUS[key])),\n                        hint: PropTypes.string,\n                    })\n                ),\n                PropTypes.objectOf(\n                    PropTypes.shape({\n                        title: PropTypes.string,\n                        icon: PropTypes.string,\n                        progress: PropTypes.number,\n                        status: PropTypes.oneOf(Object.keys(BACKGROUND_TASK_STEP_STATUS).map(key => BACKGROUND_TASK_STEP_STATUS[key])),\n                        hint: PropTypes.string,\n                    })\n                ),\n            ]),\n            publicParams: PropTypes.oneOfType([\n                PropTypes.object,\n                PropTypes.array,\n            ]),\n        })\n    ),\n    removeTaskApi: PropTypes.func.isRequired,\n    removeTasksApi: PropTypes.func.isRequired,\n    removeBackgroundTask: PropTypes.func.isRequired,\n    removeCompletedBackgroundTasks: PropTypes.func.isRequired,\n    pollBackgroundTasks: PropTypes.func.isRequired,\n    baseClassName: PropTypes.string,\n};\n\nBackgroundTasksComponent.defaultProps = {\n    tasks: [],\n    baseClassName: `${CLS_PREFIX}background-tasks`,\n};\n\nconst mapStateToProps = state => ({\n    tasks: state.backgroundTasks.tasks,\n});\n\nconst mapDispatchToProps = {\n    removeBackgroundTask,\n    removeCompletedBackgroundTasks,\n    pollBackgroundTasks,\n};\n\nexport const BackgroundTasks = connect(mapStateToProps, mapDispatchToProps)(BackgroundTasksComponent);\n","// Copyright 1999-2019. Plesk International GmbH. All rights reserved.\n\nexport { BackgroundTasks } from './BackgroundTasks';\n","// Copyright 1999-2019. Plesk International GmbH. All rights reserved.\n\nimport { isBackgroundTaskCompleted } from './helper';\nimport { BACKGROUND_TASK_POLLING_TIMEOUT } from './constants';\nimport { RESPONSE_STATUS_ERROR } from './constants';\n\nexport default class Poller {\n    static instance;\n\n    /**\n     * @param {CallableFunction} getTasks Callback for receiving all tasks from storage\n     * @param {CallableFunction} addTask Callback for adding task to storage\n     * @param {CallableFunction} updateTask Callback for updating task in storage\n     * @param {CallableFunction} getTasksData Callback for receiving tasks from back-end\n     * @returns {this}\n     */\n    constructor(getTasks, addTask, updateTask, getTasksData) {\n        if (Poller.instance) {\n            return Poller.instance;\n        }\n\n        this.getTasks = getTasks;\n        this.addTask = addTask;\n        this.updateTask = updateTask;\n        this.getTasksData = getTasksData;\n\n        // Ids of current polling tasks\n        this.polling = [];\n        this.isPollingActive = false;\n        this.timerId = null;\n\n        Poller.instance = this;\n    }\n\n    /**\n     * @param {Object} task Full task object from backend\n     */\n    startPolling = task => {\n        /**\n         * Workflow:\n         * componentFunction: actionSubmitInstallForm -> dispatchActionInstallStarted -> middlewareReactingOnInstallStarted -> startPolling(installTask)\n         *                                            -> thenOfAction(response => componentSetState(backgroundTaskId: installTask.id))\n         * componentWillReceiveProps: nextPropsInstallTask.id === state.backgroundTaskId -> update task in local state and do other stuff\n         *\n         * Middleware are listening for concrete actions (sync and async),\n         * when such action received it call current method to save task in store and start polling.\n         *\n         * Task must be added to store ASAP to avoid UI problem when something started, but progress/steps is not visible yet,\n         * so we must receive full task object except of just 'id' and 'code'.\n         *\n         * To avoid workflow problems (incorrect order of calling 'componentSetState' and 'componentWillReceiveProps')\n         * when saving task to store, need to do that in setTimeout, so 'componentSetState' will be called before\n         * than task will be saved in store (see more: JS event loop)\n         */\n        setTimeout(() => this.addTask(task));\n\n        if (isBackgroundTaskCompleted(task)) {\n            // Task was added to store, but it is completed and we shouldn't poll\n            return;\n        }\n\n        if (!this.polling.some(id => id === task.id)) {\n            this.polling = this.polling.concat(task.id);\n        }\n\n        if (!this.isPollingActive) {\n            this.isPollingActive = true;\n            this.schedulePolling();\n        }\n    };\n\n    /**\n     * @private\n     */\n    schedulePolling = () => {\n        if (!this.isPollingActive) {\n            return;\n        }\n\n        this.timerId = setTimeout(() => {\n            this.timerId = null;\n            this.poll();\n        }, BACKGROUND_TASK_POLLING_TIMEOUT);\n    };\n\n    /**\n     * @private\n     */\n    stopPolling = () => {\n        this.isPollingActive = false;\n        clearTimeout(this.timerId);\n    };\n\n    /**\n     * @private\n     */\n    poll = () => {\n        const tasks = this.getTasks();\n\n        const pollingTasks = tasks.filter(taskData => this.polling.some(id => taskData.id === id));\n        if (pollingTasks.length === 0) {\n            this.stopPolling();\n            return;\n        }\n\n        this.getTasksData(pollingTasks)\n            .then(({ data: response }) => {\n                if (response.status === RESPONSE_STATUS_ERROR) {\n                    this.stopPolling();\n                    return;\n                }\n\n                response.data.tasks.forEach(task => {\n                    this.updateTask(task);\n\n                    if (isBackgroundTaskCompleted(task)) {\n                        this.polling = this.polling.filter(id => id !== task.id);\n                    }\n                });\n\n                this.schedulePolling();\n            });\n    };\n}\n","// Copyright 1999-2019. Plesk International GmbH. All rights reserved.\n\nimport { BACKGROUND_TASK_ACTIONS } from './constants';\nimport Poller from './poller';\n\n/**\n * @param {Array} actions Array of action codes which have 'task' key inside\n * @param {CallableFunction} getTasksData Callback for receiving tasks from back-end\n * @returns {function(*=): function(*): function(*=): boolean}\n */\nexport const backgroundTasksMiddleware = (actions, getTasksData) => store => next => action => {\n    // Will apply all changes to store, so we can work with last state\n    next(action);\n\n    const getTasks = () => store.getState().backgroundTasks.tasks;\n    const addTask = task => store.dispatch({ type: BACKGROUND_TASK_ACTIONS.ADD, task });\n    const updateTask = task => store.dispatch({ type: BACKGROUND_TASK_ACTIONS.UPDATE, task });\n    const poller = new Poller(getTasks, addTask, updateTask, getTasksData);\n    const startPolling = task => {\n        poller.startPolling(task);\n\n        /**\n         * This code is necessary only for Plesk extensions.\n         * We must call update once for each task, Plesk will start\n         * polling and rendering all tasks by own mechanism.\n         */\n        if (typeof Jsw !== 'undefined') {\n            const progressBar = Jsw.getComponent('asyncProgressBarWrapper');\n            if (progressBar) {\n                progressBar.update();\n            }\n        }\n    };\n\n    if (BACKGROUND_TASK_ACTIONS.POLL === action.type || actions.includes(action.type)) {\n        startPolling(action.task);\n    }\n\n    return true;\n};\n","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n","// Copyright 1999-2019. Plesk International GmbH. All rights reserved.\n\nimport { BACKGROUND_TASK_ACTIONS } from './constants';\nimport { getBackgroundTask } from './helper';\nimport deepEqual from 'deep-equal';\n\nexport const getBackgroundTasksReducer = data => {\n    const initialState = {\n        tasks: [],\n    };\n\n    if (data.tasks !== undefined) {\n        initialState.tasks = [...data.tasks];\n    }\n\n    return (state = initialState, action) => {\n        switch (action.type) {\n            case BACKGROUND_TASK_ACTIONS.ADD: {\n                if (getBackgroundTask(action.task.id, state.tasks)) {\n                    return state;\n                }\n                return {\n                    ...state,\n                    tasks: state.tasks.concat(action.task),\n                };\n            }\n            case BACKGROUND_TASK_ACTIONS.UPDATE: {\n                const task = getBackgroundTask(action.task.id, state.tasks);\n                if (deepEqual(task, action.task, true)) {\n                    return state;\n                }\n                return {\n                    ...state,\n                    tasks: state.tasks.map(task => {\n                        if (task.id !== action.task.id) {\n                            return task;\n                        }\n                        return action.task;\n                    }),\n                };\n            }\n            case BACKGROUND_TASK_ACTIONS.REMOVE: {\n                const task = getBackgroundTask(action.taskId, state.tasks);\n                if (!task) {\n                    return state;\n                }\n                return {\n                    ...state,\n                    tasks: state.tasks.filter(task => task.id !== action.taskId),\n                };\n            }\n\n            default: {\n                return state;\n            }\n        }\n    };\n};\n","// Copyright 1999-2019. Plesk International GmbH. All rights reserved.\n\nexport { Component, Fragment, createElement } from 'react';\nexport { BackgroundTasks } from './BackgroundTasks';\nexport * from './helper';\nexport { backgroundTasksMiddleware } from './middleware';\nexport { getBackgroundTasksReducer } from './reducer';\nexport * from './actions';\n"],"names":["BACKGROUND_TASK_STATUS","BACKGROUND_TASK_STEP_STATUS","BACKGROUND_TASK_POLLING_TIMEOUT","BACKGROUND_TASK_ACTIONS","RESPONSE_STATUS_ERROR","CLS_PREFIX","isBackgroundTaskCompleted","task","CANCELED","ERROR","DONE","includes","status","isBackgroundTaskDone","isBackgroundTaskFailed","getBackgroundTask","id","tasks","find","convertStepsForProgressInDrawer","Object","keys","steps","map","step","stepName","getIntent","fetchBackgroundTask","getTaskData","code","dispatch","getState","then","response","data","backgroundTasks","some","existedTask","type","POLL","catch","fetchBackgroundTasks","getTasksData","existedTasks","forEach","removeBackgroundTask","removeTask","REMOVE","taskId","removeCompletedBackgroundTasks","tasksToRemove","push","removeTasks","pollBackgroundTasks","BackgroundTaskItem","renderStatusIcon","createElement","Icon","errors","length","renderDetails","props","baseClassName","onShowDetails","hasSteps","title","ProgressStep","progress","Translate","error","renderAction","onClose","Action","Component","propTypes","PropTypes","object","isRequired","func","string","defaultProps","BackgroundTaskDetails","isErrorsVisible","stepCode","progressStep","hint","BackgroundTasksComponent","isNeedToRender","handleToggleCollaps","setState","prevState","isCollapsed","hasSeveralStatusesOrTasks","runningTasksCount","doneTasksCount","warningTasksCount","failedTasksCount","reduce","acc","element","wasOneMoreThanZero","handleCloseItem","removeTaskApi","handleOpenDetails","handleCloseDetails","renderHideCompletedAction","removeTasksApi","handleOnClick","renderTitle","filter","runningTasksTitle","count","doneTasksTitle","warningTasksTitle","failedTasksTitle","classNames","renderTaskDetails","showDetailsTaskId","state","activeTasks","sort","taskA","taskB","arrayOf","shape","number","oneOf","key","objectOf","oneOfType","array","mapStateToProps","mapDispatchToProps","BackgroundTasks","connect","Poller","getTasks","addTask","updateTask","startPolling","polling","concat","isPollingActive","schedulePolling","timerId","setTimeout","poll","stopPolling","pollingTasks","taskData","instance","backgroundTasksMiddleware","actions","action","store","ADD","UPDATE","poller","Jsw","progressBar","getComponent","update","isArguments","objectKeys","getBackgroundTasksReducer","initialState","undefined","deepEqual"],"mappings":"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"}