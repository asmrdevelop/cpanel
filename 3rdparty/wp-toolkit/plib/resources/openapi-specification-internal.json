{
    "openapi": "3.0.0",
    "info": {
        "title": "WP Toolkit API",
        "description": "### REST API documentation & sandbox usage instructions\n\n### Initial setup\n\n#### Plesk\n1. Open 'Tools & Settings' > 'Remote API (REST)' > 'WP Toolkit REST API'\n2. In the 'Servers' dropdown choose 'Public API endpoint for Plesk'\n3. Specify the IP address or the hostname of your server in the 'host' field and click 'Authorize':\n- 3a. Provide username and password in the 'httpBasic' section, click 'Authorize', then 'Close'\n- 3b. Fill out the 'pleskApiToken' field, click 'Authorize', then 'Close'\n\n#### WHM & cPanel\n1. Open WP Toolkit > 'Global Settings' > 'Open REST API documentation'\n2. In the 'Servers' dropdown choose 'Public API endpoint for WHM'\n3. Specify the IP address or the hostname of your server in the 'host' field\n4. Insert your current session identifier (in '/cpsessXXXXX' format) in the 'cpanelOrWhmSecurityToken' field. You can copy this identifier from the browser address bar\n5. Click 'Authorize', provide username and password in the 'httpBasic' section, click 'Authorize', then 'Close'\n\n**Note**: *session identifier is not required for sending external requests to WP Toolkit REST API, it is needed only for this sandbox*\n\n### How to perform an API request\n1. Choose an API resource from the list, click on it to expand, and click 'Try it out'\n2. Prefill the fields with corresponding data and click 'Execute'. If a field is not marked as requried, you can leave it empty\n3. Scroll down the page to see the results of API request execution",
        "version": "6.5.1-8677"
    },
    "servers": [
        {
            "url": "https://{host}/api/modules/wp-toolkit",
            "description": "Public API endpoint for Plesk",
            "variables": {
                "host": {
                    "default": "example.com",
                    "description": "Specify target host with WPT"
                }
            }
        },
        {
            "url": "https://{host}:2087{cpanelOrWhmSecurityToken}/cgi/wpt/index.php",
            "description": "Public API endpoint for WHM",
            "variables": {
                "host": {
                    "default": "example.com",
                    "description": "Specify target host with WPT"
                },
                "cpanelOrWhmSecurityToken": {
                    "default": "",
                    "description": "Specify the security token in format '/cpsessXXXXX' when you use Swagger UI playground, this token is not required for external API calls"
                }
            }
        },
        {
            "url": "https://{host}:2083{cpanelOrWhmSecurityToken}/3rdparty/wpt/index.php",
            "description": "Public API endpoint for cPanel",
            "variables": {
                "host": {
                    "default": "example.com",
                    "description": "Specify target host with WPT"
                },
                "cpanelOrWhmSecurityToken": {
                    "default": "",
                    "description": "Specify the security token in format '/cpsessXXXXX' when you use Swagger UI playground, this token is not required for external API calls"
                }
            }
        }
    ],
    "paths": {
        "/v1/agent/api-key": {
            "delete": {
                "tags": [
                    "Internal",
                    "Agent"
                ],
                "operationId": "forgotPlatfromApiKey",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/agent/scheduled-tasks/{scheduledTaskId}": {
            "get": {
                "tags": [
                    "Internal",
                    "Agent",
                    "WPGuardian"
                ],
                "operationId": "getTaskSchedule",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/scheduledTaskId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ScheduledTasksTimeResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            },
            "put": {
                "tags": [
                    "Internal",
                    "Agent",
                    "WPGuardian"
                ],
                "operationId": "setTaskSchedule",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/scheduledTaskId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ScheduledTimeApplyRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ScheduledTasksTimeResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/agent/virtual-patches-applier": {
            "post": {
                "tags": [
                    "Internal",
                    "WPGuardian",
                    "Installations.Features.VirtualPatches"
                ],
                "summary": "This resource was implemented in accordance with WPGuardian business cases.",
                "description": "Apply virtual patches on instances",
                "operationId": "appyVirtualPatches",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "VirtualPatchesApplyRequest",
                                "required": [
                                    "installationsIds"
                                ],
                                "properties": {
                                    "installationsIds": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "minItems": 1
                                    },
                                    "skipBrokenInstallations": {
                                        "description": "Ignore broken installations (by default request fails on them)",
                                        "type": "boolean",
                                        "example": "false"
                                    },
                                    "skipInfectedInstallations": {
                                        "description": "Ignore quarantined installations (by default request fails on them)",
                                        "type": "boolean",
                                        "example": "false"
                                    },
                                    "skipUnsupportedInstallations": {
                                        "description": "Ignore unsupported installations (by default request fails on them)",
                                        "type": "boolean",
                                        "example": "false"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackgroundTaskWithUrlResponse"
                                },
                                "example": {
                                    "url": "/v1/background-tasks/apply-virtual-patches/1",
                                    "task": {
                                        "id": 1,
                                        "code": "apply-virtual-patches",
                                        "title": "Installing the WAF plugin on sites",
                                        "status": "running",
                                        "progress": 0,
                                        "steps": [
                                            {
                                                "code": "installWafPlugin",
                                                "title": "Installing the WAF plugin on sites",
                                                "icon": "",
                                                "progress": -1,
                                                "status": "running",
                                                "hint": ""
                                            }
                                        ],
                                        "publicParams": {
                                            "processedInstallationsIds": [
                                                1,
                                                2
                                            ]
                                        },
                                        "errors": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Internal",
                    "WPGuardian",
                    "Installations.Features.VirtualPatches"
                ],
                "summary": "This resource was implemented in accordance with WPGuardian business cases.",
                "description": "Disable virtual patches on instances, remove applied rules from instance database.",
                "operationId": "disableVirtualPatches",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "VirtualPatchesDisableRequest",
                                "required": [
                                    "installationsIds"
                                ],
                                "properties": {
                                    "installationsIds": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "minItems": 1
                                    },
                                    "skipBrokenInstallations": {
                                        "description": "Ignore broken installations (by default request fails on them)",
                                        "type": "boolean",
                                        "example": "false"
                                    },
                                    "skipInfectedInstallations": {
                                        "description": "Ignore quarantined installations (by default request fails on them)",
                                        "type": "boolean",
                                        "example": "false"
                                    },
                                    "skipUnsupportedInstallations": {
                                        "description": "Ignore unsupported installations (by default request fails on them)",
                                        "type": "boolean",
                                        "example": "false"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackgroundTaskWithUrlResponse"
                                },
                                "example": {
                                    "url": "/v1/background-tasks/disable-virtual-patches/1",
                                    "task": {
                                        "id": 1,
                                        "code": "disable-virtual-patches/",
                                        "title": "Disabling the WAF plugin on sites",
                                        "status": "running",
                                        "progress": 0,
                                        "steps": [
                                            {
                                                "code": "installWafPlugin",
                                                "title": "Disabling the WAF plugin on sites",
                                                "icon": "",
                                                "progress": -1,
                                                "status": "running",
                                                "hint": ""
                                            }
                                        ],
                                        "publicParams": {
                                            "processedInstallationsIds": [
                                                1,
                                                2
                                            ]
                                        },
                                        "errors": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    }
                }
            }
        },
        "/v1/agent/hello": {
            "get": {
                "tags": [
                    "Internal",
                    "Agent"
                ],
                "operationId": "receiveHelloFromAgent",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/StatusResponse"
                    }
                }
            }
        },
        "/v1/agent/scanner/logs": {
            "get": {
                "tags": [
                    "Internal",
                    "Agent"
                ],
                "description": "Return logs of the scan process",
                "operationId": "getScannerLogs",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ScannerLogListResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/server-info": {
            "get": {
                "tags": [
                    "Internal",
                    "Agent"
                ],
                "operationId": "getServerInfo",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ServerInfoResponse"
                    }
                }
            }
        },
        "/v1/agent/installations-auto-update-settings-getter": {
            "post": {
                "tags": [
                    "Internal",
                    "Agent",
                    "AutoUpdate.Settings"
                ],
                "description": "Get information about auto update settings",
                "operationId": "fetchAvailableAutoUpdateSettings",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "AutoUpdateSettingsRequest",
                                "required": [
                                    "installationsIds"
                                ],
                                "properties": {
                                    "installationsIds": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "minItems": 1
                                    },
                                    "skipBrokenInstallations": {
                                        "description": "Ignore broken installations (by default request fails on them)",
                                        "type": "boolean",
                                        "example": "false"
                                    },
                                    "skipInfectedInstallations": {
                                        "description": "Ignore quarantined installations (by default request fails on them)",
                                        "type": "boolean",
                                        "example": "false"
                                    },
                                    "skipUnsupportedInstallations": {
                                        "description": "Ignore unsupported installations (by default request fails on them)",
                                        "type": "boolean",
                                        "example": "false"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Available auto updates",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "title": "WordPressAutoUpdatesResponse",
                                        "required": [
                                            "id",
                                            "autoUpdate"
                                        ],
                                        "properties": {
                                            "id": {
                                                "type": "number",
                                                "example": 1
                                            },
                                            "autoUpdate": {
                                                "$ref": "#/components/schemas/InstallationAutoUpdateResponse"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/agent/vulnerabilities-checker": {
            "get": {
                "tags": [
                    "Internal",
                    "Agent",
                    "Vulnerabilities"
                ],
                "description": "Get information about WordPress vulnerabilities",
                "operationId": "fetchInstallationsVulnerabilityStatusesShort",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationsIds"
                    },
                    {
                        "$ref": "#/components/parameters/skipBrokenInstallations"
                    },
                    {
                        "$ref": "#/components/parameters/skipInfectedInstallations"
                    },
                    {
                        "$ref": "#/components/parameters/skipUnsupportedInstallations"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/InstallationVulnerabilityStatusShort"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/background-tasks/{taskCode}/{taskId}": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "BackgroundTasks"
                ],
                "description": "Get information about the execution of a background task",
                "operationId": "getBackgroundTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/TaskId"
                    },
                    {
                        "$ref": "#/components/parameters/TaskCode"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/BackgroundTaskResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    }
                }
            }
        },
        "/v1/changelogs": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Changelogs"
                ],
                "description": "Returns product changelog in markdown format",
                "operationId": "getChangelogs",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ChangelogsResponse"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    }
                }
            }
        },
        "/v1/cloner": {
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Clone"
                ],
                "description": "Clone WordPress installation",
                "operationId": "cloneInstallation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstallationCloneRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackgroundTaskWithUrlResponse"
                                },
                                "example": {
                                    "url": "/v1/background-tasks/clone-instance/1",
                                    "task": {
                                        "id": 1,
                                        "code": "clone-instance",
                                        "title": "Cloning My WordPress site",
                                        "status": "running",
                                        "progress": 0,
                                        "steps": [
                                            {
                                                "code": "transfer-files",
                                                "title": "Copying Files",
                                                "icon": "",
                                                "progress": -1,
                                                "status": "running",
                                                "hint": ""
                                            }
                                        ],
                                        "publicParams": {
                                            "refreshTargetInstallationInUi": true,
                                            "sourceInstallationId": 1,
                                            "targetInstallationId": 2
                                        },
                                        "errors": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityResponse"
                                },
                                "example": {
                                    "meta": {
                                        "status": 422,
                                        "message": "Unprocessable Entity"
                                    },
                                    "formErrors": {
                                        "domain": {
                                            "existing": {
                                                "domainIsRequired": "Domain is a required parameter to clone a WordPress site",
                                                "existingDomainAndNewSubdomainParentDomain": "You can specify as a parameter either existing domain or new subdomain of parent domain, not both at the same time",
                                                "domainNotFoundByName": "Failed to find domain with specified name"
                                            },
                                            "newSubdomain": {
                                                "parentDomain": {
                                                    "domainIsRequired": "Domain is a required parameter to clone a WordPress site",
                                                    "existingDomainAndNewSubdomainParentDomain": "You can specify as a parameter either existing domain or new subdomain of parent domain, not both at the same time",
                                                    "domainNotFoundByName": "Failed to find domain with specified name"
                                                },
                                                "name": [
                                                    "The subdomain name is invalid. You can use only alphanumeric characters, a hyphen (-), and an asterisk (*) for wildcard subdomain names",
                                                    "A domain with such name already exists"
                                                ]
                                            }
                                        },
                                        "installationPath": {
                                            "dirInvalidName": "Invalid target directory name",
                                            "cloningToSourceInstancePath": "WordPress installations cannot be cloned into themselves because that would violate the rules of the spacetime continuum",
                                            "directoryHidesAnotherWordpress": "This directory cannot be used because it would cause a conflict with another WordPress installation at /var/www/vhosts/domain27ld64.w10-52-51-88.qa.plesk.ru/jkbvis/wp_agjmf, making this WordPress installation unavailable",
                                            "directoryHidesAnotherApplication": "This directory cannot be used because it would cause a conflict with another application installed at /var/www/vhosts/domain27ld64.w10-52-51-88.qa.plesk.ru/jkbvis/wp_agjmf, making this application unavailable.",
                                            "directoryHasUserFiles": "This directory cannot be used because it contains files that will be overwritten with their data lost. You can manually clear the directory and perform the installation again."
                                        },
                                        "database": {
                                            "name": {
                                                "sourceInstanceDatabaseNameUsed": "Database named wp_example already exists and is used by the source site",
                                                "databaseNameAlreadyExists": "A database with the name wp_example already exists"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/detacher": {
            "post": {
                "tags": [
                    "Internal",
                    "Installations.Detacher"
                ],
                "description": "Detach installations",
                "operationId": "detachInstallations",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "DetachInstallationsRequest",
                                "required": [
                                    "installationsIds"
                                ],
                                "properties": {
                                    "installationsIds": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "minItems": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/BackgroundTaskWithUrlResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    }
                }
            }
        },
        "/v1/features/backups/creator": {
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Backups"
                ],
                "description": "Starts background task for creating installation backup",
                "operationId": "createInstallationBackup",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "BackupCreatorRequest",
                                "required": [
                                    "installationId"
                                ],
                                "properties": {
                                    "installationId": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Backup description for meta"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/BackgroundTaskWithUrlResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/features/backups/restorer": {
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Backups"
                ],
                "description": "Starts background task for restoring installation backup",
                "operationId": "restoreInstallationBackup",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "BackupRestorerRequest",
                                "required": [
                                    "installationId",
                                    "fileName"
                                ],
                                "properties": {
                                    "installationId": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "fileName": {
                                        "type": "string",
                                        "example": "site1backup.tar.gz"
                                    },
                                    "clobber": {
                                        "description": "If true files not present in backup will be removed from installation",
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "dropAllDatabaseTables": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/BackgroundTaskWithUrlResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/backups/meta": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Backups"
                ],
                "description": "Get meta information of installation's backups",
                "operationId": "getInstallationBackupsMeta",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/InstallationBackupsMetaResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    }
                }
            }
        },
        "/v1/cache-cleaner": {
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Cache"
                ],
                "description": "Refresh cache of specified installations",
                "operationId": "cleanInstallationCache",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "CacheCleanerRequest",
                                "required": [
                                    "installationsIds"
                                ],
                                "properties": {
                                    "installationsIds": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "minItems": 1
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "main-information"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/BackgroundTaskWithUrlResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/clone/path-validator": {
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Clone"
                ],
                "description": "Validate installation path of a WordPress site clone on domain",
                "operationId": "validateClonePath",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClonePathValidatorRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityResponse"
                                },
                                "example": {
                                    "meta": {
                                        "status": 422,
                                        "message": "Unprocessable Entity"
                                    },
                                    "formErrors": {
                                        "domain": {
                                            "existing": {
                                                "domainNotFoundByName": "Failed to find domain with specified name"
                                            }
                                        },
                                        "installationPath": {
                                            "dirInvalidName": "Invalid target directory name",
                                            "cloningToSourceInstancePath": "WordPress installations cannot be cloned into themselves because that would violate the rules of the spacetime continuum",
                                            "directoryHidesAnotherWordpress": "This directory cannot be used because it would cause a conflict with another WordPress installation at /var/www/vhosts/domain27ld64.w10-52-51-88.qa.plesk.ru/jkbvis/wp_agjmf, making this WordPress installation unavailable"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/clone/stub": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Clone"
                ],
                "description": "Get default cloning options",
                "operationId": "getCloneStub",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    },
                    {
                        "$ref": "#/components/parameters/CloneStubDatabaseNameRequest"
                    },
                    {
                        "$ref": "#/components/parameters/CloneStubDatabaseServerRequest"
                    },
                    {
                        "$ref": "#/components/parameters/CloneStubDomainExistingRequest"
                    },
                    {
                        "$ref": "#/components/parameters/CloneStubNewSubdomainNameRequest"
                    },
                    {
                        "$ref": "#/components/parameters/CloneStubNewSubdomainParentDomainRequest"
                    },
                    {
                        "$ref": "#/components/parameters/CloneStubInstallationPathRequest"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CloneStubResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/features/up-votes": {
            "post": {
                "tags": [
                    "Internal"
                ],
                "description": "Vote for improving of currently unavailable feature",
                "operationId": "upVoteForFeature",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "UpVoteForFeatureRequest",
                                "required": [
                                    "featureName"
                                ],
                                "properties": {
                                    "featureName": {
                                        "$ref": "#/components/schemas/UpVoteForFeatureFeatureListEnum"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpVoteForFeatureResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/hotlink-protection/status": {
            "put": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.HotlinkProtection"
                ],
                "description": "Update hotlink protection status on a site",
                "operationId": "updateHotlinkProtectionStatus",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "HotlinkProtectionStatusRequest",
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "description": "Status",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Hotlink protection status on a site",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "HotlinkProtectionStatusResponse",
                                    "required": [
                                        "status"
                                    ],
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "example": "true"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/hotlink-protection/settings/meta": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.HotlinkProtection"
                ],
                "description": "Get hotlink protection settings on a site",
                "operationId": "getHotlinkProtectionSettingsMeta",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/MetaHotlinkProtectionSettingsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/hotlink-protection/settings": {
            "put": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.HotlinkProtection"
                ],
                "description": "Update hotlink protection settings on a site",
                "operationId": "updateHotlinkProtectionSettings",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "HotlinkProtectionSettingsRequest",
                                "required": [
                                    "domains",
                                    "fileExtensions"
                                ],
                                "properties": {
                                    "domains": {
                                        "description": "List of allowed domains",
                                        "type": "array",
                                        "items": {
                                            "title": "HotlinkProtectionSettingsDomain",
                                            "type": "string",
                                            "example": "example.tld"
                                        }
                                    },
                                    "fileExtensions": {
                                        "description": "List of allowed file extensions",
                                        "type": "array",
                                        "items": {
                                            "title": "HotlinkProtectionSettingsFileExtension",
                                            "type": "string",
                                            "example": [
                                                "gif",
                                                "png"
                                            ]
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/HotlinkProtectionSettingsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.HotlinkProtection"
                ],
                "description": "Reset hotlink protection settings to default on a site",
                "operationId": "resetHotlinkProtectionSettings",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BasicDeleteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/HotlinkProtectionSettingsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/indexing/status": {
            "put": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Indexing"
                ],
                "description": "Toggle search indexing",
                "operationId": "updateIndexingStatus",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StatusRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/StatusResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/integrity": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Integrity"
                ],
                "description": "Get information about WordPress integrity check",
                "operationId": "getIntegrity",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Integrity"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/labels": {
            "put": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Labels"
                ],
                "description": "Update labels of installation",
                "operationId": "updateInstallationLabels",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "InstallationLabelsRequest",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/InstallationLabel"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/InstallationLabelsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/labels/meta": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Labels"
                ],
                "description": "Get labels of installation",
                "operationId": "getInstallationLabelsMeta",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/MetaInstallationLabelsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/maintenance/settings": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Maintenance"
                ],
                "description": "Retrieve maintenance mode settings",
                "operationId": "getMaintenanceSettings",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/MaintenanceSettingsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            },
            "put": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Maintenance"
                ],
                "description": "Update maintenance mode settings",
                "operationId": "updateMaintenanceSettings",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MaintenanceSettingsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/MaintenanceSettingsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityResponse"
                                },
                                "example": {
                                    "meta": {
                                        "status": 422,
                                        "message": "Unprocessable Entity"
                                    },
                                    "formErrors": {
                                        "timer": {
                                            "days": {
                                                "notBetween": "'100' is not between '0' and '99', inclusively"
                                            },
                                            "hours": {
                                                "notBetween": "'100' is not between '0' and '23', inclusively"
                                            },
                                            "minutes": {
                                                "notBetween": "'100' is not between '0' and '59', inclusively"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/maintenance/status": {
            "put": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Maintenance"
                ],
                "description": "Toggle maintenance mode",
                "operationId": "updateMaintenanceStatus",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StatusRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/StatusResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/maintenance/template-customization-url": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Maintenance"
                ],
                "description": "Retrieve maintenance mode template URL",
                "operationId": "getMaintenanceTemplateCustomizationUrl",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/MaintenanceTemplateCustomizationUrlResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/maintenance/preview": {
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Maintenance"
                ],
                "description": "Create a preview of the maintenance mode page",
                "operationId": "createMaintenancePreview",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MaintenancePreviewRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/MaintenancePreviewResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/maintenance/template": {
            "delete": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Maintenance"
                ],
                "description": "Restore default maintenance mode template",
                "operationId": "restoreMaintenanceTemplate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BasicDeleteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/nginx-caching/status": {
            "put": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.NginxCaching"
                ],
                "description": "Update nginx caching setting",
                "operationId": "updateNginxCachingStatus",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StatusRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/StatusResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/password-protection": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.PasswordProtection"
                ],
                "description": "Get information about password protection feature",
                "operationId": "getPasswordProtection",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password protection feature status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "PasswordProtectionResponse",
                                    "required": [
                                        "available",
                                        "status",
                                        "credentials"
                                    ],
                                    "properties": {
                                        "available": {
                                            "description": "Availability of password protection feature",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "credentials": {
                                            "title": "PasswordProtectionResponseCredentials",
                                            "required": [
                                                "username",
                                                "password"
                                            ],
                                            "properties": {
                                                "username": {
                                                    "type": "string",
                                                    "example": "admin_wkejfjai"
                                                },
                                                "password": {
                                                    "type": "string",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.PasswordProtection"
                ],
                "description": "Update password protection",
                "operationId": "updatePasswordProtection",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "PasswordProtectionRequest",
                                "properties": {
                                    "status": {
                                        "description": "Status",
                                        "type": "boolean",
                                        "example": "true"
                                    },
                                    "credentials": {
                                        "title": "PasswordProtectionRequestCredentials",
                                        "required": [
                                            "username",
                                            "password"
                                        ],
                                        "properties": {
                                            "username": {
                                                "type": "string"
                                            },
                                            "password": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password protection feature status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "PasswordProtectionResponse",
                                    "required": [
                                        "available",
                                        "status",
                                        "credentials"
                                    ],
                                    "properties": {
                                        "available": {
                                            "description": "Availability of password protection feature",
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "credentials": {
                                            "title": "PasswordProtectionResponseCredentials",
                                            "required": [
                                                "username",
                                                "password"
                                            ],
                                            "properties": {
                                                "username": {
                                                    "type": "string",
                                                    "example": "admin_wkejfjai"
                                                },
                                                "password": {
                                                    "type": "string",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityResponse"
                                },
                                "example": {
                                    "meta": {
                                        "status": 422,
                                        "message": "Unprocessable Entity"
                                    },
                                    "formErrors": {
                                        "credentials": {
                                            "password": [
                                                "The password contains the characters that are not allowed: list"
                                            ],
                                            "username": [
                                                "Protected directory user name is greater than 20 characters"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/php/handlers": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Php"
                ],
                "description": "Return list of available PHP handlers for the installation",
                "operationId": "getAvailablePhpHandlers",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/PhpHandlersResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/remote-management/remote-server/properties": {
            "get": {
                "tags": [
                    "Internal",
                    "Installations.Features.RemoteManagement"
                ],
                "description": "Get properties of a WordPress website on a connected remote server",
                "operationId": "getRemoteServerInstallationProperties",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RemoteServerInstallationProperties"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/remote-management/remote-agent/properties": {
            "get": {
                "tags": [
                    "Internal",
                    "Installations.Features.RemoteManagement"
                ],
                "description": "Get properties of a connected remote WordPress website",
                "operationId": "getRemoteAgentInstallationProperties",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RemoteAgentInstallationProperties"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/updates/php/stub": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Updates.Php"
                ],
                "description": "Return parameters for starting Smart PHP Update",
                "operationId": "getSmartPhpUpdateStub",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SmartPhpUpdateStubResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/updates/php/result": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Updates.Php"
                ],
                "description": "Return Smart PHP Update results",
                "operationId": "getSmartPhpUpdateResult",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the result as JSON if 'Accept' header is 'application/json', otherwise a text file",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SmartPhpUpdateResult"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileTextPlain"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            },
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Updates.Php"
                ],
                "description": "Accept Smart PHP Update",
                "operationId": "acceptSmartPhpUpdate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BasicConfirmationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Updates.Php"
                ],
                "description": "Discard Smart PHP update",
                "operationId": "discardSmartPhpUpdate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BasicDeleteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/updates/smart/status": {
            "put": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Updates.Smart"
                ],
                "description": "Toggle Smart Update feature",
                "operationId": "updateSmartUpdatesStatus",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StatusRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/StatusResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/updates/smart/result": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Updates.Smart"
                ],
                "description": "Get Smart Update result",
                "operationId": "getSmartUpdateResult",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the result as JSON if 'Accept' header is 'application/json', otherwise a text file",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SmartUpdateResult"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileTextPlain"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            },
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Updates.Smart"
                ],
                "description": "Apply Smart Update",
                "operationId": "applySmartUpdate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BasicConfirmationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/BackgroundTaskWithUrlResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Updates.Smart"
                ],
                "description": "Discard Smart Update",
                "operationId": "discardSmartUpdate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BasicDeleteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/features/updates/settings": {
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Updates"
                ],
                "description": "Change autoupdate settings",
                "operationId": "updateInstallationsAutoUpdatesSettings",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/skipBrokenInstallations"
                    },
                    {
                        "$ref": "#/components/parameters/skipInfectedInstallations"
                    },
                    {
                        "$ref": "#/components/parameters/skipUnsupportedInstallations"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstallationsAutoUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "InstallationsAutoUpdateResponse",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/InstallationAutoUpdateWithIdResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v2/features/updates/settings": {
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Updates"
                ],
                "description": "Change autoupdate settings",
                "operationId": "updateInstallationsAutoUpdatesSettingsV2",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/skipBrokenInstallations"
                    },
                    {
                        "$ref": "#/components/parameters/skipInfectedInstallations"
                    },
                    {
                        "$ref": "#/components/parameters/skipUnsupportedInstallations"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstallationsAutoUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackgroundTaskWithUrlResponse"
                                },
                                "example": {
                                    "url": "/v1/background-tasks/update-autoupdate-settings/1",
                                    "task": {
                                        "id": 1,
                                        "code": "update-autoupdate-settings",
                                        "title": "Updating AutoUpdate settings",
                                        "status": "running",
                                        "progress": 0,
                                        "steps": [],
                                        "publicParams": {
                                            "processedInstallationsIds": [
                                                1,
                                                2
                                            ]
                                        },
                                        "errors": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v2/features/updates/mass-settings": {
            "post": {
                "tags": [
                    "Internal",
                    "Installations.Features.Updates"
                ],
                "description": "Mass change autoupdate settings",
                "operationId": "MassUpdateInstallationsAutoUpdatesSettings",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/skipBrokenInstallations"
                    },
                    {
                        "$ref": "#/components/parameters/skipInfectedInstallations"
                    },
                    {
                        "$ref": "#/components/parameters/skipUnsupportedInstallations"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstallationsAutoUpdateListRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackgroundTaskWithUrlResponse"
                                },
                                "example": {
                                    "url": "/v1/background-tasks/update-autoupdate-settings/1",
                                    "task": {
                                        "id": 1,
                                        "code": "update-autoupdate-settings",
                                        "title": "Updating AutoUpdate settings",
                                        "status": "running",
                                        "progress": 0,
                                        "steps": [],
                                        "publicParams": [],
                                        "errors": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/features/virtual-patches/protector": {
            "post": {
                "tags": [
                    "Internal",
                    "Installations.Features.VirtualPatches"
                ],
                "description": "Apply virtual patches on instances",
                "operationId": "updateVirtualPatchesProtectionStatus",
                "parameters": [
                    {
                        "name": "dry-run",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VirtualPatchesProtectorRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackgroundTaskWithUrlResponse"
                                },
                                "example": {
                                    "url": "/v1/background-tasks/apply-virtual-patches/1",
                                    "task": {
                                        "id": 1,
                                        "code": "apply-virtual-patches",
                                        "title": "Installing the WAF plugin on sites",
                                        "status": "running",
                                        "progress": 0,
                                        "steps": [
                                            {
                                                "code": "installWafPlugin",
                                                "title": "Installing the WAF plugin on sites",
                                                "icon": "",
                                                "progress": -1,
                                                "status": "running",
                                                "hint": ""
                                            }
                                        ],
                                        "publicParams": {
                                            "installationsIds": [
                                                1,
                                                2
                                            ]
                                        },
                                        "errors": []
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityResponse"
                                },
                                "example": {
                                    "meta": {
                                        "status": 422,
                                        "message": "You are trying to enable virtual patches for 6 installations, but for 3 installations patching cannot be enabled due to reached limit in your subscription. You can enable patching for 2 installations individually in the list of installations"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/virtual-patches/subscription": {
            "get": {
                "tags": [
                    "Internal",
                    "Installations.Features.VirtualPatches"
                ],
                "description": "Get virtual patches subscription info",
                "operationId": "getVirtualPatchesSubscriptionInfo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/VirtualPatchesSubscriptionInfoResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    }
                }
            },
            "post": {
                "tags": [
                    "Internal",
                    "Installations.Features.VirtualPatches"
                ],
                "description": "Provide URL for purchasing virtual patches",
                "operationId": "getVirtualPatchesSubscriptionPurchaseUrl",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BasicConfirmationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/VirtualPatchesPurchaseSessionResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "409": {
                        "$ref": "#/components/responses/ConflictExceptionResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Internal",
                    "Installations.Features.VirtualPatches"
                ],
                "description": "Detach virtual patches subscription",
                "operationId": "detachVirtualPatchesSubscription",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BasicConfirmationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/virtual-patches/subscription/guid": {
            "get": {
                "tags": [
                    "Internal",
                    "Installations.Features.VirtualPatches"
                ],
                "description": "Get virtual patches subscription GUID",
                "operationId": "getVirtualPatchesSubscriptionGuid",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/VirtualPatchesSubscriptionGuidResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/virtual-patches/subscription/activator": {
            "post": {
                "tags": [
                    "Internal",
                    "Installations.Features.VirtualPatches"
                ],
                "description": "Activate virtual patches subscription",
                "operationId": "ActivateVirtualPatchesSubscription",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VirtualPatchesActivatorRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/VirtualPatchesSubscriptionInfoResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "422": {
                        "description": "Virtual patches cannot be activated due to some license problems",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/vulnerability/security-policies": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.SecurityPolicies"
                ],
                "description": "Get installation security policies",
                "operationId": "getInstallationSecurityPolicies",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/InstallationSecurityPoliciesResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.SecurityPolicies"
                ],
                "description": "Change installation security policies",
                "operationId": "updateInstallationSecurityPolicies",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstallationSecurityPoliciesUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/InstallationSecurityPoliciesResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityResponse"
                                },
                                "example": {
                                    "meta": {
                                        "status": 422,
                                        "message": "You are trying to enable virtual patches for 6 installations, but for 3 installations patching cannot be enabled due to reached limit in your subscription. You can enable patching for 2 installations individually in the list of installations"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/features/vulnerability/stats": {
            "post": {
                "tags": [
                    "Internal",
                    "Installations.Features.Vulnerability"
                ],
                "description": "Receive and collect statistics about clicks on 'update' and 'deactivate' buttons.",
                "operationId": "featureVulnerabilityStatsUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "ButtonClicksStats",
                                "properties": {
                                    "buttonClicked": {
                                        "type": "string",
                                        "enum": [
                                            "update",
                                            "deactivate"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/vulnerability/filtering": {
            "patch": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Vulnerability.Filtering"
                ],
                "description": "Update vulnerabilities filtering settings",
                "operationId": "updateVulnerabilityFiltering",
                "parameters": [
                    {
                        "name": "installationId",
                        "in": "path",
                        "description": "Installation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "VulnerabilityFilteringRequest",
                                "properties": {
                                    "status": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InstallationVulnerabilityFiltering"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/features/vulnerability/mitigator": {
            "post": {
                "tags": [
                    "Internal",
                    "Installations.Features.Vulnerability.Mitigation"
                ],
                "description": "Mitigate installations vulnerabilities",
                "operationId": "mitigateVulnerabilities",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "VulnerabilitiesMitigationRequest",
                                "type": "array",
                                "items": {
                                    "title": "VulnerabilitiesMitigation",
                                    "required": [
                                        "installationId",
                                        "mitigations"
                                    ],
                                    "properties": {
                                        "installationId": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "mitigations": {
                                            "type": "array",
                                            "items": {
                                                "title": "VulnerabilitiesMitigationData",
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "applied"
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "securityMeasure",
                                                            "virtualPatch",
                                                            "update",
                                                            "deactivateAsset"
                                                        ],
                                                        "example": "update"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "example": "CVE-PS-1"
                                                    },
                                                    "applied": {
                                                        "type": "boolean",
                                                        "example": "true"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "policy": {
                                            "type": "string",
                                            "enum": [
                                                "activateAfterUpdate"
                                            ],
                                            "example": "activateAfterUpdate"
                                        }
                                    },
                                    "type": "object"
                                },
                                "minItems": 1
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackgroundTaskWithUrlResponse"
                                },
                                "example": {
                                    "url": "/v1/background-tasks/vulnerability-mitigation/1",
                                    "task": {
                                        "id": 1,
                                        "code": "vulnerability-mitigation",
                                        "title": "",
                                        "status": "running",
                                        "progress": 0,
                                        "steps": [],
                                        "publicParams": {
                                            "processedInstallationsIds": [
                                                1,
                                                2
                                            ]
                                        },
                                        "errors": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/debug/status": {
            "put": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Debug"
                ],
                "description": "Update WordPress debug status",
                "operationId": "updateWordPressDebugStatus",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "WordPressDebugStatusRequest",
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "description": "Status",
                                        "type": "boolean",
                                        "example": "true"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "WordPress debug status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "WordPressDebugStatusResponse",
                                    "required": [
                                        "status"
                                    ],
                                    "properties": {
                                        "status": {
                                            "description": "Status",
                                            "type": "boolean",
                                            "example": "true"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/debug/settings/meta": {
            "get": {
                "tags": [
                    "Internal",
                    "Installations.Features.Debug"
                ],
                "description": "Returns WordPress debug settings with meta",
                "operationId": "getWordPressDebugSettingsMeta",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/MetaWordPressDebugSettingsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/debug/settings": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Debug"
                ],
                "description": "Returns WordPress debug settings",
                "operationId": "getWordPressDebugSettings",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/WordPressDebugSettingsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Debug"
                ],
                "description": "Update WordPress debug settings",
                "operationId": "updateWordPressDebugSettings",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WordPressDebugSettingsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/WordPressDebugSettingsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/wp-cron-takeover": {
            "patch": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.WpCronTakeover"
                ],
                "description": "Update wp-cron-takeover feature",
                "operationId": "updateWpCronTakeover",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "WpCronTakeoverInstanceRequest",
                                "properties": {
                                    "status": {
                                        "description": "Status",
                                        "type": "boolean",
                                        "example": "true"
                                    },
                                    "taskReplacementStatus": {
                                        "description": "Status",
                                        "type": "boolean",
                                        "example": "true"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/WpCronTakeoverInstanceResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/wp-cron-takeover/meta": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.WpCronTakeover"
                ],
                "description": "Get status of wp-cron-takeover feature",
                "operationId": "getWpCronTakeoverMeta",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/MetaWpCronTakeoverInstanceResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/global-alerts": {
            "delete": {
                "tags": [
                    "Internal",
                    "GlobalAlerts"
                ],
                "description": "Close global alert with specified identifier",
                "operationId": "closeGlobalAlert",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CloseGlobalAlertRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenResponse"
                    }
                }
            }
        },
        "/v1/installations": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations"
                ],
                "description": "Return the list of WordPress installations",
                "operationId": "getInstallations",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationsIds"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Sort installations by the specified field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "title",
                            "enum": [
                                "title",
                                "displayTitle",
                                "ownerName",
                                "version"
                            ]
                        },
                        "example": "title"
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Installations sorting order (ascending or descending)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/InstallationsListResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            },
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations"
                ],
                "description": "Installing WordPress",
                "operationId": "createInstallation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstallationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/BackgroundTaskWithUrlResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntityResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations"
                ],
                "description": "Return details of a WordPress installation with specified ID",
                "operationId": "getInstallation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/InstallationResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/credentials": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Account"
                ],
                "description": "Get credentials to log into WordPress admin dashboard",
                "operationId": "getWpCredentials",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CredentialsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/updates/settings": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Updates"
                ],
                "description": "Get autoupdate settings",
                "operationId": "getAutoUpdateSettings",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/InstallationAutoUpdateResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            },
            "put": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.Updates"
                ],
                "description": "Change autoupdate settings",
                "operationId": "updateAutoUpdateSettings",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstallationAutoUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/InstallationAutoUpdateResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/plugins": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Plugins"
                ],
                "description": "Get the list of plugins on a WordPress installation",
                "operationId": "getInstallationPlugins",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/InstallationPluginsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            },
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Plugins"
                ],
                "description": "Install a plugin on a WordPress installation",
                "operationId": "instalationsPluginsInstall",
                "parameters": [
                    {
                        "name": "installationId",
                        "in": "path",
                        "description": "Installation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstallationAssetInstallRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/InstallationPluginResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Plugins"
                ],
                "description": "Uninstall plugins from a WordPress installation",
                "operationId": "instalationsPluginsUninstall",
                "parameters": [
                    {
                        "name": "installationId",
                        "in": "path",
                        "description": "Installation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Asset slugs",
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "minItems": 1
                                }
                            },
                            "example": "['jetpack', 'akismet']"
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Plugins"
                ],
                "description": "Change auto updates setting and/or status for plugins on a WordPress installation",
                "operationId": "updateInstallationsPlugins",
                "parameters": [
                    {
                        "name": "installationId",
                        "in": "path",
                        "description": "Installation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstallationAssetsUpdatesRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/InstallationPluginsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/themes": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Themes"
                ],
                "description": "Get the list of themes on a WordPress installation",
                "operationId": "getInstallationThemes",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/InstallationThemesResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            },
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Themes"
                ],
                "description": "Install a theme on a WordPress installation",
                "operationId": "instalationsThemesInstall",
                "parameters": [
                    {
                        "name": "installationId",
                        "in": "path",
                        "description": "Installation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstallationAssetInstallRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/InstallationThemeResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Themes"
                ],
                "description": "Uninstall themes from a WordPress installation",
                "operationId": "instalationsThemesUninstall",
                "parameters": [
                    {
                        "name": "installationId",
                        "in": "path",
                        "description": "Installation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Asset slugs",
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "minItems": 1
                                }
                            },
                            "example": "['hello-dolly', 'twentytwenty']"
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Themes"
                ],
                "description": "Change auto updates setting for themes on a WordPress installation",
                "operationId": "updateInstallationsThemes",
                "parameters": [
                    {
                        "name": "installationId",
                        "in": "path",
                        "description": "Installation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstallationAssetsUpdatesRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/InstallationThemesResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/backups": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Backups"
                ],
                "description": "Get installation backup information",
                "operationId": "getInstallationBackupsInfo",
                "parameters": [
                    {
                        "name": "installationId",
                        "in": "path",
                        "description": "Installation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "files[]",
                        "in": "query",
                        "description": "Backup file names",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "example": "example.com__2023-01-23T13_13_07+0200.zip"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/InstallationBackupInfoListResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Backups"
                ],
                "description": "Remove installation backup by filename",
                "operationId": "removeInstallationBackups",
                "parameters": [
                    {
                        "name": "installationId",
                        "in": "path",
                        "description": "Installation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "files[]",
                        "in": "query",
                        "description": "Backup file names",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "example": "example.com__2023-01-23T13_13_07+0200.zip"
                            }
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BasicDeleteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/login": {
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations"
                ],
                "description": "Generates a login link to WordPress admin area for a WordPress installation",
                "operationId": "loginInstallation",
                "parameters": [
                    {
                        "name": "installationId",
                        "in": "path",
                        "description": "Installation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "login",
                        "in": "query",
                        "description": "Username for logging to WordPress admin area",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "nullable": true
                            }
                        }
                    }
                },
                "responses": {
                    "307": {
                        "$ref": "#/components/responses/InstallationLoginResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntityResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/plugins/{slug}/status": {
            "put": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Plugins"
                ],
                "description": "Activate or deactivate plugin on a WordPress installation",
                "operationId": "instalationsPluginsActivateDeactivate",
                "parameters": [
                    {
                        "name": "installationId",
                        "in": "path",
                        "description": "Installation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Plugin slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StatusRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/StatusResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/catalog/plugins/{slug}": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Plugins"
                ],
                "description": "Retrieve plugin info from WordPress.org",
                "operationId": "instalationsPluginsInfo",
                "parameters": [
                    {
                        "name": "installationId",
                        "in": "path",
                        "description": "Installation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Plugin slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/WordPressAssetCatalogResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/catalog/plugins": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Plugins"
                ],
                "description": "Get the list of plugins for an installation",
                "operationId": "getInstallationsPlugins",
                "parameters": [
                    {
                        "name": "installationId",
                        "in": "path",
                        "description": "Installation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/InstallationAssetsCompatibleRequest"
                    },
                    {
                        "$ref": "#/components/parameters/InstallationAssetsDownloadCountRequest"
                    },
                    {
                        "$ref": "#/components/parameters/InstallationAssetsLastUpdatedAtRequest"
                    },
                    {
                        "$ref": "#/components/parameters/InstallationAssetsPageRequest"
                    },
                    {
                        "$ref": "#/components/parameters/InstallationAssetsPageSizeRequest"
                    },
                    {
                        "$ref": "#/components/parameters/InstallationAssetsRatingRequest"
                    },
                    {
                        "$ref": "#/components/parameters/InstallationAssetsTermRequest"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/WordPressAssetsCatalogResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/uploader/plugins": {
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Plugins"
                ],
                "description": "Upload and install a plugin on a WordPress installation",
                "operationId": "instalationsPluginsUploadAndInstall",
                "parameters": [
                    {
                        "name": "installationId",
                        "in": "path",
                        "description": "Installation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/InstallationAssetUploadRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/BackgroundTaskWithUrlResponse"
                                },
                                "example": {
                                    "url": "/v1/background-tasks/install-custom-plugin/1",
                                    "task": {
                                        "id": 1,
                                        "code": "install-custom-plugin",
                                        "title": "Installing Some plugin to example.com.",
                                        "status": "running",
                                        "progress": 0,
                                        "steps": [
                                            {
                                                "code": "installCustomPlugin",
                                                "title": "Installing Some plugin to example.com.",
                                                "icon": "",
                                                "progress": -1,
                                                "status": "running",
                                                "hint": ""
                                            }
                                        ],
                                        "publicParams": {
                                            "pluginName": "some-plugin",
                                            "pluginVersion": "1.0.0",
                                            "assetType": "plugins",
                                            "websiteUrls": "example.com"
                                        },
                                        "errors": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/account": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Account"
                ],
                "description": "Get WordPress installation settings",
                "operationId": "getSetupDrawerSettings",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SetupDrawerSettingsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Account"
                ],
                "description": "Update WordPress installation settings",
                "operationId": "updateSetupDrawerSettings",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "SetupDrawerSettingsRequest",
                                "properties": {
                                    "login": {
                                        "description": "Site administrator username to WordPress admin dashboard",
                                        "type": "string",
                                        "example": "admin",
                                        "nullable": true
                                    },
                                    "password": {
                                        "description": "Site administrator password to WordPress admin dashboard",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "email": {
                                        "description": "Site admininistrator email",
                                        "type": "string",
                                        "example": "admin@example.com",
                                        "nullable": true
                                    },
                                    "language": {
                                        "description": "Installation language",
                                        "type": "string",
                                        "example": "en_US",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SetupDrawerSettingsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityResponse"
                                },
                                "example": {
                                    "meta": {
                                        "status": 422,
                                        "message": "Unprocessable Entity"
                                    },
                                    "formErrors": {
                                        "login": {
                                            "notInArray": "'non-existent-login' was not found in the haystack"
                                        },
                                        "email": {
                                            "invalidEmail": "Incorrect email address"
                                        },
                                        "language": {
                                            "notInArray": "'non-existent-language' was not found in the haystack"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/themes/{slug}/status": {
            "put": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Themes"
                ],
                "description": "Activate theme on a WordPress installation",
                "operationId": "instalationsThemesActivate",
                "parameters": [
                    {
                        "name": "installationId",
                        "in": "path",
                        "description": "Installation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Theme slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StatusRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/StatusResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/catalog/themes": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Themes"
                ],
                "description": "Get the list of themes for an installation",
                "operationId": "getInstallationsThemes",
                "parameters": [
                    {
                        "name": "installationId",
                        "in": "path",
                        "description": "Installation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/InstallationAssetsCompatibleRequest"
                    },
                    {
                        "$ref": "#/components/parameters/InstallationAssetsDownloadCountRequest"
                    },
                    {
                        "$ref": "#/components/parameters/InstallationAssetsLastUpdatedAtRequest"
                    },
                    {
                        "$ref": "#/components/parameters/InstallationAssetsPageRequest"
                    },
                    {
                        "$ref": "#/components/parameters/InstallationAssetsPageSizeRequest"
                    },
                    {
                        "$ref": "#/components/parameters/InstallationAssetsRatingRequest"
                    },
                    {
                        "$ref": "#/components/parameters/InstallationAssetsTermRequest"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/WordPressAssetsCatalogResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/features/uploader/themes": {
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Themes"
                ],
                "description": "Upload and install a theme on a WordPress installation",
                "operationId": "instalationsThemesUploadAndInstall",
                "parameters": [
                    {
                        "name": "installationId",
                        "in": "path",
                        "description": "Installation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/InstallationAssetUploadRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/BackgroundTaskWithUrlResponse"
                                },
                                "example": {
                                    "url": "/v1/background-tasks/install-custom-theme/1",
                                    "task": {
                                        "id": 1,
                                        "code": "install-custom-theme",
                                        "title": "Installing Some theme to example.com.",
                                        "status": "running",
                                        "progress": 0,
                                        "steps": [
                                            {
                                                "code": "installCustomTheme",
                                                "title": "Installing Some theme to example.com.",
                                                "icon": "",
                                                "progress": -1,
                                                "status": "running",
                                                "hint": ""
                                            }
                                        ],
                                        "publicParams": {
                                            "themeName": "some-theme",
                                            "themeVersion": "1.0.0",
                                            "assetType": "themes",
                                            "websiteUrls": "example.com"
                                        },
                                        "errors": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/users/stub": {
            "get": {
                "tags": [
                    "Internal",
                    "Installations.Users"
                ],
                "description": "Get default values for WordPress account creation or existing account",
                "operationId": "getInstallationWpUserStub",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/WordPressUserResponse"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installations/{installationId}/users": {
            "post": {
                "tags": [
                    "Internal",
                    "Installations.Users"
                ],
                "description": "Create WordPress user for the installation",
                "operationId": "createInstallationWpUser",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "InstallationWpUserRequest",
                                "required": [
                                    "login",
                                    "password",
                                    "email"
                                ],
                                "properties": {
                                    "login": {
                                        "description": "WordPress user login",
                                        "type": "string",
                                        "example": "johndoe",
                                        "nullable": false
                                    },
                                    "password": {
                                        "description": "WordPress user password",
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "email": {
                                        "description": "WordPress user email",
                                        "type": "string",
                                        "example": "johndoe@example.com",
                                        "nullable": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/WordPressUserResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntityResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installer/path-validator": {
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations"
                ],
                "description": "Validate WordPress website installation path on a domain",
                "operationId": "validateInstallationPath",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstallationPathValidatorRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityResponse"
                                },
                                "example": {
                                    "meta": {
                                        "status": 422,
                                        "message": "Unprocessable Entity"
                                    },
                                    "formErrors": {
                                        "domain": {
                                            "domainNotFoundByName": "Failed to find domain with specified name"
                                        },
                                        "installationPath": {
                                            "dirInvalidName": "Invalid target directory name",
                                            "cloningToSourceInstancePath": "WordPress installations cannot be cloned into themselves because that would violate the rules of the spacetime continuum",
                                            "directoryHidesAnotherWordpress": "This directory cannot be used because it would cause a conflict with another WordPress installation at /var/www/vhosts/domain27ld64.w10-52-51-88.qa.plesk.ru/jkbvis/wp_agjmf, making this WordPress installation unavailable"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/installer/installation-stub": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations"
                ],
                "description": "Return default installation parameters",
                "operationId": "getInstallationStub",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Domain"
                    },
                    {
                        "$ref": "#/components/parameters/Version"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/InstallationStubResponse"
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityResponse"
                                },
                                "example": {
                                    "meta": {
                                        "status": 422,
                                        "message": "Unprocessable Entity"
                                    },
                                    "formErrors": {
                                        "domain": {
                                            "domainNotFoundByName": "Failed to find domain with specified name"
                                        },
                                        "version": {
                                            "versionNotFound": "Specified WordPress version is not supported"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/license-info": {
            "get": {
                "tags": [
                    "Internal",
                    "Licensing"
                ],
                "description": "Information about current license",
                "operationId": "getLicenseInfo",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/LicenseInfoResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/license-info/updater": {
            "post": {
                "tags": [
                    "Internal",
                    "Licensing"
                ],
                "description": "Update information about current license",
                "operationId": "updateLicenseInfo",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BasicConfirmationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/LicenseInfoResponse"
                    },
                    "424": {
                        "$ref": "#/components/responses/FailedDependencyResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/remover/confirmation": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Remover"
                ],
                "description": "Installation removal confirmation check",
                "operationId": "getInstallationsRemoveConfirmation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationsIds"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/InstallationsRemoverConfirmationResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/scanner": {
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Scanner"
                ],
                "description": "Scan WordPress installations",
                "operationId": "scanInstallations",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BasicConfirmationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/BackgroundTaskWithUrlResponse"
                                },
                                "example": {
                                    "url": "/v1/background-tasks/scan-instances/1",
                                    "task": {
                                        "id": 1,
                                        "code": "scan-instances",
                                        "title": "Scanning for WordPress websites",
                                        "status": "running",
                                        "progress": 0,
                                        "steps": [
                                            {
                                                "code": "scanLocal",
                                                "title": "Scanning for WordPress websites",
                                                "icon": "/modules/wp-toolkit/images/wordpresses.png",
                                                "progress": -1,
                                                "status": "running",
                                                "hint": ""
                                            }
                                        ],
                                        "publicParams": [],
                                        "errors": []
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/security-measures": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "SecurityMeasures"
                ],
                "description": "List available security measures",
                "operationId": "getSecurityMeasures",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SecurityMeasuresResponse"
                    }
                }
            }
        },
        "/v1/security-measures/checker": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "SecurityMeasures"
                ],
                "description": "List security measure status on installations",
                "operationId": "getSecurityMeasuresPerInstallations",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationsIds"
                    },
                    {
                        "$ref": "#/components/parameters/skipBrokenInstallations"
                    },
                    {
                        "$ref": "#/components/parameters/skipInfectedInstallations"
                    },
                    {
                        "$ref": "#/components/parameters/skipUnsupportedInstallations"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SecurityMeasuresStatusesForInstallationsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    }
                }
            },
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "SecurityMeasures"
                ],
                "description": "Check security measure status",
                "operationId": "checkSecurity",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "SecurityMeasuresCheckSecurityRequest",
                                "required": [
                                    "installationsIds"
                                ],
                                "properties": {
                                    "installationsIds": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": "42"
                                        },
                                        "minItems": 1
                                    },
                                    "skipBrokenInstallations": {
                                        "description": "Ignore broken installations (by default request fails on them)",
                                        "type": "boolean",
                                        "example": "false"
                                    },
                                    "skipInfectedInstallations": {
                                        "description": "Ignore quarantined installations (by default request fails on them)",
                                        "type": "boolean",
                                        "example": "false"
                                    },
                                    "skipUnsupportedInstallations": {
                                        "description": "Ignore unsupported installations (by default request fails on them)",
                                        "type": "boolean",
                                        "example": "false"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackgroundTaskWithUrlResponse"
                                },
                                "example": {
                                    "url": "/v1/background-tasks/mass-security-operation/1",
                                    "task": {
                                        "id": 1,
                                        "code": "mass-security-operation",
                                        "title": "Checking the security of WordPress installations...",
                                        "status": "running",
                                        "progress": 0,
                                        "steps": [],
                                        "publicParams": [],
                                        "errors": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    }
                }
            }
        },
        "/v1/security-measures/resolver": {
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "SecurityMeasures"
                ],
                "description": "Apply security measures",
                "operationId": "resolveSecurityMeasures",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "SecurityMeasuresResolveRequest",
                                "required": [
                                    "installationsIds",
                                    "securityMeasures"
                                ],
                                "properties": {
                                    "installationsIds": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": "42"
                                        },
                                        "minItems": 1
                                    },
                                    "skipBrokenInstallations": {
                                        "description": "Ignore broken installations (by default request fails on them)",
                                        "type": "boolean",
                                        "example": "false"
                                    },
                                    "skipInfectedInstallations": {
                                        "description": "Ignore quarantined installations (by default request fails on them)",
                                        "type": "boolean",
                                        "example": "false"
                                    },
                                    "skipUnsupportedInstallations": {
                                        "description": "Ignore unsupported installations (by default request fails on them)",
                                        "type": "boolean",
                                        "example": "false"
                                    },
                                    "securityMeasures": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "adminUsername"
                                        },
                                        "minItems": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackgroundTaskWithUrlResponse"
                                },
                                "example": {
                                    "url": "/v1/background-tasks/mass-security-operation/1",
                                    "task": {
                                        "id": 1,
                                        "code": "mass-security-operation",
                                        "title": "Applying security measures to WordPress installation...",
                                        "status": "running",
                                        "progress": 0,
                                        "steps": [],
                                        "publicParams": [],
                                        "errors": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    }
                }
            }
        },
        "/v1/security-measures/reverter": {
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "SecurityMeasures"
                ],
                "description": "Revert security measures",
                "operationId": "revertSecurityMeasures",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "SecurityMeasuresRevertRequest",
                                "required": [
                                    "installationsIds",
                                    "securityMeasures"
                                ],
                                "properties": {
                                    "installationsIds": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": "42"
                                        },
                                        "minItems": 1
                                    },
                                    "skipBrokenInstallations": {
                                        "description": "Ignore broken installations (by default request fails on them)",
                                        "type": "boolean",
                                        "example": "false"
                                    },
                                    "skipInfectedInstallations": {
                                        "description": "Ignore quarantined installations (by default request fails on them)",
                                        "type": "boolean",
                                        "example": "false"
                                    },
                                    "skipUnsupportedInstallations": {
                                        "description": "Ignore unsupported installations (by default request fails on them)",
                                        "type": "boolean",
                                        "example": "false"
                                    },
                                    "securityMeasures": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "adminUsername"
                                        },
                                        "minItems": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackgroundTaskWithUrlResponse"
                                },
                                "example": {
                                    "url": "/v1/background-tasks/mass-security-operation/1",
                                    "task": {
                                        "id": 1,
                                        "code": "mass-security-operation",
                                        "title": "Reverting security measures applied to WordPress installation...",
                                        "status": "running",
                                        "progress": 0,
                                        "steps": [],
                                        "publicParams": [],
                                        "errors": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    }
                }
            }
        },
        "/v1/sets/{setId}": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Sets"
                ],
                "description": "Get set details",
                "operationId": "getSetDetails",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SetId"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SetDetailsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Internal",
                    "Public",
                    "Sets"
                ],
                "description": "Delete set",
                "operationId": "deleteSet",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SetId"
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BasicDeleteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Internal",
                    "Public",
                    "Sets"
                ],
                "description": "Update set",
                "operationId": "updateSet",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SetId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSetRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/sets": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Sets"
                ],
                "description": "Get sets list",
                "operationId": "getSetsList",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/SetsListResponse"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            },
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Sets"
                ],
                "description": "Create new set",
                "operationId": "createSet",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSetRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/SetDetailsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/sets/{setId}/plugins": {
            "put": {
                "tags": [
                    "Internal",
                    "Public",
                    "Sets"
                ],
                "description": "Set plugins to set",
                "operationId": "setPluginsToSet",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SetId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetPluginsToSetRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            },
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Sets"
                ],
                "description": "Add plugins to set",
                "operationId": "addPluginsToSet",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SetId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PluginAssetDetails"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/SetDetailsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/sets/{setId}/themes": {
            "put": {
                "tags": [
                    "Internal",
                    "Public",
                    "Sets"
                ],
                "description": "Set themes to set",
                "operationId": "setThemesToSet",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SetId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetThemesToSetRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            },
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Sets"
                ],
                "description": "Add themes to set",
                "operationId": "addThemesToSet",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SetId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ThemeAssetDetails"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/SetDetailsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/sets/{setId}/plugins/{pluginSlug}": {
            "delete": {
                "tags": [
                    "Internal",
                    "Public",
                    "Sets"
                ],
                "description": "Remove plugin from set",
                "operationId": "removePluginFromSet",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SetId"
                    },
                    {
                        "name": "pluginSlug",
                        "in": "path",
                        "description": "Plugin slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BasicDeleteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/sets/{setId}/themes/{themeSlug}": {
            "delete": {
                "tags": [
                    "Internal",
                    "Public",
                    "Sets"
                ],
                "description": "Remove theme from set",
                "operationId": "removeThemeFromSet",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SetId"
                    },
                    {
                        "name": "themeSlug",
                        "in": "path",
                        "description": "Theme slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BasicDeleteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/sets-installer": {
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Sets"
                ],
                "description": "Install set",
                "operationId": "installSet",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstallSetRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/BackgroundTaskWithUrlResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/sets/{setId}/features/uploader/plugins": {
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Sets"
                ],
                "description": "Upload plugin into set",
                "operationId": "uploadPluginToSet",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SetId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadPluginIntoSetRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/UploadPluginIntoSetResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/sets/{setId}/features/uploader/themes": {
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Sets"
                ],
                "description": "Upload theme into set",
                "operationId": "uploadThemeToSet",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/SetId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadThemeIntoSetRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/UploadThemeIntoSetResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "403": {
                        "$ref": "#/components/responses/ForbiddenResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/smart-php-updater": {
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Installations.Features.SmartPhpUpdate"
                ],
                "description": "Run Smart PHP Update",
                "operationId": "runSmartPhpUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RunSmartPhpUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackgroundTaskWithUrlResponse"
                                },
                                "example": {
                                    "url": "/v1/background-tasks/smart-php-update-instance/1",
                                    "task": {
                                        "id": 1,
                                        "code": "smart-php-update-instance",
                                        "title": "Performing Smart PHP Update test run for example.tld",
                                        "status": "running",
                                        "progress": 0,
                                        "steps": [
                                            {
                                                "code": "spu-initial-check",
                                                "title": "Analyzing the original site",
                                                "icon": "",
                                                "progress": -1,
                                                "status": "running",
                                                "hint": ""
                                            }
                                        ],
                                        "publicParams": [],
                                        "errors": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityResponse"
                                },
                                "example": {
                                    "meta": {
                                        "status": 422,
                                        "message": "Unprocessable Entity"
                                    },
                                    "formErrors": {
                                        "phpVersion": {
                                            "failedToGetPhpHandler": "Failed to get a PHP handler by the identifier 'handler-identifier'",
                                            "isNotSupportedByWpCli": "The PHP version X.Y.Z is not supported by WpCli. Minimal supported version is Q.W.E"
                                        },
                                        "parentDomain": {
                                            "isEmpty": "Parent domain is required"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/specification/{specificationType}": {
            "get": {
                "tags": [
                    "Internal",
                    "Specification"
                ],
                "description": "Get OpenAPI Specification",
                "operationId": "getSpecification",
                "parameters": [
                    {
                        "name": "specificationType",
                        "in": "path",
                        "description": "Specification type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "internal",
                                "public"
                            ]
                        },
                        "example": "public"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "SpecificationResponse",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    }
                }
            }
        },
        "/v1/stats/hire-developer-transition": {
            "post": {
                "tags": [
                    "Internal",
                    "Statistics"
                ],
                "description": "Receive and collect statistics about transitions by hire developer link",
                "operationId": "statsHireDeveloperTransition",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "TransitionStats",
                                "required": [
                                    "installationId"
                                ],
                                "properties": {
                                    "installationId": {
                                        "type": "integer",
                                        "example": 7
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    }
                }
            }
        },
        "/v1/updates-checker": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Updater.Checker"
                ],
                "description": "Get information about available updates",
                "operationId": "fetchAvailableUpdates",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationsIds"
                    },
                    {
                        "$ref": "#/components/parameters/skipBrokenInstallations"
                    },
                    {
                        "$ref": "#/components/parameters/skipInfectedInstallations"
                    },
                    {
                        "$ref": "#/components/parameters/skipUnsupportedInstallations"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Available updates",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "title": "WordPressUpdatesResponse",
                                        "required": [
                                            "id",
                                            "applicable",
                                            "displayTitle",
                                            "title",
                                            "multisite",
                                            "vulnerable",
                                            "lastCheckUpdateTimestamp",
                                            "smartUpdate",
                                            "core",
                                            "plugins",
                                            "themes",
                                            "autoUpdate",
                                            "tasks"
                                        ],
                                        "properties": {
                                            "id": {
                                                "type": "number",
                                                "example": 1
                                            },
                                            "applicable": {
                                                "type": "boolean"
                                            },
                                            "displayTitle": {
                                                "type": "string",
                                                "example": "example.tld/wordpress"
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "My Awesome WordPress"
                                            },
                                            "multisite": {
                                                "type": "boolean"
                                            },
                                            "vulnerable": {
                                                "type": "boolean",
                                                "nullable": true
                                            },
                                            "lastCheckUpdateTimestamp": {
                                                "type": "integer",
                                                "nullable": true
                                            },
                                            "smartUpdate": {
                                                "title": "WordPressUpdatesSmartUpdatesResponse",
                                                "required": [
                                                    "status",
                                                    "taskStatus",
                                                    "applicable"
                                                ],
                                                "properties": {
                                                    "status": {
                                                        "description": "Smart Update enabled",
                                                        "type": "boolean"
                                                    },
                                                    "taskStatus": {
                                                        "$ref": "#/components/schemas/InstallationSmartUpdatesTaskStatusEnum"
                                                    },
                                                    "applicable": {
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "core": {
                                                "required": [
                                                    "version",
                                                    "availableVersion",
                                                    "restorePoint"
                                                ],
                                                "properties": {
                                                    "version": {
                                                        "type": "string",
                                                        "example": "6.0.0"
                                                    },
                                                    "availableVersion": {
                                                        "type": "string",
                                                        "example": "6.0.1",
                                                        "nullable": true
                                                    },
                                                    "restorePoint": {
                                                        "$ref": "#/components/schemas/InstallationRestorePoint"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "plugins": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/InstallationPlugin"
                                                }
                                            },
                                            "themes": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/InstallationTheme"
                                                }
                                            },
                                            "autoUpdate": {
                                                "$ref": "#/components/schemas/InstallationAutoUpdateResponse"
                                            },
                                            "tasks": {
                                                "required": [
                                                    "update",
                                                    "check"
                                                ],
                                                "properties": {
                                                    "update": {
                                                        "nullable": true,
                                                        "allOf": [
                                                            {
                                                                "$ref": "#/components/schemas/BackgroundTaskResponse"
                                                            }
                                                        ]
                                                    },
                                                    "check": {
                                                        "nullable": true,
                                                        "allOf": [
                                                            {
                                                                "$ref": "#/components/schemas/BackgroundTaskResponse"
                                                            }
                                                        ]
                                                    }
                                                },
                                                "type": "object",
                                                "example": {
                                                    "update": {
                                                        "id": 1,
                                                        "code": "task\\updateitems",
                                                        "title": "Updating selected items...",
                                                        "status": "running",
                                                        "progress": 0,
                                                        "steps": [],
                                                        "publicParams": {
                                                            "currentlyUpdatingInstallationId": 2,
                                                            "successfullyUpdatedInstallationsIds": [
                                                                1
                                                            ]
                                                        },
                                                        "errors": []
                                                    },
                                                    "check": {
                                                        "id": 1,
                                                        "code": "mass-check-updates",
                                                        "title": "Checking for updates",
                                                        "status": "running",
                                                        "progress": 0,
                                                        "steps": [],
                                                        "publicParams": {
                                                            "installationsIds": [
                                                                1,
                                                                2
                                                            ]
                                                        },
                                                        "errors": []
                                                    }
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            },
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Updater.Checker"
                ],
                "description": "Start updates availability check",
                "operationId": "refreshAvailableUpdates",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "RefreshAvailableUpdatesRequest",
                                "required": [
                                    "installationsIds"
                                ],
                                "properties": {
                                    "installationsIds": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "minItems": 1
                                    },
                                    "skipBrokenInstallations": {
                                        "description": "Ignore broken installations (by default request fails on them)",
                                        "type": "boolean",
                                        "example": "false"
                                    },
                                    "skipInfectedInstallations": {
                                        "description": "Ignore quarantined installations (by default request fails on them)",
                                        "type": "boolean",
                                        "example": "false"
                                    },
                                    "skipUnsupportedInstallations": {
                                        "description": "Ignore unsupported installations (by default request fails on them)",
                                        "type": "boolean",
                                        "example": "false"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackgroundTaskWithUrlResponse"
                                },
                                "example": {
                                    "url": "/v1/background-tasks/mass-check-updates/1",
                                    "task": {
                                        "id": 1,
                                        "code": "mass-check-updates",
                                        "title": "Checking for updates",
                                        "status": "running",
                                        "progress": 0,
                                        "steps": [],
                                        "publicParams": {
                                            "installationsIds": [
                                                1,
                                                2
                                            ]
                                        },
                                        "errors": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/updater": {
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Updater"
                ],
                "description": "Updates launcher",
                "operationId": "launchUpdate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/skipBrokenInstallations"
                    },
                    {
                        "$ref": "#/components/parameters/skipInfectedInstallations"
                    },
                    {
                        "$ref": "#/components/parameters/skipUnsupportedInstallations"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "LaunchUpdates",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/LaunchInstallationUpdate"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackgroundTaskWithUrlResponse"
                                },
                                "example": {
                                    "url": "/v1/background-tasks/task\\updateitems/1",
                                    "task": {
                                        "id": 1,
                                        "code": "mass-check-updates",
                                        "title": "Updating selected items...",
                                        "status": "running",
                                        "progress": 0,
                                        "steps": [],
                                        "publicParams": {
                                            "currentlyUpdatingInstallationId": 2,
                                            "successfullyUpdatedInstallationsIds": [
                                                1
                                            ]
                                        },
                                        "errors": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        },
        "/v1/vulnerabilities-checker": {
            "get": {
                "tags": [
                    "Internal",
                    "Public",
                    "Vulnerabilities"
                ],
                "description": "Get information about WordPress vulnerabilities",
                "operationId": "fetchInstallationsVulnerabilityStatuses",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstallationsIds"
                    },
                    {
                        "$ref": "#/components/parameters/skipBrokenInstallations"
                    },
                    {
                        "$ref": "#/components/parameters/skipInfectedInstallations"
                    },
                    {
                        "$ref": "#/components/parameters/skipUnsupportedInstallations"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/InstallationVulnerabilityStatus"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            },
            "post": {
                "tags": [
                    "Internal",
                    "Public",
                    "Vulnerabilities"
                ],
                "description": "Start vulnerability check",
                "operationId": "checkInstallationsVulnerability",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "CheckVulnerabilityRequest",
                                "required": [
                                    "installationsIds"
                                ],
                                "properties": {
                                    "installationsIds": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "minItems": 1
                                    },
                                    "skipBrokenInstallations": {
                                        "description": "Ignore broken installations (by default request fails on them)",
                                        "type": "boolean",
                                        "example": "false"
                                    },
                                    "skipInfectedInstallations": {
                                        "description": "Ignore quarantined installations (by default request fails on them)",
                                        "type": "boolean",
                                        "example": "false"
                                    },
                                    "skipUnsupportedInstallations": {
                                        "description": "Ignore unsupported installations (by default request fails on them)",
                                        "type": "boolean",
                                        "example": "false"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackgroundTaskWithUrlResponse"
                                },
                                "example": {
                                    "url": "/v1/background-tasks/check-vulnerability/1",
                                    "task": {
                                        "id": 1,
                                        "code": "check-vulnerability",
                                        "title": "Scanning for vulnerabilities",
                                        "status": "running",
                                        "progress": 0,
                                        "steps": [],
                                        "publicParams": {
                                            "processedInstallationsIds": [
                                                1,
                                                2
                                            ]
                                        },
                                        "errors": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ScheduledTimeApplyRequest": {
                "required": [
                    "minute",
                    "hour"
                ],
                "properties": {
                    "hour": {
                        "example": "16",
                        "oneOf": [
                            {
                                "type": "integer",
                                "maximum": 23,
                                "minimum": 0
                            },
                            {
                                "type": "string",
                                "pattern": "^\\*$"
                            }
                        ]
                    },
                    "minute": {
                        "example": "44",
                        "oneOf": [
                            {
                                "type": "integer",
                                "maximum": 59,
                                "minimum": 0
                            },
                            {
                                "type": "string",
                                "pattern": "^\\*$"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "ScheduledTasksTimeResponse": {
                "required": [
                    "minute",
                    "hour"
                ],
                "properties": {
                    "minute": {
                        "type": "string"
                    },
                    "hour": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ScannerLog": {
                "required": [
                    "path",
                    "status",
                    "shortDetails",
                    "trace"
                ],
                "properties": {
                    "path": {
                        "description": "Local path to the WordPress site",
                        "type": "string",
                        "example": "/var/www/vhosts/domain.tld/httpdocs"
                    },
                    "status": {
                        "description": "Log record status (error, warning)",
                        "type": "string",
                        "example": "error"
                    },
                    "shortDetails": {
                        "description": "Log record short details",
                        "type": "string",
                        "example": "Skipped: website URL not found",
                        "nullable": true
                    },
                    "trace": {
                        "description": "Trace log of the error",
                        "type": "string",
                        "example": "#0/library/SomeClass.php(123):Library\\SomeClass:execute(Object(Closure))#1/bin/script.php(7):test()#2{main}",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CoreVulnerabilityStatusShort": {
                "required": [
                    "version",
                    "availableVersion",
                    "availableMinorVersion",
                    "vulnerabilities"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CoreVulnerabilityStatus"
                    },
                    {
                        "properties": {
                            "version": {
                                "description": "WordPress version",
                                "type": "string",
                                "example": "5.1.3"
                            },
                            "availableVersion": {
                                "description": "WordPress version available for update",
                                "type": "string",
                                "example": "5.8",
                                "nullable": true
                            },
                            "availableMinorVersion": {
                                "description": "WordPress minor version available for update",
                                "type": "string",
                                "example": "5.7.8",
                                "nullable": true
                            },
                            "vulnerabilities": {
                                "description": "WordPress core vulnerabilities",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/VulnerabilityShort"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "InstallationVulnerabilityStatusShort": {
                "required": [
                    "id",
                    "displayTitle",
                    "lastVulnerabilityCheckTimestamp",
                    "vulnerable",
                    "applicable",
                    "core",
                    "plugins",
                    "themes"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/InstallationVulnerabilityStatus"
                    },
                    {
                        "properties": {
                            "id": {
                                "description": "Installation ID",
                                "type": "integer",
                                "example": "1"
                            },
                            "displayTitle": {
                                "description": "WordPress site title",
                                "type": "string",
                                "example": "example.com/wordpress"
                            },
                            "lastVulnerabilityCheckTimestamp": {
                                "description": "Last time WordPress site was checked for vulnerabilities",
                                "type": "integer",
                                "example": "1655285582",
                                "nullable": true
                            },
                            "applicable": {
                                "description": "Vulnerability feature might be disabled by the server administrator",
                                "type": "boolean",
                                "example": "true"
                            },
                            "vulnerable": {
                                "description": "WordPress site vulnerability status",
                                "type": "boolean",
                                "example": "true",
                                "nullable": true
                            },
                            "core": {
                                "$ref": "#/components/schemas/CoreVulnerabilityStatusShort"
                            },
                            "plugins": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PluginVulnerabilityStatusShort"
                                }
                            },
                            "themes": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ThemeVulnerabilityStatusShort"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "PluginVulnerabilityStatusShort": {
                "required": [
                    "slug",
                    "title",
                    "version",
                    "availableVersion",
                    "status",
                    "deactivationReason",
                    "vulnerabilities"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PluginVulnerabilityStatus"
                    },
                    {
                        "properties": {
                            "slug": {
                                "description": "Plugin slug",
                                "type": "string",
                                "example": "akismet"
                            },
                            "title": {
                                "description": "Plugin title",
                                "type": "string",
                                "example": "Akismet"
                            },
                            "version": {
                                "description": "Plugin version",
                                "type": "string",
                                "example": "3.1.4"
                            },
                            "availableVersion": {
                                "description": "Plugin version available for update",
                                "type": "string",
                                "example": "3.1.5",
                                "nullable": true
                            },
                            "status": {
                                "description": "Plugin status",
                                "type": "boolean",
                                "example": "true"
                            },
                            "deactivationReason": {
                                "description": "Plugin deactivation reason",
                                "type": "string",
                                "example": "mitigation",
                                "nullable": true
                            },
                            "vulnerabilities": {
                                "description": "Plugin vulnerabilities",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/VulnerabilityShort"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "ThemeVulnerabilityStatusShort": {
                "required": [
                    "slug",
                    "title",
                    "version",
                    "availableVersion",
                    "status",
                    "vulnerabilities"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ThemeVulnerabilityStatus"
                    },
                    {
                        "properties": {
                            "slug": {
                                "description": "Theme slug",
                                "type": "string",
                                "example": "twentytwentytwo"
                            },
                            "title": {
                                "description": "Theme title",
                                "type": "string",
                                "example": "Twenty Twenty-Two 1.2"
                            },
                            "version": {
                                "description": "Theme version",
                                "type": "string",
                                "example": "1.2"
                            },
                            "availableVersion": {
                                "description": "Theme version available for update",
                                "type": "string",
                                "example": "1.3",
                                "nullable": true
                            },
                            "status": {
                                "description": "Theme status",
                                "type": "boolean",
                                "example": "true"
                            },
                            "vulnerabilities": {
                                "description": "Theme vulnerabilities",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/VulnerabilityShort"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "VulnerabilityShort": {
                "required": [
                    "id",
                    "mitigations"
                ],
                "properties": {
                    "id": {
                        "description": "Vulnerability ID",
                        "type": "string",
                        "example": "CVE-PS-8019"
                    },
                    "mitigations": {
                        "description": "Vulnerability mitigation options",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VulnerabilityMitigation"
                        }
                    }
                },
                "type": "object"
            },
            "BackgroundTaskResponse": {
                "required": [
                    "id",
                    "code",
                    "title",
                    "status",
                    "progress",
                    "steps",
                    "publicParams",
                    "errors"
                ],
                "properties": {
                    "id": {
                        "description": "ID",
                        "type": "integer",
                        "example": "7"
                    },
                    "code": {
                        "description": "Code",
                        "type": "string",
                        "example": "task_install"
                    },
                    "title": {
                        "description": "Title",
                        "type": "string",
                        "example": "Installing WordPress"
                    },
                    "status": {
                        "description": "Status",
                        "type": "string",
                        "enum": [
                            "scheduling",
                            "not_started",
                            "started",
                            "running",
                            "canceled",
                            "error",
                            "done"
                        ],
                        "example": "running"
                    },
                    "progress": {
                        "description": "Progress",
                        "type": "number",
                        "example": "50"
                    },
                    "steps": {
                        "description": "Steps",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BackgroundTaskStepResponse"
                        }
                    },
                    "publicParams": {
                        "description": "Public parameters",
                        "type": "object",
                        "example": {
                            "installationId": 5
                        }
                    },
                    "errors": {
                        "description": "Errors",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "Failed to install WordPress"
                        }
                    }
                },
                "type": "object"
            },
            "BackgroundTaskStepResponse": {
                "required": [
                    "code",
                    "title",
                    "icon",
                    "progress",
                    "status",
                    "hint"
                ],
                "properties": {
                    "code": {
                        "description": "Code",
                        "type": "string",
                        "example": "creating-db"
                    },
                    "title": {
                        "description": "Title",
                        "type": "string",
                        "example": "Creating database"
                    },
                    "icon": {
                        "description": "Icon",
                        "type": "string",
                        "example": "/modules/wp-toolkit/images/install-create-database.png"
                    },
                    "progress": {
                        "description": "Progress",
                        "type": "number",
                        "example": "25"
                    },
                    "status": {
                        "description": "Status",
                        "type": "string",
                        "enum": [
                            "not_started",
                            "started",
                            "running",
                            "canceled",
                            "error",
                            "done"
                        ],
                        "example": "not_started"
                    },
                    "hint": {
                        "description": "Hint",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "BackgroundTaskWithUrlResponse": {
                "description": "Created",
                "required": [
                    "url",
                    "task"
                ],
                "properties": {
                    "url": {
                        "description": "Background task URL",
                        "type": "string",
                        "example": "/v1/background-tasks/task_install/7"
                    },
                    "task": {
                        "$ref": "#/components/schemas/BackgroundTaskResponse"
                    }
                },
                "type": "object"
            },
            "InstallationCloneDatabaseSettingsRequest": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "Database name",
                        "type": "string",
                        "example": "wp_qwerty"
                    },
                    "namePrefix": {
                        "description": "Database name prefix",
                        "type": "string",
                        "example": "wpt_"
                    },
                    "server": {
                        "description": "Database server ID (Plesk only)",
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "InstallationCloneDomainSettingsRequest": {
                "properties": {
                    "existing": {
                        "description": "Domain name",
                        "type": "string",
                        "example": "example.com"
                    },
                    "newSubdomain": {
                        "$ref": "#/components/schemas/InstallationCloneSubdomainSettingsRequest"
                    }
                },
                "type": "object"
            },
            "InstallationCloneRequest": {
                "required": [
                    "installationId",
                    "domain",
                    "database"
                ],
                "properties": {
                    "installationId": {
                        "description": "Installation ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "domain": {
                        "$ref": "#/components/schemas/InstallationCloneDomainSettingsRequest"
                    },
                    "installationPath": {
                        "description": "Installation path (relative to the root directory of the domain)",
                        "type": "string",
                        "example": "/staging"
                    },
                    "overwrite": {
                        "description": "Overwrite installation",
                        "type": "boolean",
                        "example": "false"
                    },
                    "database": {
                        "$ref": "#/components/schemas/InstallationCloneDatabaseSettingsRequest"
                    },
                    "showDomainOverviewLinkOnDone": {
                        "description": "Show overview link for background task",
                        "type": "boolean",
                        "example": "false"
                    }
                },
                "type": "object"
            },
            "InstallationCloneSubdomainSettingsRequest": {
                "required": [
                    "parentDomain",
                    "name"
                ],
                "properties": {
                    "parentDomain": {
                        "description": "Domain name",
                        "type": "string",
                        "example": "example.com"
                    },
                    "name": {
                        "description": "Subdomain name",
                        "type": "string",
                        "example": "staging"
                    }
                },
                "type": "object"
            },
            "FailedDependencyResponse": {
                "title": "FailedDependencyResponse",
                "required": [
                    "meta"
                ],
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object",
                "example": {
                    "meta": {
                        "status": 424,
                        "message": "Some requirements weren't met"
                    }
                }
            },
            "UnprocessableEntityResponse": {
                "title": "UnprocessableEntityResponse",
                "required": [
                    "meta",
                    "formErrors"
                ],
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "formErrors": {
                        "$ref": "#/components/schemas/FormErrors"
                    }
                },
                "type": "object",
                "example": {
                    "meta": {
                        "status": 422,
                        "message": "Unprocessable Entity"
                    },
                    "formErrors": {
                        "installationPath": {
                            "dirInvalidName": "Invalid target directory name."
                        },
                        "databaseSettings": {
                            "dbName": {
                                "invalidDbName": "Database name can contain only alphanumeric, dot, dash, and underscore symbols."
                            },
                            "prefixOfTables": {
                                "invalidTablePrefix": "Incorrect database table prefix. The database table prefix can contain only basic Latin letters, digits from 0 to 9, and the underscore character."
                            },
                            "userPassword": [
                                "The password should not contain the username.",
                                "Your password is not complex enough."
                            ]
                        }
                    }
                }
            },
            "InstallationBackupMeta": {
                "required": [
                    "value",
                    "meta"
                ],
                "properties": {
                    "meta": {
                        "type": "object"
                    },
                    "value": {
                        "required": [
                            "fileName",
                            "fileSize",
                            "createdAt",
                            "absoluteFilePath"
                        ],
                        "properties": {
                            "fileName": {
                                "required": [
                                    "value",
                                    "meta"
                                ],
                                "properties": {
                                    "value": {
                                        "description": "Archive file name",
                                        "type": "string",
                                        "example": "domain.tld__2023-05-31T15_56_29+0000.zip"
                                    },
                                    "meta": {
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "fileSize": {
                                "required": [
                                    "value",
                                    "meta"
                                ],
                                "properties": {
                                    "value": {
                                        "description": "Archive file size",
                                        "type": "integer",
                                        "example": "40285"
                                    },
                                    "meta": {
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "createdAt": {
                                "required": [
                                    "value",
                                    "meta"
                                ],
                                "properties": {
                                    "value": {
                                        "description": "Archive creation date",
                                        "type": "string",
                                        "example": "2023-05-31T14:20:30+00:00"
                                    },
                                    "meta": {
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "absoluteFilePath": {
                                "required": [
                                    "value",
                                    "meta"
                                ],
                                "properties": {
                                    "value": {
                                        "description": "Archive absolute file path",
                                        "type": "string",
                                        "example": "/path/to/file/archive"
                                    },
                                    "meta": {
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ClonePathValidatorRequest": {
                "required": [
                    "domain"
                ],
                "properties": {
                    "domain": {
                        "description": "Domain name",
                        "type": "string",
                        "example": "example.com"
                    },
                    "installationPath": {
                        "description": "Installation path of cloned WordPress site (relative to the root directory of the domain)",
                        "type": "string",
                        "example": "/wordpress-clone"
                    }
                },
                "type": "object"
            },
            "CloneStubDatabaseResponse": {
                "required": [
                    "value"
                ],
                "properties": {
                    "value": {
                        "required": [
                            "name",
                            "namePrefix",
                            "server"
                        ],
                        "properties": {
                            "name": {
                                "required": [
                                    "value",
                                    "meta"
                                ],
                                "properties": {
                                    "value": {
                                        "description": "Database name",
                                        "type": "string",
                                        "example": "wp_pfexo"
                                    },
                                    "meta": {
                                        "required": [
                                            "creationAllowed"
                                        ],
                                        "properties": {
                                            "creationAllowed": {
                                                "description": "Database creation allowed",
                                                "type": "boolean",
                                                "example": "true"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "namePrefix": {
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "description": "Database name prefix",
                                        "type": "string",
                                        "readOnly": true,
                                        "example": "wpt_"
                                    }
                                },
                                "type": "object"
                            },
                            "server": {
                                "required": [
                                    "value",
                                    "meta"
                                ],
                                "properties": {
                                    "value": {
                                        "description": "Database server ID (Plesk only)",
                                        "type": "string",
                                        "example": "1",
                                        "nullable": true
                                    },
                                    "meta": {
                                        "required": [
                                            "choices"
                                        ],
                                        "properties": {
                                            "choices": {
                                                "$ref": "#/components/schemas/ChoicesResponse"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CloneStubDomainResponse": {
                "required": [
                    "value"
                ],
                "properties": {
                    "value": {
                        "required": [
                            "existing",
                            "newSubdomain"
                        ],
                        "properties": {
                            "existing": {
                                "required": [
                                    "value",
                                    "meta"
                                ],
                                "properties": {
                                    "value": {
                                        "description": "Domain name",
                                        "type": "string",
                                        "example": "example.com"
                                    },
                                    "meta": {
                                        "required": [
                                            "choices",
                                            "documentRoot"
                                        ],
                                        "properties": {
                                            "choices": {
                                                "$ref": "#/components/schemas/ChoicesResponse"
                                            },
                                            "documentRoot": {
                                                "description": "Document root",
                                                "type": "string",
                                                "example": "/var/www/vhosts/example.com/httpdocs"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "newSubdomain": {
                                "$ref": "#/components/schemas/CloneStubNewSubdomainResponse"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CloneStubInstallationPathResponse": {
                "required": [
                    "value"
                ],
                "properties": {
                    "value": {
                        "description": "Installation path of cloned WordPress site (relative to the root directory of the domain)",
                        "type": "string",
                        "example": "wordpress-clone",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CloneStubMessagesResponse": {
                "properties": {
                    "multisiteOnSubdomainsUnix": {
                        "required": [
                            "text",
                            "intent"
                        ],
                        "properties": {
                            "text": {
                                "description": "Information about additional settings for a multisite WordPress installation on Linux OS.",
                                "type": "string",
                                "example": "This WordPress installation is a subdomain-based multisite installation. We will update (if needed) DNS zones and additional Apache or Nginx settings of target domain to use wildcard subdomains."
                            },
                            "intent": {
                                "description": "Message severity",
                                "type": "string",
                                "example": "warning"
                            }
                        },
                        "type": "object"
                    },
                    "multisiteOnSubdomainsWindows": {
                        "required": [
                            "text",
                            "intent"
                        ],
                        "properties": {
                            "text": {
                                "description": "Information about additional settings for a multisite WordPress installation on Windows OS.",
                                "type": "string",
                                "example": "This WordPress installation is a subdomain-based multisite installation. After the installation is cloned, you must configure the environment (IIS sites binding) manually."
                            },
                            "intent": {
                                "description": "Message severity",
                                "type": "string",
                                "example": "warning"
                            }
                        },
                        "type": "object"
                    },
                    "multisiteOnSubdirectoriesWindows": {
                        "required": [
                            "text",
                            "intent"
                        ],
                        "properties": {
                            "text": {
                                "description": "Information about advanced settings for a directory-based multisite WordPress installation on Windows OS.",
                                "type": "string",
                                "example": "This WordPress installation is a directory-based multisite installation. After the installation is cloned, you must configure the environment (IIS sites binding, web.config settings) manually."
                            },
                            "intent": {
                                "description": "Message severity",
                                "type": "string",
                                "example": "warning"
                            }
                        },
                        "type": "object"
                    },
                    "unableToCheckDatabase": {
                        "required": [
                            "text",
                            "intent"
                        ],
                        "properties": {
                            "text": {
                                "description": "Database issue warning",
                                "type": "string",
                                "example": "Warning: mysqlcheck utility has detected some issues with the database of the source WordPress installation. You can find the details below. Continue the cloning if you think these issues will not affect the cloning procedure."
                            },
                            "intent": {
                                "description": "Message severity",
                                "type": "string",
                                "example": "warning"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CloneStubNewSubdomainResponse": {
                "required": [
                    "value"
                ],
                "properties": {
                    "value": {
                        "required": [
                            "name",
                            "parentDomain"
                        ],
                        "properties": {
                            "name": {
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "description": "Subdomain name",
                                        "type": "string",
                                        "example": "staging",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            },
                            "parentDomain": {
                                "required": [
                                    "value",
                                    "meta"
                                ],
                                "properties": {
                                    "value": {
                                        "description": "Domain name",
                                        "type": "string",
                                        "example": "example.com",
                                        "nullable": true
                                    },
                                    "meta": {
                                        "required": [
                                            "choices"
                                        ],
                                        "properties": {
                                            "choices": {
                                                "$ref": "#/components/schemas/ChoicesResponse"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UpVoteForFeatureResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/UpVoteForFeatureFeatureListEnum"
                }
            },
            "UpVoteForFeatureFeatureListEnum": {
                "description": "Features list",
                "type": "string",
                "enum": [
                    "actionLogFeature",
                    "checkWordPressIntegrityFeature",
                    "hotlinkProtectionFeature",
                    "pluginsBlocklistFeature",
                    "smartPhpUpdateFeature",
                    "vulnerabilityFeature",
                    "wordpressPermalinkHandlingFeature"
                ]
            },
            "MaintenancePreviewRequest": {
                "required": [
                    "texts",
                    "timer",
                    "socialNetworks"
                ],
                "properties": {
                    "texts": {
                        "$ref": "#/components/schemas/MaintenanceTextsRequest"
                    },
                    "timer": {
                        "$ref": "#/components/schemas/MaintenanceTimerRequest"
                    },
                    "socialNetworks": {
                        "$ref": "#/components/schemas/MaintenanceSocialNetworksRequest"
                    }
                },
                "type": "object"
            },
            "MaintenanceSettingsRequest": {
                "required": [
                    "fullMode",
                    "texts",
                    "timer",
                    "socialNetworks"
                ],
                "properties": {
                    "fullMode": {
                        "description": "Allow access to WordPress admin dashboard when maintenance mode is enabled",
                        "type": "boolean",
                        "example": "true"
                    },
                    "texts": {
                        "$ref": "#/components/schemas/MaintenanceTextsRequest"
                    },
                    "timer": {
                        "$ref": "#/components/schemas/MaintenanceTimerRequest"
                    },
                    "socialNetworks": {
                        "$ref": "#/components/schemas/MaintenanceSocialNetworksRequest"
                    }
                },
                "type": "object"
            },
            "MaintenanceSocialNetworksRequest": {
                "required": [
                    "facebook",
                    "twitter",
                    "instagram"
                ],
                "properties": {
                    "facebook": {
                        "description": "Link to Facebook",
                        "type": "string",
                        "example": "https://www.facebook.com/"
                    },
                    "twitter": {
                        "description": "Link to Twitter",
                        "type": "string",
                        "example": "https://twitter.com/"
                    },
                    "instagram": {
                        "description": "Link to Instagram",
                        "type": "string",
                        "example": "https://instagram.com"
                    }
                },
                "type": "object"
            },
            "MaintenanceTextsRequest": {
                "required": [
                    "title",
                    "header",
                    "subheader"
                ],
                "properties": {
                    "title": {
                        "description": "Browser page title",
                        "type": "string",
                        "example": "Scheduled Maintenance"
                    },
                    "header": {
                        "description": "Text block 1 (bigger font)",
                        "type": "string",
                        "example": "The website is undergoing scheduled maintenance."
                    },
                    "subheader": {
                        "description": "Text block 2 (smaller font)",
                        "type": "string",
                        "example": "Sorry for the inconvenience. Come back a bit later, we will be ready soon!"
                    }
                },
                "type": "object"
            },
            "MaintenanceTimerRequest": {
                "required": [
                    "enabled",
                    "days",
                    "hours",
                    "minutes"
                ],
                "properties": {
                    "enabled": {
                        "description": "Enable timer",
                        "type": "boolean",
                        "example": "false"
                    },
                    "days": {
                        "description": "Remaining days",
                        "type": "number",
                        "example": "5"
                    },
                    "hours": {
                        "description": "Remaining hours",
                        "type": "number",
                        "example": "12"
                    },
                    "minutes": {
                        "description": "Remaining minutes",
                        "type": "number",
                        "example": "30"
                    }
                },
                "type": "object"
            },
            "SmartPhpUpdateCloneInstallation": {
                "required": [
                    "id",
                    "url"
                ],
                "properties": {
                    "id": {
                        "description": "Installation ID of target WordPress site",
                        "type": "integer",
                        "example": "2"
                    },
                    "url": {
                        "description": "URL of target WordPress site",
                        "type": "string",
                        "example": "https://thirsty-year.xxx-xxx-xxx-xxx.plesk.page"
                    }
                },
                "type": "object"
            },
            "SmartPhpUpdateResult": {
                "title": "SmartPhpUpdateResult",
                "required": [
                    "id",
                    "displayTitle",
                    "url",
                    "timestamp",
                    "phpUpdateStatus",
                    "phpHandler",
                    "targetPhpHandler",
                    "clone",
                    "details",
                    "createdAt"
                ],
                "properties": {
                    "id": {
                        "description": "Installation ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "displayTitle": {
                        "description": "WordPress site display title",
                        "type": "string",
                        "example": "example.com"
                    },
                    "url": {
                        "description": "WordPress site URL",
                        "type": "string",
                        "example": "https://example.com"
                    },
                    "timestamp": {
                        "description": "Time",
                        "type": "integer",
                        "example": "1655285582"
                    },
                    "phpUpdateStatus": {
                        "$ref": "#/components/schemas/InstallationSmartPhpUpdatesTaskStatusEnum"
                    },
                    "phpHandler": {
                        "$ref": "#/components/schemas/PhpHandler"
                    },
                    "targetPhpHandler": {
                        "$ref": "#/components/schemas/PhpHandler"
                    },
                    "clone": {
                        "$ref": "#/components/schemas/SmartPhpUpdateCloneInstallation"
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SmartUpdatePageDetails"
                        }
                    },
                    "createdAt": {
                        "description": "Date and time when Smart PHP Update result was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-01-01T00:00:00+00:00"
                    }
                },
                "type": "object"
            },
            "SmartUpdateCloneInstallation": {
                "required": [
                    "id",
                    "url"
                ],
                "properties": {
                    "id": {
                        "description": "Installation ID of target WordPress site",
                        "type": "integer",
                        "example": "2"
                    },
                    "url": {
                        "description": "URL of target WordPress site",
                        "type": "string",
                        "example": "https://thirsty-year.xxx-xxx-xxx-xxx.plesk.page"
                    }
                },
                "type": "object"
            },
            "SmartUpdatePageDetails": {
                "required": [
                    "pageUrl",
                    "before",
                    "after"
                ],
                "properties": {
                    "pageUrl": {
                        "description": "Page URL",
                        "type": "string",
                        "example": "example.com?p=1"
                    },
                    "before": {
                        "$ref": "#/components/schemas/SmartUpdatePageStatus"
                    },
                    "after": {
                        "$ref": "#/components/schemas/SmartUpdatePageStatus"
                    }
                },
                "type": "object"
            },
            "SmartUpdatePageStatus": {
                "required": [
                    "httpStatus",
                    "pageTitle",
                    "responseIncorrectness",
                    "phpErrors",
                    "phpNotices",
                    "phpWarnings",
                    "shortcodes"
                ],
                "properties": {
                    "httpStatus": {
                        "description": "HTTP status",
                        "type": "integer",
                        "example": "200"
                    },
                    "pageTitle": {
                        "description": "Page title",
                        "type": "string",
                        "example": "Hello world! – My Blog"
                    },
                    "responseIncorrectness": {
                        "description": "HTTP response code changed",
                        "type": "boolean",
                        "example": "false"
                    },
                    "pageFetchingErrorCode": {
                        "description": "Error code",
                        "type": "integer",
                        "nullable": true
                    },
                    "phpErrors": {
                        "description": "PHP errors",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "phpNotices": {
                        "description": "PHP notices",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "phpWarnings": {
                        "description": "PHP warnings",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "shortcodes": {
                        "description": "Broken shortcodes",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "SmartUpdateResult": {
                "title": "SmartUpdateResult",
                "required": [
                    "id",
                    "displayTitle",
                    "taskStatus",
                    "clone",
                    "details",
                    "createdAt"
                ],
                "properties": {
                    "id": {
                        "description": "Installation ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "displayTitle": {
                        "description": "WordPress site display title",
                        "type": "string",
                        "example": "example.com"
                    },
                    "taskStatus": {
                        "description": "Current status of Smart Update task",
                        "type": "string",
                        "enum": [
                            "started",
                            "success",
                            "warning",
                            "failed",
                            "notExist"
                        ]
                    },
                    "clone": {
                        "$ref": "#/components/schemas/SmartUpdateCloneInstallation"
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SmartUpdatePageDetails"
                        }
                    },
                    "createdAt": {
                        "description": "Date and time when Smart Update result was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-01-01T00:00:00+00:00",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "VirtualPatchesActivatorRequest": {
                "properties": {
                    "subscriptionGuid": {
                        "type": "string",
                        "example": "33d5430e-febd-433d-99f7-9d1dcefbbfec"
                    }
                },
                "type": "object"
            },
            "VirtualPatchesProtectorRequest": {
                "required": [
                    "installationsIds",
                    "status"
                ],
                "properties": {
                    "installationsIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "example": "1"
                        },
                        "minItems": 1
                    },
                    "status": {
                        "type": "boolean",
                        "example": "true"
                    },
                    "skipBrokenInstallations": {
                        "description": "Ignore broken installations (by default request fails on them)",
                        "type": "boolean",
                        "example": "false"
                    },
                    "skipInfectedInstallations": {
                        "description": "Ignore quarantined installations (by default request fails on them)",
                        "type": "boolean",
                        "example": "false"
                    },
                    "skipUnsupportedInstallations": {
                        "description": "Ignore unsupported installations (by default request fails on them)",
                        "type": "boolean",
                        "example": "false"
                    }
                },
                "type": "object"
            },
            "VirtualPatchesPurchaseSessionData": {
                "required": [
                    "guid",
                    "purchaseUrl"
                ],
                "properties": {
                    "guid": {
                        "description": "Virtual patches subscription GUID",
                        "type": "string",
                        "example": "33d5430e-febd-433d-99f7-9d1dcefbbfec"
                    },
                    "purchaseUrl": {
                        "description": "Virtual patches subscription purchase URL",
                        "type": "string",
                        "example": "https://store.tld?param1=param1data"
                    }
                },
                "type": "object"
            },
            "VirtualPatchesSubscriptionCustomerPortalUrl": {
                "required": [
                    "customerPortalUrl"
                ],
                "properties": {
                    "customerPortalUrl": {
                        "description": "Virtual patches subscription purchase URL",
                        "type": "string",
                        "example": "https://store.tld/customer-portal?param1=param1data"
                    }
                },
                "type": "object"
            },
            "VirtualPatchesSubscriptionInfo": {
                "required": [
                    "id",
                    "startDate",
                    "endDate",
                    "cancellationDate",
                    "status"
                ],
                "properties": {
                    "id": {
                        "description": "Virtual patches subscription ID",
                        "type": "string",
                        "example": "33d5430e-febd-433d-99f7-9d1dcefbbfec"
                    },
                    "startDate": {
                        "description": "Virtual patches subscription start date",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T01:02:03+00:00"
                    },
                    "endDate": {
                        "description": "Virtual patches subscription end date",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T01:02:03+00:00"
                    },
                    "cancellationDate": {
                        "description": "Virtual patches subscription cancellation date",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T01:02:03+00:00",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/InstallationVirtualPatchesSubscriptionStatusEnum"
                    }
                },
                "type": "object"
            },
            "WordPressDebugSettingsRequest": {
                "properties": {
                    "wpDebug": {
                        "description": "WP_DEBUG setting",
                        "type": "boolean",
                        "example": "true"
                    },
                    "wpDebugLog": {
                        "description": "WP_DEBUG_LOG setting",
                        "type": "boolean",
                        "example": "true"
                    },
                    "wpDebugDisplay": {
                        "description": "WP_DEBUG_DISPLAY setting",
                        "type": "boolean",
                        "example": "true"
                    },
                    "scriptDebug": {
                        "description": "SCRIPT_DEBUG setting",
                        "type": "boolean",
                        "example": "true"
                    },
                    "saveQueries": {
                        "description": "SAVEQUERIES setting",
                        "type": "boolean",
                        "example": "true"
                    }
                },
                "type": "object"
            },
            "CloseGlobalAlertRequest": {
                "required": [
                    "alertId"
                ],
                "properties": {
                    "alertId": {
                        "description": "ID of alert to close",
                        "type": "string",
                        "example": "alert-cpanel-cloud-linux-6-deprecated"
                    }
                },
                "type": "object"
            },
            "BasicDeleteRequest": {
                "description": "Basic delete request",
                "required": [
                    "delete"
                ],
                "properties": {
                    "delete": {
                        "description": "To protect against CSRF attacks the WPT API requires header Content-Type: application/json for\nrequest POST/PUT/PATCH/DELETE. On front-end side we use axios, and it automatically\nremoves the Content-Type header for requests when the body is not set.\nThis BasicDeleteRequest is used for all DELETE requests to workaround this,\nand the BasicConfirmationRequest is used for POST requests (e.g. apply SU results and SU PHP results).",
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "BasicConfirmationRequest": {
                "description": "Basic confirmation request",
                "required": [
                    "confirm"
                ],
                "properties": {
                    "confirm": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "InstallationAdminSettingsRequest": {
                "properties": {
                    "email": {
                        "description": "Site admin e-mail",
                        "type": "string",
                        "example": "admin@example.com"
                    },
                    "login": {
                        "description": "Site admin username",
                        "type": "string",
                        "example": "admin_8sh2ksbu"
                    },
                    "password": {
                        "description": "Site admin password",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InstallationAssetInstallRequest": {
                "description": "Install an asset from WordPress repository",
                "required": [
                    "slug",
                    "status"
                ],
                "properties": {
                    "slug": {
                        "description": "Asset slug",
                        "type": "string"
                    },
                    "status": {
                        "description": "Activate or not the asset after upload",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "InstallationAssetsUpdatesRequest": {
                "description": "List of assets plugins with autoUpdate and status settings",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/InstallationAssetUpdateRequest"
                },
                "minItems": 1
            },
            "InstallationAssetUpdateRequest": {
                "required": [
                    "slug"
                ],
                "properties": {
                    "slug": {
                        "description": "Asset slug",
                        "type": "string"
                    },
                    "autoUpdates": {
                        "description": "New autoUpdate value",
                        "type": "boolean"
                    },
                    "status": {
                        "description": "New status value",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "InstallationAssetUploadRequest": {
                "description": "Upload an asset file",
                "required": [
                    "file",
                    "status"
                ],
                "properties": {
                    "file": {
                        "description": "File name",
                        "type": "string",
                        "format": "binary"
                    },
                    "status": {
                        "description": "Activate or not the asset after upload",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "InstallationsAutoUpdateRequest": {
                "required": [
                    "installationsIds",
                    "autoUpdate"
                ],
                "properties": {
                    "installationsIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "example": "1"
                        },
                        "minItems": 1
                    },
                    "autoUpdate": {
                        "$ref": "#/components/schemas/InstallationAutoUpdateRequest"
                    }
                },
                "type": "object"
            },
            "InstallationAutoUpdateRequest": {
                "properties": {
                    "core": {
                        "description": "WordPress core autoupdate settings",
                        "type": "string",
                        "enum": [
                            "disabled",
                            "minor",
                            "major"
                        ],
                        "example": "major"
                    },
                    "plugins": {
                        "$ref": "#/components/schemas/InstallationPluginsSettingsRequest"
                    },
                    "themes": {
                        "$ref": "#/components/schemas/InstallationThemesSettingsRequest"
                    },
                    "safeUpdate": {
                        "description": "Enable creation of backup during updating",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "InstallationDatabaseSettingsRequest": {
                "properties": {
                    "name": {
                        "description": "Database name",
                        "type": "string",
                        "example": "wp_im7zx"
                    },
                    "server": {
                        "description": "Database server ID (Plesk only)",
                        "type": "string",
                        "example": "1"
                    },
                    "userName": {
                        "description": "Database user name",
                        "type": "string",
                        "example": "wp_9aupk"
                    },
                    "userPassword": {
                        "description": "Database user password",
                        "type": "string"
                    },
                    "tablePrefix": {
                        "description": "Database table prefix",
                        "type": "string",
                        "example": "vTowKyf8_"
                    }
                },
                "type": "object"
            },
            "InstallationPluginsSettingsRequest": {
                "properties": {
                    "forceUpdates": {
                        "description": "Update plugins automatically",
                        "type": "boolean",
                        "example": "false"
                    },
                    "newlyInstalledUpdates": {
                        "description": "Enable autoupdates by default for new plugins",
                        "type": "boolean",
                        "example": "false"
                    },
                    "updateVulnerable": {
                        "description": "Autoupdate vulnerable plugins",
                        "type": "boolean",
                        "example": "false"
                    },
                    "deactivateVulnerable": {
                        "description": "Deactivate vulnerable plugins",
                        "type": "boolean",
                        "example": "false"
                    }
                },
                "type": "object"
            },
            "InstallationRequest": {
                "required": [
                    "domain"
                ],
                "properties": {
                    "domain": {
                        "description": "Domain name",
                        "type": "string",
                        "example": "example.com"
                    },
                    "installationPath": {
                        "description": "Installation path relative to the root directory of the domain",
                        "type": "string",
                        "example": "/wordpress-blog"
                    },
                    "language": {
                        "description": "Website language",
                        "type": "string",
                        "example": "en_US"
                    },
                    "overwrite": {
                        "description": "Overwrite installation",
                        "type": "boolean",
                        "example": "false"
                    },
                    "protocol": {
                        "description": "Communication protocol",
                        "type": "string",
                        "enum": [
                            "http",
                            "https"
                        ],
                        "example": "https"
                    },
                    "set": {
                        "description": "Set ID",
                        "type": "integer",
                        "example": "3"
                    },
                    "title": {
                        "description": "Website title",
                        "type": "string",
                        "example": "Bloggers Unite"
                    },
                    "version": {
                        "description": "WordPress version",
                        "type": "string",
                        "example": "5.8.3"
                    },
                    "admin": {
                        "$ref": "#/components/schemas/InstallationAdminSettingsRequest"
                    },
                    "database": {
                        "$ref": "#/components/schemas/InstallationDatabaseSettingsRequest"
                    },
                    "autoUpdate": {
                        "$ref": "#/components/schemas/InstallationAutoUpdateRequest"
                    },
                    "showDomainOverviewLinkOnDone": {
                        "description": "Show domain overview link in background task",
                        "type": "boolean",
                        "example": "false"
                    }
                },
                "type": "object"
            },
            "InstallationSecurityPoliciesCoreSettings": {
                "required": [
                    "updateVulnerable",
                    "applyVirtualPatches"
                ],
                "properties": {
                    "updateVulnerable": {
                        "description": "Update vulnerable WordPress core",
                        "type": "boolean",
                        "example": "false"
                    },
                    "applyVirtualPatches": {
                        "description": "Apply virtual patches for WordPress core",
                        "type": "boolean",
                        "example": "false"
                    }
                },
                "type": "object"
            },
            "InstallationSecurityPoliciesPluginsSettings": {
                "required": [
                    "updateVulnerable",
                    "deactivateVulnerable",
                    "applyVirtualPatches"
                ],
                "properties": {
                    "updateVulnerable": {
                        "description": "Autoupdate vulnerable plugins",
                        "type": "boolean",
                        "example": "false"
                    },
                    "deactivateVulnerable": {
                        "description": "Deactivate vulnerable plugins",
                        "type": "boolean",
                        "example": "false"
                    },
                    "applyVirtualPatches": {
                        "description": "Apply virtual patches for vulnerable plugins",
                        "type": "boolean",
                        "example": "false"
                    }
                },
                "type": "object"
            },
            "InstallationSecurityPoliciesThemesSettings": {
                "required": [
                    "updateVulnerable",
                    "applyVirtualPatches"
                ],
                "properties": {
                    "updateVulnerable": {
                        "description": "Autoupdate vulnerable themes",
                        "type": "boolean",
                        "example": "false"
                    },
                    "applyVirtualPatches": {
                        "description": "Apply virtual patches for vulnerable plugins",
                        "type": "boolean",
                        "example": "false"
                    }
                },
                "type": "object"
            },
            "InstallationSecurityPoliciesUpdateRequest": {
                "properties": {
                    "core": {
                        "$ref": "#/components/schemas/InstallationSecurityPoliciesCoreSettings"
                    },
                    "plugins": {
                        "$ref": "#/components/schemas/InstallationSecurityPoliciesPluginsSettings"
                    },
                    "themes": {
                        "$ref": "#/components/schemas/InstallationSecurityPoliciesThemesSettings"
                    }
                },
                "type": "object"
            },
            "InstallationThemesSettingsRequest": {
                "properties": {
                    "forceUpdates": {
                        "description": "Update themes automatically",
                        "type": "boolean",
                        "example": "false"
                    },
                    "newlyInstalledUpdates": {
                        "description": "Enable autoupdates by default for new themes",
                        "type": "boolean",
                        "example": "false"
                    },
                    "updateVulnerable": {
                        "description": "Autoupdate vulnerable themes",
                        "type": "boolean",
                        "example": "false"
                    }
                },
                "type": "object"
            },
            "InstallationsAutoUpdateListRequest": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/InstallationsAutoUpdateListItemRequest"
                }
            },
            "InstallationsAutoUpdateListItemRequest": {
                "required": [
                    "installationsIds",
                    "autoUpdate"
                ],
                "properties": {
                    "installationsIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "example": "1"
                        },
                        "minItems": 1
                    },
                    "autoUpdate": {
                        "$ref": "#/components/schemas/InstallationAutoUpdateRequest"
                    }
                },
                "type": "object"
            },
            "InstallationAutoUpdateResponse": {
                "required": [
                    "available",
                    "safeUpdate",
                    "core",
                    "plugins",
                    "themes"
                ],
                "properties": {
                    "available": {
                        "description": "Availability of autoupdates feature",
                        "type": "boolean",
                        "example": "true"
                    },
                    "safeUpdate": {
                        "description": "Enable creation of backup during updating",
                        "type": "boolean",
                        "example": "true"
                    },
                    "core": {
                        "description": "Update WordPress core automatically",
                        "enum": [
                            "disabled",
                            "minor",
                            "major"
                        ],
                        "example": "major"
                    },
                    "plugins": {
                        "$ref": "#/components/schemas/InstallationPluginsSettingsResponse"
                    },
                    "themes": {
                        "$ref": "#/components/schemas/InstallationThemesSettingsResponse"
                    }
                },
                "type": "object"
            },
            "InstallationAutoUpdateWithIdResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/InstallationAutoUpdateResponse"
                    },
                    {
                        "required": [
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "description": "Installation ID",
                                "type": "number",
                                "example": "1"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "InstallationCoreSecurityPolicies": {
                "description": "Core security policies settings",
                "required": [
                    "updateVulnerable",
                    "applyVirtualPatches"
                ],
                "properties": {
                    "updateVulnerable": {
                        "description": "Update WordPress core automatically",
                        "type": "boolean",
                        "example": "false"
                    },
                    "applyVirtualPatches": {
                        "description": "Apply virtual patches for WordPress core",
                        "type": "boolean",
                        "example": "false"
                    }
                },
                "type": "object"
            },
            "InstallationLoginResponse": {
                "required": [
                    "link"
                ],
                "properties": {
                    "link": {
                        "description": "Login link to WordPress admin area",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InstallationPluginsSecurityPolicies": {
                "description": "Plugin security policies settings",
                "required": [
                    "updateVulnerable",
                    "deactivateVulnerable",
                    "applyVirtualPatches"
                ],
                "properties": {
                    "updateVulnerable": {
                        "description": "Autoupdate vulnerable plugins",
                        "type": "boolean",
                        "example": "false"
                    },
                    "deactivateVulnerable": {
                        "description": "Deactivate vulnerable plugins",
                        "type": "boolean",
                        "example": "false"
                    },
                    "applyVirtualPatches": {
                        "description": "Apply virtual patches for vulnerable plugins",
                        "type": "boolean",
                        "example": "false"
                    }
                },
                "type": "object"
            },
            "InstallationPluginsSettingsResponse": {
                "description": "Plugin autoupdate settings",
                "required": [
                    "forceUpdates",
                    "newlyInstalledUpdates",
                    "updateVulnerable",
                    "deactivateVulnerable"
                ],
                "properties": {
                    "forceUpdates": {
                        "description": "Update plugins automatically",
                        "type": "boolean",
                        "example": "false"
                    },
                    "newlyInstalledUpdates": {
                        "description": "Enable autoupdates by default for new plugins",
                        "type": "boolean",
                        "example": "false"
                    },
                    "updateVulnerable": {
                        "description": "Autoupdate vulnerable plugins",
                        "type": "boolean",
                        "example": "false"
                    },
                    "deactivateVulnerable": {
                        "description": "Deactivate vulnerable plugins",
                        "type": "boolean",
                        "example": "false"
                    }
                },
                "type": "object"
            },
            "InstallationSecurityPoliciesResponse": {
                "required": [
                    "core",
                    "plugins",
                    "themes"
                ],
                "properties": {
                    "core": {
                        "$ref": "#/components/schemas/InstallationCoreSecurityPolicies"
                    },
                    "plugins": {
                        "$ref": "#/components/schemas/InstallationPluginsSettingsResponse"
                    },
                    "themes": {
                        "$ref": "#/components/schemas/InstallationThemesSettingsResponse"
                    }
                },
                "type": "object"
            },
            "InstallationThemesSecurityPolicies": {
                "description": "Theme security policies settings",
                "required": [
                    "updateVulnerable",
                    "applyVirtualPatches"
                ],
                "properties": {
                    "updateVulnerable": {
                        "description": "Update vulnerable themes",
                        "type": "boolean",
                        "example": "false"
                    },
                    "applyVirtualPatches": {
                        "description": "Apply virtual patches for vulnerable themes",
                        "type": "boolean",
                        "example": "false"
                    }
                },
                "type": "object"
            },
            "InstallationThemesSettingsResponse": {
                "description": "Theme autoupdate settings",
                "required": [
                    "forceUpdates",
                    "newlyInstalledUpdates",
                    "updateVulnerable"
                ],
                "properties": {
                    "forceUpdates": {
                        "description": "Update themes automatically",
                        "type": "boolean",
                        "example": "false"
                    },
                    "newlyInstalledUpdates": {
                        "description": "Enable autoupdates by default for new themes",
                        "type": "boolean",
                        "example": "false"
                    },
                    "updateVulnerable": {
                        "description": "Autoupdate vulnerable themes",
                        "type": "boolean",
                        "example": "false"
                    }
                },
                "type": "object"
            },
            "Installation": {
                "required": [
                    "id",
                    "title",
                    "url",
                    "version",
                    "path",
                    "labels",
                    "displayTitle",
                    "server",
                    "errorMessage",
                    "installationType",
                    "domain",
                    "screenshot",
                    "owner",
                    "features",
                    "status"
                ],
                "properties": {
                    "id": {
                        "description": "Installation ID in WP Toolkit database",
                        "type": "integer",
                        "example": "10"
                    },
                    "title": {
                        "description": "WordPress site title",
                        "type": "string",
                        "example": "Just Deploy It!"
                    },
                    "url": {
                        "description": "WordPress site URL",
                        "type": "string",
                        "example": "https://www.domain.tld"
                    },
                    "version": {
                        "description": "WordPress version",
                        "type": "string",
                        "example": "5.1.1"
                    },
                    "path": {
                        "description": "Local path to the WordPress site",
                        "type": "string",
                        "example": "/var/www/vhosts/domain.tld/httpdocs"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InstallationLabel"
                        }
                    },
                    "displayTitle": {
                        "description": "WP Toolkit installation display title",
                        "type": "string",
                        "example": "www.domain.tld"
                    },
                    "server": {
                        "description": "Server name for remote installations",
                        "type": "string",
                        "example": "remote-server.tld",
                        "nullable": true
                    },
                    "errorMessage": {
                        "description": "Error message",
                        "type": "string",
                        "example": "Error: Error establishing a database connection.\\n",
                        "nullable": true
                    },
                    "installationType": {
                        "description": "WordPress installation type",
                        "type": "string",
                        "enum": [
                            "localPleskLinux",
                            "localPleskWindows",
                            "localCpanel",
                            "remoteCpanel",
                            "managedByPlugin",
                            "remoteGeneric"
                        ],
                        "nullable": true
                    },
                    "domain": {
                        "$ref": "#/components/schemas/InstallationDomain"
                    },
                    "screenshot": {
                        "$ref": "#/components/schemas/InstallationScreenshot"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/InstallationOwner"
                    },
                    "features": {
                        "$ref": "#/components/schemas/InstallationFeatures"
                    },
                    "status": {
                        "$ref": "#/components/schemas/InstallationStatus"
                    }
                },
                "type": "object"
            },
            "InstallationActionLog": {
                "required": [
                    "available"
                ],
                "properties": {
                    "available": {
                        "description": "Availability of action log feature",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "InstallationPlugin": {
                "required": [
                    "slug",
                    "title",
                    "description",
                    "version",
                    "availableVersion",
                    "status",
                    "mustUse",
                    "autoUpdates",
                    "autoUpdatesAvailable",
                    "vulnerable"
                ],
                "properties": {
                    "slug": {
                        "description": "Plugin slug",
                        "type": "string",
                        "example": "super-awesome-plugin"
                    },
                    "title": {
                        "description": "Plugin title",
                        "type": "string",
                        "example": "Super awesome plugin"
                    },
                    "description": {
                        "description": "Plugin description",
                        "type": "string",
                        "example": "Used by millions... It makes your site awesome..."
                    },
                    "version": {
                        "description": "Current plugin version",
                        "type": "string",
                        "example": "1.0.1"
                    },
                    "availableVersion": {
                        "description": "Plugin version available for update",
                        "type": "string",
                        "example": "1.1.0",
                        "nullable": true
                    },
                    "status": {
                        "description": "Plugin status (active or not)",
                        "type": "boolean",
                        "example": true
                    },
                    "mustUse": {
                        "description": "Plugin is must-use (if true)",
                        "type": "boolean",
                        "example": false
                    },
                    "autoUpdates": {
                        "description": "Plugin autoupdate status",
                        "type": "boolean",
                        "example": true
                    },
                    "autoUpdatesAvailable": {
                        "description": "Plugin autoupdate management available",
                        "type": "boolean",
                        "example": true
                    },
                    "vulnerable": {
                        "description": "Plugin vulnerability status",
                        "type": "boolean",
                        "example": false
                    },
                    "changeLogUrl": {
                        "description": "Changelog URL (if update is available)",
                        "type": "string",
                        "example": "https://www.wordpress.org/plugins/super-awesome-plugin",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "InstallationTheme": {
                "required": [
                    "slug",
                    "title",
                    "description",
                    "version",
                    "availableVersion",
                    "status",
                    "autoUpdates",
                    "autoUpdatesAvailable",
                    "vulnerable"
                ],
                "properties": {
                    "slug": {
                        "description": "Theme slug",
                        "type": "string",
                        "example": "super-awesome-theme"
                    },
                    "title": {
                        "description": "Theme title",
                        "type": "string",
                        "example": "Super awesome theme"
                    },
                    "description": {
                        "description": "Theme description",
                        "type": "string",
                        "example": "Used by millions... It makes your site awesome..."
                    },
                    "version": {
                        "description": "Current theme version",
                        "type": "string",
                        "example": "1.0.1"
                    },
                    "availableVersion": {
                        "description": "Theme version available for update",
                        "type": "string",
                        "example": "1.1.0",
                        "nullable": true
                    },
                    "status": {
                        "description": "Theme status (active or not)",
                        "type": "boolean",
                        "example": true
                    },
                    "autoUpdates": {
                        "description": "Theme autoupdate status",
                        "type": "boolean",
                        "example": true
                    },
                    "autoUpdatesAvailable": {
                        "description": "Theme autoupdate management available",
                        "type": "boolean",
                        "example": true
                    },
                    "vulnerable": {
                        "description": "Theme vulnerability status",
                        "type": "boolean",
                        "example": false
                    },
                    "changeLogUrl": {
                        "description": "Changelog URL (if update is available)",
                        "type": "string",
                        "example": "https://www.wordpress.org/themes/super-awesome-theme",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "InstallationBackupInfo": {
                "required": [
                    "fileName",
                    "fileSize",
                    "createdAt",
                    "absoluteFilePath"
                ],
                "properties": {
                    "fileName": {
                        "description": "Backup file name",
                        "type": "string",
                        "example": "example.com___2020-08-21T23:09:56+07:00.tar.gz"
                    },
                    "fileSize": {
                        "description": "Backup file size",
                        "type": "number",
                        "example": "26214400"
                    },
                    "createdAt": {
                        "description": "Date of backup creation",
                        "type": "string",
                        "example": "2020-08-21T16:09:56+00:00"
                    },
                    "absoluteFilePath": {
                        "description": "Archive absolute file path",
                        "type": "string",
                        "example": "/path/to/file/archive"
                    }
                },
                "type": "object"
            },
            "InstallationBackups": {
                "required": [
                    "panelBackupsAvailable",
                    "wptBackupsAvailable",
                    "backupManagerUrl"
                ],
                "properties": {
                    "panelBackupsAvailable": {
                        "description": "Availability of panel backup feature",
                        "type": "boolean"
                    },
                    "wptBackupsAvailable": {
                        "description": "Availability of WP Toolkit backup feature",
                        "type": "boolean"
                    },
                    "backupManagerUrl": {
                        "description": "URL to domain backup manager",
                        "type": "string",
                        "example": "/admin/subscription/login/id/1/?pageUrl=%2Fsmb%2Fbackup%2Flist%2FdomainId%2F1",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "InstallationClone": {
                "required": [
                    "applicable",
                    "available"
                ],
                "properties": {
                    "applicable": {
                        "description": "Availability of cloning feature in the license",
                        "type": "boolean"
                    },
                    "available": {
                        "description": "Permission to use cloning feature by the server administrator",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "InstallationCopyData": {
                "required": [
                    "applicable",
                    "available"
                ],
                "properties": {
                    "applicable": {
                        "description": "Availability of data copy feature in the license",
                        "type": "boolean"
                    },
                    "available": {
                        "description": "Permission to use data copy feature by the server administrator",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "InstallationCredentials": {
                "required": [
                    "available"
                ],
                "properties": {
                    "available": {
                        "description": "Availability of login to WordPress feature",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "InstallationDebug": {
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "description": "WordPress debug feature status",
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "InstallationDomain": {
                "required": [
                    "name",
                    "url",
                    "sslRedirectEnabled",
                    "installationsLimit",
                    "installationsCount",
                    "ssl"
                ],
                "properties": {
                    "name": {
                        "description": "Domain name",
                        "type": "string",
                        "example": "domain.tld"
                    },
                    "url": {
                        "description": "URL to domain management page in panel",
                        "type": "string",
                        "example": "/admin/subscription/login/id/63?pageUrl=/smb/web/overview/id/63/type/domain",
                        "nullable": true
                    },
                    "sslRedirectEnabled": {
                        "description": "SSL redirect status on domain",
                        "type": "boolean",
                        "nullable": true
                    },
                    "installationsLimit": {
                        "description": "Active limit of WordPress sites for a domain",
                        "type": "integer",
                        "example": "5",
                        "nullable": true
                    },
                    "installationsCount": {
                        "description": "Count of installed WordPress sites on a domain",
                        "type": "integer",
                        "example": "3",
                        "nullable": true
                    },
                    "ssl": {
                        "$ref": "#/components/schemas/InstallationSsl"
                    }
                },
                "type": "object",
                "nullable": true
            },
            "InstallationFeatures": {
                "required": [
                    "wpCronTakeover",
                    "updates",
                    "restorePoint",
                    "maintenance",
                    "hotlinkProtection",
                    "security",
                    "nginxCaching",
                    "indexing",
                    "debug",
                    "passwordProtection",
                    "vulnerability",
                    "multipleSitesManagement",
                    "clone",
                    "copyData",
                    "credentials",
                    "backups",
                    "fileManager",
                    "actionLog",
                    "remoteManagement",
                    "synchronizeSiteUrl",
                    "malwareScan",
                    "php",
                    "integrity",
                    "pluginsBlockList",
                    "virtualPatches",
                    "vulnerabilityFiltering"
                ],
                "properties": {
                    "wpCronTakeover": {
                        "$ref": "#/components/schemas/InstallationWpCron"
                    },
                    "updates": {
                        "$ref": "#/components/schemas/InstallationUpdates"
                    },
                    "restorePoint": {
                        "$ref": "#/components/schemas/InstallationRestorePoint"
                    },
                    "maintenance": {
                        "$ref": "#/components/schemas/InstallationMaintenance"
                    },
                    "hotlinkProtection": {
                        "$ref": "#/components/schemas/InstallationHotlinkProtection"
                    },
                    "security": {
                        "$ref": "#/components/schemas/InstallationSecurity"
                    },
                    "nginxCaching": {
                        "$ref": "#/components/schemas/InstallationNginxCaching"
                    },
                    "indexing": {
                        "$ref": "#/components/schemas/InstallationIndexing"
                    },
                    "debug": {
                        "$ref": "#/components/schemas/InstallationDebug"
                    },
                    "passwordProtection": {
                        "$ref": "#/components/schemas/InstallationPasswordProtection"
                    },
                    "vulnerability": {
                        "$ref": "#/components/schemas/InstallationVulnerability"
                    },
                    "multipleSitesManagement": {
                        "$ref": "#/components/schemas/InstallationMultipleSitesManagement"
                    },
                    "clone": {
                        "$ref": "#/components/schemas/InstallationClone"
                    },
                    "copyData": {
                        "$ref": "#/components/schemas/InstallationCopyData"
                    },
                    "credentials": {
                        "$ref": "#/components/schemas/InstallationCredentials"
                    },
                    "backups": {
                        "$ref": "#/components/schemas/InstallationBackups"
                    },
                    "fileManager": {
                        "$ref": "#/components/schemas/InstallationFileManager"
                    },
                    "actionLog": {
                        "$ref": "#/components/schemas/InstallationActionLog"
                    },
                    "remoteManagement": {
                        "$ref": "#/components/schemas/InstallationRemoteManagement"
                    },
                    "synchronizeSiteUrl": {
                        "$ref": "#/components/schemas/InstallationSynchronizeSiteUrl"
                    },
                    "malwareScan": {
                        "$ref": "#/components/schemas/InstallationMalwareScan"
                    },
                    "php": {
                        "$ref": "#/components/schemas/InstallationPhp"
                    },
                    "integrity": {
                        "$ref": "#/components/schemas/InstallationIntegrityFeature"
                    },
                    "pluginsBlockList": {
                        "$ref": "#/components/schemas/InstallationPluginsBlockList"
                    },
                    "virtualPatches": {
                        "$ref": "#/components/schemas/InstallationVirtualPatches"
                    },
                    "vulnerabilityFiltering": {
                        "$ref": "#/components/schemas/InstallationVulnerabilityFiltering"
                    }
                },
                "type": "object"
            },
            "InstallationFileManager": {
                "required": [
                    "available",
                    "url"
                ],
                "properties": {
                    "available": {
                        "description": "Availability of file manager feature",
                        "type": "boolean"
                    },
                    "url": {
                        "description": "URL to domain file manager",
                        "type": "string",
                        "example": "/admin/subscription/login/id/1/?pageUrl=%2Fsmb%2Ffile-manager%2Flist%3FcurrentDir%3D%252Fdomain.tld",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "InstallationHotlinkProtection": {
                "required": [
                    "available",
                    "status"
                ],
                "properties": {
                    "available": {
                        "description": "Availability of hotlink protection feature",
                        "type": "boolean"
                    },
                    "status": {
                        "description": "Hotlink protection feature status",
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "InstallationIndexing": {
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "description": "Status of search engine indexing feature",
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "InstallationIntegrityFeature": {
                "required": [
                    "available"
                ],
                "properties": {
                    "available": {
                        "description": "Availability of WordPress integrity check feature",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "InstallationLabel": {
                "required": [
                    "type",
                    "color",
                    "name"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "public",
                            "private"
                        ]
                    },
                    "color": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MetaInstallationLabel": {
                "required": [
                    "value",
                    "meta"
                ],
                "properties": {
                    "value": {
                        "required": [
                            "type",
                            "color",
                            "name"
                        ],
                        "properties": {
                            "type": {
                                "required": [
                                    "value",
                                    "meta"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "string"
                                    },
                                    "meta": {
                                        "required": [
                                            "choices"
                                        ],
                                        "properties": {
                                            "choices": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "color": {
                                "required": [
                                    "value",
                                    "meta"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "string"
                                    },
                                    "meta": {
                                        "required": [
                                            "choices"
                                        ],
                                        "properties": {
                                            "choices": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "name": {
                                "required": [
                                    "value",
                                    "meta"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "string"
                                    },
                                    "meta": {
                                        "properties": {},
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {},
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "InstallationMaintenance": {
                "required": [
                    "status",
                    "fullMode"
                ],
                "properties": {
                    "status": {
                        "description": "Maintenance feature status",
                        "type": "boolean",
                        "nullable": true
                    },
                    "fullMode": {
                        "description": "Maintenance mode is fully restricting access to WordPress dashboard",
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "InstallationMalwareScan": {
                "required": [
                    "available",
                    "url"
                ],
                "properties": {
                    "available": {
                        "description": "Availability of malware scan feature",
                        "type": "boolean"
                    },
                    "url": {
                        "description": "URL to malware scan interface",
                        "type": "string",
                        "example": "/modules/revisium-antivirus/index.php",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "InstallationMultipleSitesManagement": {
                "required": [
                    "applicable"
                ],
                "properties": {
                    "applicable": {
                        "description": "Availability of mass site management feature",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "InstallationNginxCaching": {
                "required": [
                    "available",
                    "status",
                    "webServerSettingsUrl"
                ],
                "properties": {
                    "available": {
                        "description": "Availability of Nginx caching feature",
                        "type": "boolean"
                    },
                    "status": {
                        "description": "Nginx caching feature status",
                        "type": "boolean",
                        "nullable": true
                    },
                    "webServerSettingsUrl": {
                        "description": "URL to web server settings page",
                        "type": "string",
                        "example": "/admin/subscription/login/id/1/?pageUrl=%2Fsmb%2Fweb%2Fweb-server-settings%2Fid%2F62",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "InstallationOwner": {
                "required": [
                    "id",
                    "login",
                    "name",
                    "url"
                ],
                "properties": {
                    "id": {
                        "description": "Account ID",
                        "type": "integer",
                        "example": "14"
                    },
                    "login": {
                        "description": "Username",
                        "type": "string",
                        "example": "User42"
                    },
                    "name": {
                        "description": "Account name",
                        "type": "string",
                        "example": "Account Owner Name",
                        "nullable": true
                    },
                    "url": {
                        "description": "URL to account management page in the panel",
                        "type": "string",
                        "example": "/admin/customer/domains/id/12",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "InstallationPasswordProtection": {
                "required": [
                    "available",
                    "status"
                ],
                "properties": {
                    "available": {
                        "description": "Availability of password protection feature",
                        "type": "boolean"
                    },
                    "status": {
                        "description": "Password protection feature status",
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "InstallationPhp": {
                "required": [
                    "handler",
                    "unsupported",
                    "eoled",
                    "settingsUrl"
                ],
                "properties": {
                    "handler": {
                        "$ref": "#/components/schemas/PhpHandler"
                    },
                    "unsupported": {
                        "description": "PHP version support status",
                        "type": "boolean"
                    },
                    "eoled": {
                        "description": "PHP version EOL status",
                        "type": "boolean"
                    },
                    "settingsUrl": {
                        "description": "URL to PHP management page in the panel",
                        "type": "string",
                        "example": "/admin/subscription/login/id/63/?pageUrl=%2Fsmb%2Fweb%2Fphp-settings%2Fid%2F63",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "InstallationPluginsBlockList": {
                "required": [
                    "amountOfBlockedPlugins"
                ],
                "properties": {
                    "amountOfBlockedPlugins": {
                        "description": "Number of plugins in the blocklist",
                        "type": "number",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "InstallationRemoteManagement": {
                "required": [
                    "available"
                ],
                "properties": {
                    "available": {
                        "description": "Availability of remote management feature",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "InstallationRestorePoint": {
                "required": [
                    "available",
                    "restorePointTimestamp",
                    "previousVersion",
                    "version",
                    "errorMessage",
                    "displayTimestamp",
                    "fullSnapshot",
                    "message",
                    "sourceUrl"
                ],
                "properties": {
                    "available": {
                        "description": "Restore point creation availability",
                        "type": "boolean"
                    },
                    "restorePointTimestamp": {
                        "description": "Restore point timestamp",
                        "type": "integer",
                        "example": "1640008056",
                        "nullable": true
                    },
                    "previousVersion": {
                        "description": "Source version of WordPress",
                        "type": "string",
                        "example": "4.9.1",
                        "nullable": true
                    },
                    "version": {
                        "description": "Target version of WordPress",
                        "type": "string",
                        "example": "5.1.0",
                        "nullable": true
                    },
                    "errorMessage": {
                        "description": "Error message",
                        "type": "string",
                        "example": "Some error was occurred",
                        "nullable": true
                    },
                    "displayTimestamp": {
                        "description": "Localized timestamp",
                        "type": "string",
                        "example": "Dec 20, 2021 08:47 PM",
                        "nullable": true
                    },
                    "fullSnapshot": {
                        "description": "Snapshot scope (full or partial)",
                        "type": "boolean",
                        "nullable": true
                    },
                    "message": {
                        "description": "Tooltip message for UI",
                        "type": "string",
                        "example": "Message for snapshot tooltip",
                        "nullable": true
                    },
                    "sourceUrl": {
                        "description": "Source WordPress URL",
                        "type": "string",
                        "example": "https://source.tld",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "InstallationScreenshot": {
                "required": [
                    "createdAt",
                    "url"
                ],
                "properties": {
                    "createdAt": {
                        "description": "Date and time the screenshot was taken",
                        "type": "string",
                        "example": "2021-02-03T01:02:03+00:00",
                        "nullable": true
                    },
                    "url": {
                        "description": "Screenshot URL",
                        "type": "string",
                        "example": "screenshot/id/2?v=1644909979"
                    }
                },
                "type": "object"
            },
            "InstallationSecurity": {
                "required": [
                    "available",
                    "applicable",
                    "status"
                ],
                "properties": {
                    "available": {
                        "description": "Availability of security management feature",
                        "type": "boolean"
                    },
                    "applicable": {
                        "description": "Security measures management might be disabled by the server administrator",
                        "type": "boolean"
                    },
                    "status": {
                        "$ref": "#/components/schemas/InstallationSecurityStatusEnum"
                    }
                },
                "type": "object"
            },
            "InstallationSmartPhpUpdates": {
                "required": [
                    "available",
                    "applicable",
                    "taskStatus",
                    "createdAt"
                ],
                "properties": {
                    "available": {
                        "description": "Availability of Smart PHP Update feature",
                        "type": "boolean"
                    },
                    "applicable": {
                        "description": "Smart PHP Update might be disabled by the server administrator",
                        "type": "boolean"
                    },
                    "taskStatus": {
                        "$ref": "#/components/schemas/InstallationSmartPhpUpdatesTaskStatusEnum"
                    },
                    "createdAt": {
                        "description": "Date and time when Smart PHP Update result was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-01-01T00:00:00+00:00",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "InstallationSmartPhpUpdatesTaskStatusEnum": {
                "description": "Status of Smart PHP Update task",
                "type": "string",
                "enum": [
                    "started",
                    "success",
                    "warning",
                    "failed",
                    "notExist"
                ]
            },
            "InstallationSmartUpdates": {
                "required": [
                    "available",
                    "applicable",
                    "promoAvailable",
                    "status",
                    "taskStatus",
                    "initiatedByAutoUpdater",
                    "createdAt"
                ],
                "properties": {
                    "available": {
                        "description": "Availability of Smart Update feature",
                        "type": "boolean"
                    },
                    "applicable": {
                        "description": "Smart Updates might be disabled by the server administrator",
                        "type": "boolean"
                    },
                    "promoAvailable": {
                        "description": "Show Smart Update promo banner",
                        "type": "boolean"
                    },
                    "status": {
                        "description": "Smart Update enabled",
                        "type": "boolean",
                        "nullable": true
                    },
                    "taskStatus": {
                        "$ref": "#/components/schemas/InstallationSmartUpdatesTaskStatusEnum"
                    },
                    "initiatedByAutoUpdater": {
                        "description": "Smart Update launched in scope of autoupdate task (might require user attention)",
                        "type": "boolean",
                        "nullable": true
                    },
                    "createdAt": {
                        "description": "Date and time when Smart Update result was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-01-01T00:00:00+00:00",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "InstallationSmartUpdatesTaskStatusEnum": {
                "description": "Status of Smart Update task",
                "type": "string",
                "enum": [
                    "started",
                    "success",
                    "warning",
                    "failed",
                    "notExist"
                ]
            },
            "InstallationSsl": {
                "required": [
                    "buyOrInstallSslActionUrl",
                    "enabled",
                    "enableRedirectToHttpsActionUrl",
                    "enableSslActionUrl",
                    "redirectToHttpsEnabled",
                    "urlProtocolHttps",
                    "certificate"
                ],
                "properties": {
                    "enabled": {
                        "description": "SSL status",
                        "type": "boolean"
                    },
                    "redirectToHttpsEnabled": {
                        "description": "Redirect to HTTPS status",
                        "type": "boolean"
                    },
                    "urlProtocolHttps": {
                        "description": "Status of HTTPS in URL protocol",
                        "type": "boolean"
                    },
                    "certificate": {
                        "$ref": "#/components/schemas/InstallationSslCertificate"
                    },
                    "enableSslActionUrl": {
                        "description": "URL for enabling SSL",
                        "type": "string",
                        "example": "/admin/subscription/login/id/63/?pageUrl=%2Fsmb%2Fweb%2Fsettings%2Fid%2F63",
                        "nullable": true
                    },
                    "buyOrInstallSslActionUrl": {
                        "description": "URL for installing SSL certificate",
                        "type": "string",
                        "example": "/admin/subscription/login/id/63/?pageUrl=%2Fmodules%2Fsslit%2Findex.php%2Findex%2Fcertificate%2Fid%2F63",
                        "nullable": true
                    },
                    "enableRedirectToHttpsActionUrl": {
                        "description": "URL for enabling redirect to HTTPS",
                        "type": "string",
                        "example": "/admin/subscription/login/id/63/?pageUrl=%2Fsmb%2Fweb%2Fsettings%2Fid%2F63",
                        "nullable": true
                    }
                },
                "type": "object",
                "nullable": true
            },
            "InstallationSslCertificate": {
                "required": [
                    "installed",
                    "selfSigned",
                    "actual",
                    "suitableForDomain",
                    "issuerName"
                ],
                "properties": {
                    "installed": {
                        "description": "SSL certificate installation status",
                        "type": "boolean"
                    },
                    "selfSigned": {
                        "description": "SSL certificate self-signature status",
                        "type": "boolean",
                        "nullable": true
                    },
                    "actual": {
                        "description": "SSL certificate actuality status",
                        "type": "boolean",
                        "nullable": true
                    },
                    "suitableForDomain": {
                        "description": "Status of SSL certificate suitability for domain",
                        "type": "boolean",
                        "nullable": true
                    },
                    "issuerName": {
                        "description": "SSL certificate issuer name",
                        "type": "string",
                        "example": "GALAXY SECURE",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "InstallationStatus": {
                "required": [
                    "alive",
                    "infected",
                    "unsupported",
                    "multisite"
                ],
                "properties": {
                    "alive": {
                        "description": "Installation is alive",
                        "type": "boolean"
                    },
                    "infected": {
                        "description": "Installation is quarantined",
                        "type": "boolean"
                    },
                    "unsupported": {
                        "description": "Installation is unsupported",
                        "type": "boolean"
                    },
                    "multisite": {
                        "description": "Multisite status",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "InstallationSynchronizeSiteUrl": {
                "required": [
                    "available"
                ],
                "properties": {
                    "available": {
                        "description": "Availability of synchronize site URL feature",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "InstallationUpdates": {
                "required": [
                    "applicable",
                    "availableVersion",
                    "autoUpdatesAvailable",
                    "amountOfPluginsWithUpdates",
                    "amountOfThemesWithUpdates",
                    "smart",
                    "php"
                ],
                "properties": {
                    "applicable": {
                        "description": "Updates might be disabled by the server administrator",
                        "type": "boolean"
                    },
                    "autoUpdatesAvailable": {
                        "description": "Autoupdates availability status",
                        "type": "boolean"
                    },
                    "availableVersion": {
                        "description": "Version of available update",
                        "type": "string",
                        "example": "5.1.1",
                        "nullable": true
                    },
                    "amountOfPluginsWithUpdates": {
                        "description": "Number of plugins with available updates",
                        "type": "integer",
                        "example": "3"
                    },
                    "amountOfThemesWithUpdates": {
                        "description": "Number of themes with available updates",
                        "type": "integer",
                        "example": "1"
                    },
                    "smart": {
                        "$ref": "#/components/schemas/InstallationSmartUpdates"
                    },
                    "php": {
                        "$ref": "#/components/schemas/InstallationSmartPhpUpdates"
                    }
                },
                "type": "object"
            },
            "InstallationVirtualPatchesRestrictionsEnum": {
                "description": "Virtual patches feature restrictions list",
                "type": "string",
                "enum": [
                    "featureDisabled",
                    "disabledForDomain",
                    "limitReachedForDomain",
                    "licenseAbsent",
                    "licenseLimitReached",
                    "wpToolkitDeluxeDisabled"
                ]
            },
            "InstallationVirtualPatches": {
                "required": [
                    "status",
                    "available",
                    "restrictions",
                    "subscription"
                ],
                "properties": {
                    "status": {
                        "description": "Whether is site protected by WAF",
                        "type": "boolean",
                        "nullable": true
                    },
                    "available": {
                        "description": "Whether is feature available",
                        "type": "boolean"
                    },
                    "restrictions": {
                        "description": "List of restrictions for feature",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InstallationVirtualPatchesRestrictionsEnum"
                        }
                    },
                    "subscription": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/InstallationVirtualPatchesSubscription"
                            }
                        ],
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "InstallationVirtualPatchesSubscriptionStatusEnum": {
                "description": "Virtual patches subscription status value",
                "type": "string",
                "enum": [
                    "active",
                    "expired",
                    "suspended",
                    "terminated"
                ]
            },
            "InstallationVirtualPatchesSubscription": {
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/InstallationVirtualPatchesSubscriptionStatusEnum"
                    }
                },
                "type": "object"
            },
            "InstallationVulnerability": {
                "required": [
                    "available",
                    "vulnerable",
                    "hasVulnerableDeactivatedPlugins",
                    "hasVulnerableDeactivatedThemes"
                ],
                "properties": {
                    "available": {
                        "description": "Availability of vulnerability scan feature",
                        "type": "boolean"
                    },
                    "vulnerable": {
                        "description": "Installation vulnerability status",
                        "type": "boolean",
                        "nullable": true
                    },
                    "hasVulnerableDeactivatedPlugins": {
                        "description": "Presence of vulnerable deactivated plugins on installation",
                        "type": "boolean",
                        "nullable": true
                    },
                    "hasVulnerableDeactivatedThemes": {
                        "description": "Presence of vulnerable deactivated themes on installation",
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "InstallationVulnerabilityFiltering": {
                "required": [
                    "status",
                    "available"
                ],
                "properties": {
                    "status": {
                        "description": "Enabled status",
                        "type": "boolean",
                        "nullable": true
                    },
                    "available": {
                        "description": "Whether is feature available",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "InstallationWpCron": {
                "required": [
                    "available",
                    "status",
                    "taskReplacementStatus"
                ],
                "properties": {
                    "available": {
                        "description": "Availability of wp-cron.php takeover feature",
                        "type": "boolean"
                    },
                    "status": {
                        "description": "Status of wp-cron.php takeover feature",
                        "type": "boolean",
                        "nullable": true
                    },
                    "taskReplacementStatus": {
                        "description": "Status of replacement task creation",
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PhpHandler": {
                "description": "WordPress site PHP handler",
                "required": [
                    "identifier",
                    "name",
                    "version"
                ],
                "properties": {
                    "identifier": {
                        "description": "WordPress site PHP handler identifier",
                        "type": "string",
                        "example": "plesk-php56-fpm"
                    },
                    "name": {
                        "description": "WordPress site PHP handler name",
                        "type": "string",
                        "example": "5.6.40 FPM"
                    },
                    "version": {
                        "description": "WordPress site PHP handler version",
                        "type": "string",
                        "example": "5.6.40"
                    }
                },
                "type": "object",
                "nullable": true
            },
            "WordPressAsset": {
                "required": [
                    "author",
                    "downloaded",
                    "installed",
                    "logoUrl",
                    "previewUrl",
                    "rating",
                    "requires",
                    "screenshotUrl",
                    "screenshots",
                    "sections",
                    "shortDescription",
                    "slug",
                    "tested",
                    "title",
                    "updated",
                    "version"
                ],
                "properties": {
                    "author": {
                        "required": [
                            "name",
                            "profile"
                        ],
                        "properties": {
                            "name": {
                                "description": "Author name",
                                "type": "string",
                                "example": "John Doe"
                            },
                            "profile": {
                                "description": "URL to an author profile",
                                "type": "string",
                                "example": "https://profiles.wordpress.org/john-doe",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "downloaded": {
                        "description": "Number of downloads",
                        "type": "integer",
                        "example": "999999999"
                    },
                    "installed": {
                        "description": "Asset is installed or not",
                        "type": "boolean",
                        "example": "true"
                    },
                    "logoUrl": {
                        "description": "URL to a WordPress logo",
                        "type": "string",
                        "example": "/modules/wp-toolkit/images/wordpresses.png"
                    },
                    "previewUrl": {
                        "description": "URL to a preview page",
                        "type": "string",
                        "example": "https://www.wp.john-doe.com/"
                    },
                    "rating": {
                        "required": [
                            "amount",
                            "score"
                        ],
                        "properties": {
                            "amount": {
                                "description": "Number of ratings",
                                "type": "integer",
                                "example": "987654321"
                            },
                            "score": {
                                "description": "Rating score",
                                "type": "number",
                                "example": "4.3"
                            }
                        },
                        "type": "object"
                    },
                    "requires": {
                        "description": "Required WordPress version",
                        "type": "string",
                        "example": "5.1.1"
                    },
                    "screenshotUrl": {
                        "description": "URL to an asset icon or screenshot",
                        "type": "string",
                        "example": "https://ps.w.org/jetpack/assets/icon.svg?rev=12345"
                    },
                    "screenshots": {
                        "type": "array",
                        "items": {
                            "required": [
                                "caption",
                                "src"
                            ],
                            "properties": {
                                "caption": {
                                    "description": "Screenshot caption",
                                    "type": "string",
                                    "example": "Lorem ipsum"
                                },
                                "src": {
                                    "description": "Screenshot URL",
                                    "type": "string",
                                    "example": "https://ps.w.org/plesk/assets/screenshot-1.png"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "shortDescription": {
                        "description": "Asset description",
                        "type": "string",
                        "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
                    },
                    "sections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WordPressAssetSection"
                        }
                    },
                    "slug": {
                        "description": "Asset slug",
                        "type": "string",
                        "example": "new-extension"
                    },
                    "tested": {
                        "description": "Tested WordPress version",
                        "type": "string",
                        "example": "6.1.0",
                        "nullable": true
                    },
                    "title": {
                        "description": "Asset name",
                        "type": "string",
                        "example": "New extension for WordPress"
                    },
                    "updated": {
                        "description": "Last update date",
                        "type": "string",
                        "example": "2023-02-15T21:43:00+00:00",
                        "nullable": true
                    },
                    "version": {
                        "description": "Asset version",
                        "type": "string",
                        "example": "20.0"
                    }
                },
                "type": "object"
            },
            "WordPressAssetSection": {
                "required": [
                    "content",
                    "type"
                ],
                "properties": {
                    "content": {
                        "description": "Section content in HTML format",
                        "type": "string",
                        "example": "<h4>Q: Lorem ipsum dolor sit amet?</h4>\\n<p>A: Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\\n"
                    },
                    "type": {
                        "description": "Section type",
                        "type": "string",
                        "enum": [
                            "changelog",
                            "description",
                            "faq",
                            "installation"
                        ],
                        "example": "description"
                    }
                },
                "type": "object"
            },
            "SmartPhpUpdateStubPhpResponse": {
                "required": [
                    "value",
                    "meta"
                ],
                "properties": {
                    "value": {
                        "description": "PHP version value",
                        "type": "string",
                        "example": "plesk-php74-fpm",
                        "nullable": true
                    },
                    "meta": {
                        "required": [
                            "versions"
                        ],
                        "properties": {
                            "versions": {
                                "description": "Available versions of PHP handlers",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SmartPhpUpdateStubPhpVersionResponse"
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "SmartPhpUpdateStubPhpVersionResponse": {
                "required": [
                    "value",
                    "title",
                    "eoled"
                ],
                "properties": {
                    "value": {
                        "type": "string",
                        "example": "plesk-php74-fpm"
                    },
                    "title": {
                        "type": "string",
                        "example": "7.4.28 FPM"
                    },
                    "eoled": {
                        "description": "EOL status of PHP version",
                        "type": "boolean",
                        "example": "true"
                    },
                    "isFpmAvailable": {
                        "description": "Available FPM handler",
                        "type": "boolean",
                        "example": "true"
                    }
                },
                "type": "object"
            },
            "InstallationPathValidatorRequest": {
                "required": [
                    "domain"
                ],
                "properties": {
                    "domain": {
                        "description": "Domain name",
                        "type": "string",
                        "example": "example.com"
                    },
                    "installationPath": {
                        "description": "Installation path relative to the root directory of the domain",
                        "type": "string",
                        "example": "wordpress"
                    }
                },
                "type": "object"
            },
            "AdminSettings": {
                "description": "Default settings of site administrator",
                "required": [
                    "value"
                ],
                "properties": {
                    "value": {
                        "required": [
                            "login",
                            "password",
                            "email"
                        ],
                        "properties": {
                            "login": {
                                "description": "Site administrator username",
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "string",
                                        "example": "admin"
                                    }
                                },
                                "type": "object"
                            },
                            "password": {
                                "description": "Site administrator password",
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "email": {
                                "description": "Site administrator e-mail",
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "string",
                                        "example": "admin@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "AutoUpdateSettings": {
                "description": "Default autoupdate settings",
                "required": [
                    "value",
                    "meta"
                ],
                "properties": {
                    "value": {
                        "required": [
                            "core",
                            "plugins",
                            "themes"
                        ],
                        "properties": {
                            "core": {
                                "description": "WordPress core autoupdate",
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "string",
                                        "enum": [
                                            "disabled",
                                            "minor",
                                            "major"
                                        ],
                                        "example": "minor"
                                    }
                                },
                                "type": "object"
                            },
                            "plugins": {
                                "$ref": "#/components/schemas/PluginsAutoUpdateSettings"
                            },
                            "themes": {
                                "$ref": "#/components/schemas/ThemesAutoUpdateSettings"
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "required": [
                            "isCustomizationAllowed"
                        ],
                        "properties": {
                            "isCustomizationAllowed": {
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DatabaseSettings": {
                "description": "Default database settings",
                "required": [
                    "value"
                ],
                "properties": {
                    "value": {
                        "required": [
                            "name",
                            "server",
                            "userName",
                            "userPassword",
                            "tablePrefix"
                        ],
                        "properties": {
                            "name": {
                                "description": "Database name",
                                "required": [
                                    "value",
                                    "meta"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "string",
                                        "example": "wp_v5nol"
                                    },
                                    "meta": {
                                        "required": [
                                            "isCustomizationAllowed"
                                        ],
                                        "properties": {
                                            "isCustomizationAllowed": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "server": {
                                "$ref": "#/components/schemas/ParameterWithChoices"
                            },
                            "userName": {
                                "description": "Database user name",
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "string",
                                        "example": "wp_y7se8"
                                    }
                                },
                                "type": "object"
                            },
                            "userPassword": {
                                "description": "Database user password",
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "tablePrefix": {
                                "description": "Database table prefix",
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "string",
                                        "example": "wp_"
                                    }
                                },
                                "type": "object"
                            },
                            "namePrefix": {
                                "description": "Database name prefix",
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "string",
                                        "example": "wp_"
                                    }
                                },
                                "type": "object"
                            },
                            "userNamePrefix": {
                                "description": "Database user name prefix",
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "string",
                                        "example": "username_"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ParameterWithChoices": {
                "description": "Default value of installation parameter with the list of available choices",
                "required": [
                    "value",
                    "meta"
                ],
                "properties": {
                    "value": {
                        "type": "string"
                    },
                    "meta": {
                        "required": [
                            "choices"
                        ],
                        "properties": {
                            "choices": {
                                "description": "List of available choices",
                                "type": "array",
                                "items": {
                                    "required": [
                                        "value",
                                        "title"
                                    ],
                                    "properties": {
                                        "value": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "minItems": 0
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object",
                "example": {
                    "value": "1",
                    "meta": {
                        "choices": [
                            {
                                "value": "1",
                                "title": "First value"
                            },
                            {
                                "value": "2",
                                "title": "Second value"
                            }
                        ]
                    }
                }
            },
            "PluginsAutoUpdateSettings": {
                "description": "Default plugin autoupdate settings",
                "required": [
                    "value"
                ],
                "properties": {
                    "value": {
                        "required": [
                            "forceUpdates",
                            "newlyInstalledUpdates",
                            "updateVulnerable",
                            "deactivateVulnerable"
                        ],
                        "properties": {
                            "forceUpdates": {
                                "description": "Forced autoupdate of plugins",
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "newlyInstalledUpdates": {
                                "description": "Enable autoupdate for new plugins",
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "updateVulnerable": {
                                "description": "Enable autoupdate for vulnerable plugins",
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "deactivateVulnerable": {
                                "description": "Deactivate vulnerable plugins",
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ThemesAutoUpdateSettings": {
                "description": "Default theme autoupdate settings",
                "required": [
                    "value"
                ],
                "properties": {
                    "value": {
                        "required": [
                            "forceUpdates",
                            "newlyInstalledUpdates",
                            "updateVulnerable"
                        ],
                        "properties": {
                            "forceUpdates": {
                                "description": "Forced theme autoupdate",
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "newlyInstalledUpdates": {
                                "description": "Enable autoupdate for new themes",
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "updateVulnerable": {
                                "description": "Enable autoupdate for vulnerable themes",
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "VirtualPatchesInfo": {
                "required": [
                    "installationsLimit",
                    "installationsActive"
                ],
                "properties": {
                    "installationsLimit": {
                        "description": "Maximum number of installations on which the license allows virtual patching to be enabled simultaneously",
                        "type": "integer",
                        "example": "5"
                    },
                    "installationsActive": {
                        "description": "Current number of installations with enabled virtual patching",
                        "type": "integer",
                        "example": "3"
                    }
                },
                "type": "object"
            },
            "InstallationRemoveConfirmationDatabaseResponse": {
                "required": [
                    "name",
                    "sharedWithInstallationsIds",
                    "removingAllowed",
                    "willBeRemovedAutomatically"
                ],
                "properties": {
                    "name": {
                        "description": "Database name",
                        "type": "string",
                        "example": "wp_qiluwgd"
                    },
                    "sharedWithInstallationsIds": {
                        "description": "IDs of installations that share databases",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "example": 2
                        }
                    },
                    "removingAllowed": {
                        "description": "Database removal allowed during application removal",
                        "type": "boolean",
                        "example": true
                    },
                    "willBeRemovedAutomatically": {
                        "description": "Automatic removal of database together with application",
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "InstallationRemoveConfirmationDatabaseUserResponse": {
                "required": [
                    "name",
                    "sharedWithInstallationsIds",
                    "removingAllowed",
                    "willBeRemovedAutomatically"
                ],
                "properties": {
                    "name": {
                        "description": "Database user name",
                        "type": "string",
                        "example": "wp_ouiqhfsad"
                    },
                    "sharedWithInstallationsIds": {
                        "description": "IDs of installations that share database users",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "example": 2
                        }
                    },
                    "removingAllowed": {
                        "description": "Database user removal allowed during application removal",
                        "type": "boolean",
                        "example": true
                    },
                    "willBeRemovedAutomatically": {
                        "description": "Automatic removal of database user together with application",
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "InstallationRemoveConfirmationResponse": {
                "required": [
                    "id",
                    "database",
                    "user"
                ],
                "properties": {
                    "id": {
                        "description": "Installation ID",
                        "type": "integer",
                        "example": 1
                    },
                    "database": {
                        "$ref": "#/components/schemas/InstallationRemoveConfirmationDatabaseResponse"
                    },
                    "user": {
                        "$ref": "#/components/schemas/InstallationRemoveConfirmationDatabaseUserResponse"
                    }
                },
                "type": "object"
            },
            "StatusRequest": {
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "description": "Status",
                        "type": "boolean",
                        "example": "true"
                    }
                },
                "type": "object"
            },
            "ChoicesResponse": {
                "type": "array",
                "items": {
                    "required": [
                        "value",
                        "title"
                    ],
                    "properties": {
                        "value": {
                            "type": "string"
                        },
                        "title": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "FileTextPlain": {
                "title": "FileTextPlain",
                "description": "OK",
                "type": "string",
                "format": "binary"
            },
            "FormErrors": {
                "type": "object"
            },
            "InstallationSecurityStatusEnum": {
                "description": "Security status (depends on applied security measures)",
                "type": "string",
                "enum": [
                    "unknown",
                    "insecure",
                    "secureRecommended",
                    "secureFull"
                ],
                "example": "secureRecommended"
            },
            "MessageResponse": {
                "required": [
                    "key",
                    "text",
                    "intent"
                ],
                "properties": {
                    "key": {
                        "description": "Unique message key",
                        "type": "string",
                        "example": "codeFourHundredAndEighteen"
                    },
                    "text": {
                        "description": "Message",
                        "type": "string",
                        "example": "I'm a teapot"
                    },
                    "intent": {
                        "description": "Message intent",
                        "type": "string",
                        "enum": [
                            "info",
                            "success",
                            "warning",
                            "danger"
                        ],
                        "example": "warning"
                    }
                },
                "type": "object"
            },
            "MessagesResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/MessageResponse"
                }
            },
            "Meta": {
                "required": [
                    "status",
                    "message"
                ],
                "properties": {
                    "status": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InstallationSecurityMeasure": {
                "required": [
                    "id",
                    "status",
                    "available"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "adminUsername"
                    },
                    "status": {
                        "description": "Activity status of security measure",
                        "type": "boolean",
                        "example": "true"
                    },
                    "available": {
                        "description": "Availability of security measure",
                        "type": "boolean",
                        "example": "true"
                    }
                },
                "type": "object"
            },
            "SecurityMeasure": {
                "required": [
                    "id",
                    "title",
                    "description",
                    "rollbackAvailable",
                    "critical"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "adminUsername"
                    },
                    "title": {
                        "type": "string",
                        "example": "Change default administrator's username"
                    },
                    "description": {
                        "type": "string",
                        "example": "During the installation WordPress creates a user with administrative privileges and the username 'admin'..."
                    },
                    "rollbackAvailable": {
                        "description": "Ability to revert this security measure",
                        "type": "boolean",
                        "example": "false"
                    },
                    "critical": {
                        "description": "WP Toolkit recommends to apply all critical security measures",
                        "type": "boolean",
                        "example": "false"
                    }
                },
                "type": "object"
            },
            "SecurityMeasuresInstallationStatus": {
                "required": [
                    "id",
                    "displayTitle",
                    "securityStatus",
                    "resolveApplicable",
                    "checkApplicable",
                    "revertApplicable",
                    "lastSecurityCheckTimestamp",
                    "tasks",
                    "securityMeasures",
                    "vulnerable"
                ],
                "properties": {
                    "id": {
                        "description": "Installation ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "displayTitle": {
                        "description": "WordPress site title",
                        "type": "string",
                        "example": "Just Deploy It!"
                    },
                    "securityStatus": {
                        "$ref": "#/components/schemas/InstallationSecurityStatusEnum"
                    },
                    "resolveApplicable": {
                        "description": "Applying of security measures might be disabled by the server administrator",
                        "type": "boolean",
                        "example": "true"
                    },
                    "checkApplicable": {
                        "description": "Checking security measure status might be disabled by the server administrator",
                        "type": "boolean",
                        "example": "true"
                    },
                    "revertApplicable": {
                        "description": "Reverting security measures might be disabled by the server administrator",
                        "type": "boolean",
                        "example": "true"
                    },
                    "lastSecurityCheckTimestamp": {
                        "description": "Timestamp",
                        "type": "integer",
                        "example": "1654782220"
                    },
                    "tasks": {
                        "required": [
                            "check",
                            "resolve",
                            "revert"
                        ],
                        "properties": {
                            "check": {
                                "nullable": true,
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/BackgroundTaskResponse"
                                    }
                                ]
                            },
                            "resolve": {
                                "nullable": true,
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/BackgroundTaskResponse"
                                    }
                                ]
                            },
                            "revert": {
                                "nullable": true,
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/BackgroundTaskResponse"
                                    }
                                ]
                            }
                        },
                        "type": "object",
                        "example": {
                            "check": {
                                "id": 1,
                                "code": "mass-security-operation",
                                "title": "Checking the security of WordPress installations...",
                                "status": "running",
                                "progress": 0,
                                "steps": [],
                                "publicParams": [],
                                "errors": []
                            },
                            "resolve": {
                                "id": 1,
                                "code": "mass-security-operation",
                                "title": "Applying security measures to WordPress installation...",
                                "status": "running",
                                "progress": 0,
                                "steps": [],
                                "publicParams": [],
                                "errors": []
                            },
                            "revert": {
                                "id": 1,
                                "code": "mass-security-operation",
                                "title": "Reverting security measures applied to WordPress installation...",
                                "status": "running",
                                "progress": 0,
                                "steps": [],
                                "publicParams": [],
                                "errors": []
                            }
                        }
                    },
                    "securityMeasures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InstallationSecurityMeasure"
                        }
                    },
                    "vulnerable": {
                        "description": "Installation vulnerability status",
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SetPluginsToSetRequest": {
                "description": "List of plugins that will replace existing collection in set",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/PluginAssetDetails"
                },
                "example": [
                    {
                        "slug": "akismet",
                        "status": true
                    },
                    {
                        "slug": "contact-form-7",
                        "status": false
                    }
                ]
            },
            "SetThemesToSetRequest": {
                "description": "List of themes that will replace existing collection in set",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/ThemeAssetDetails"
                },
                "example": [
                    {
                        "slug": "twentytwentytwo",
                        "status": true
                    },
                    {
                        "slug": "twentytwenty",
                        "status": false
                    }
                ]
            },
            "PluginAssetDetails": {
                "required": [
                    "slug",
                    "status"
                ],
                "properties": {
                    "slug": {
                        "description": "Slug",
                        "type": "string",
                        "example": "akismet"
                    },
                    "status": {
                        "description": "Should be active after installation",
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "ThemeAssetDetails": {
                "required": [
                    "slug",
                    "status"
                ],
                "properties": {
                    "slug": {
                        "description": "Slug",
                        "type": "string",
                        "example": "twentytwentyfour"
                    },
                    "status": {
                        "description": "Should be active after installation",
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "CreateSetRequest": {
                "required": [
                    "title",
                    "plugins",
                    "themes"
                ],
                "properties": {
                    "title": {
                        "description": "Title",
                        "type": "string",
                        "example": "WordPress Essentials"
                    },
                    "plugins": {
                        "description": "Plugins",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PluginAssetDetails"
                        }
                    },
                    "themes": {
                        "description": "Themes",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ThemeAssetDetails"
                        }
                    }
                },
                "type": "object"
            },
            "InstallSetRequest": {
                "required": [
                    "setId",
                    "installationId"
                ],
                "properties": {
                    "setId": {
                        "description": "Set ID",
                        "type": "integer",
                        "example": 1
                    },
                    "installationId": {
                        "description": "Installation ID",
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "UpdateSetRequest": {
                "required": [
                    "title"
                ],
                "properties": {
                    "title": {
                        "description": "Title",
                        "type": "string",
                        "example": "WordPress Essentials"
                    }
                },
                "type": "object"
            },
            "UploadPluginIntoSetRequest": {
                "required": [
                    "file",
                    "status"
                ],
                "properties": {
                    "file": {
                        "description": "Plugin zip",
                        "type": "string",
                        "format": "binary"
                    },
                    "status": {
                        "description": "Is plugin activated",
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "UploadThemeIntoSetRequest": {
                "required": [
                    "file",
                    "status"
                ],
                "properties": {
                    "file": {
                        "description": "Theme zip",
                        "type": "string",
                        "format": "binary"
                    },
                    "status": {
                        "description": "Is theme activated",
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "SetDetailsAssetResponse": {
                "required": [
                    "title",
                    "slug",
                    "status",
                    "uploaded",
                    "id"
                ],
                "properties": {
                    "title": {
                        "description": "Title",
                        "type": "string",
                        "example": "Akismet plugin"
                    },
                    "slug": {
                        "description": "Slug",
                        "type": "string",
                        "example": "akismet"
                    },
                    "status": {
                        "description": "Status",
                        "type": "boolean",
                        "example": true
                    },
                    "uploaded": {
                        "description": "Is uploaded",
                        "type": "boolean",
                        "example": true
                    },
                    "id": {
                        "description": "ID",
                        "type": "integer",
                        "example": 7
                    }
                },
                "type": "object"
            },
            "SetDetails": {
                "title": "SetDetails",
                "required": [
                    "id",
                    "title",
                    "plugins",
                    "themes"
                ],
                "properties": {
                    "id": {
                        "description": "ID",
                        "type": "integer",
                        "example": "7"
                    },
                    "title": {
                        "description": "Set name",
                        "type": "string",
                        "example": "WordPress Essentials"
                    },
                    "plugins": {
                        "description": "Plugins",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SetDetailsAssetResponse"
                        }
                    },
                    "themes": {
                        "description": "Themes",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SetDetailsAssetResponse"
                        }
                    }
                },
                "type": "object"
            },
            "RunSmartPhpUpdateRequest": {
                "required": [
                    "installationId",
                    "newSubDomain",
                    "php"
                ],
                "properties": {
                    "installationId": {
                        "description": "Installation ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "newSubDomain": {
                        "description": "Create subdomain",
                        "required": [
                            "parentDomain"
                        ],
                        "properties": {
                            "parentDomain": {
                                "description": "Under this domain will be created subdomain. ID on Plesk or domain name on cPanel.",
                                "type": "string",
                                "example": "1"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "php": {
                        "description": "PHP handle identifier",
                        "type": "string",
                        "example": "php7.4-fpm"
                    }
                },
                "type": "object"
            },
            "CoreUpdateInfo": {
                "title": "CoreUpdateInfo",
                "required": [
                    "update",
                    "restorePoint"
                ],
                "properties": {
                    "update": {
                        "description": "WordPress core update is required",
                        "type": "boolean",
                        "example": "true"
                    },
                    "restorePoint": {
                        "description": "Restore point creation required",
                        "type": "boolean",
                        "example": "true"
                    }
                },
                "type": "object"
            },
            "LaunchInstallationUpdate": {
                "title": "LaunchInstallationUpdate",
                "required": [
                    "installationId",
                    "core",
                    "plugins",
                    "themes"
                ],
                "properties": {
                    "installationId": {
                        "type": "integer",
                        "example": "42"
                    },
                    "core": {
                        "$ref": "#/components/schemas/CoreUpdateInfo"
                    },
                    "plugins": {
                        "description": "Plugin slugs to update",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "akismet",
                            "hello"
                        ]
                    },
                    "themes": {
                        "description": "Theme slugs to update",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "twentytwenty",
                            "twentytwentyone"
                        ]
                    }
                },
                "type": "object"
            },
            "CoreVulnerabilityStatus": {
                "required": [
                    "version",
                    "availableVersion",
                    "availableMinorVersion",
                    "vulnerabilities"
                ],
                "properties": {
                    "version": {
                        "description": "WordPress version",
                        "type": "string",
                        "example": "5.1.3"
                    },
                    "availableVersion": {
                        "description": "WordPress version available for update",
                        "type": "string",
                        "example": "5.8",
                        "nullable": true
                    },
                    "availableMinorVersion": {
                        "description": "WordPress minor version available for update",
                        "type": "string",
                        "example": "5.7.8",
                        "nullable": true
                    },
                    "vulnerabilities": {
                        "description": "WordPress core vulnerabilities",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Vulnerability"
                        }
                    }
                },
                "type": "object"
            },
            "InstallationVulnerabilityStatus": {
                "required": [
                    "id",
                    "displayTitle",
                    "lastVulnerabilityCheckTimestamp",
                    "vulnerable",
                    "applicable",
                    "core",
                    "plugins",
                    "themes"
                ],
                "properties": {
                    "id": {
                        "description": "Installation ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "displayTitle": {
                        "description": "WordPress site title",
                        "type": "string",
                        "example": "example.com/wordpress"
                    },
                    "lastVulnerabilityCheckTimestamp": {
                        "description": "Last time WordPress site was checked for vulnerabilities",
                        "type": "integer",
                        "example": "1655285582",
                        "nullable": true
                    },
                    "applicable": {
                        "description": "Vulnerability feature might be disabled by the server administrator",
                        "type": "boolean",
                        "example": "true"
                    },
                    "vulnerable": {
                        "description": "WordPress site vulnerability status",
                        "type": "boolean",
                        "example": "true",
                        "nullable": true
                    },
                    "core": {
                        "$ref": "#/components/schemas/CoreVulnerabilityStatus"
                    },
                    "plugins": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PluginVulnerabilityStatus"
                        }
                    },
                    "themes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ThemeVulnerabilityStatus"
                        }
                    }
                },
                "type": "object"
            },
            "PluginVulnerabilityStatus": {
                "required": [
                    "slug",
                    "title",
                    "version",
                    "availableVersion",
                    "status",
                    "deactivationReason",
                    "vulnerabilities"
                ],
                "properties": {
                    "slug": {
                        "description": "Plugin slug",
                        "type": "string",
                        "example": "akismet"
                    },
                    "title": {
                        "description": "Plugin title",
                        "type": "string",
                        "example": "Akismet"
                    },
                    "version": {
                        "description": "Plugin version",
                        "type": "string",
                        "example": "3.1.4"
                    },
                    "availableVersion": {
                        "description": "Plugin version available for update",
                        "type": "string",
                        "example": "3.1.5",
                        "nullable": true
                    },
                    "status": {
                        "description": "Plugin status",
                        "type": "boolean",
                        "example": "true"
                    },
                    "deactivationReason": {
                        "description": "Plugin deactivation reason",
                        "type": "string",
                        "example": "mitigation",
                        "nullable": true
                    },
                    "vulnerabilities": {
                        "description": "Plugin vulnerabilities",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Vulnerability"
                        }
                    }
                },
                "type": "object"
            },
            "ThemeVulnerabilityStatus": {
                "required": [
                    "slug",
                    "title",
                    "version",
                    "availableVersion",
                    "status",
                    "vulnerabilities"
                ],
                "properties": {
                    "slug": {
                        "description": "Theme slug",
                        "type": "string",
                        "example": "twentytwentytwo"
                    },
                    "title": {
                        "description": "Theme title",
                        "type": "string",
                        "example": "Twenty Twenty-Two 1.2"
                    },
                    "version": {
                        "description": "Theme version",
                        "type": "string",
                        "example": "1.2"
                    },
                    "availableVersion": {
                        "description": "Theme version available for update",
                        "type": "string",
                        "example": "1.3",
                        "nullable": true
                    },
                    "status": {
                        "description": "Theme status",
                        "type": "boolean",
                        "example": "true"
                    },
                    "vulnerabilities": {
                        "description": "Theme vulnerabilities",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Vulnerability"
                        }
                    }
                },
                "type": "object"
            },
            "Vulnerability": {
                "required": [
                    "id",
                    "title",
                    "description",
                    "directUrl",
                    "fixedIn",
                    "cvssScore",
                    "cve",
                    "exploited",
                    "disclosedAt",
                    "mitigations",
                    "riskRank",
                    "providers"
                ],
                "properties": {
                    "id": {
                        "description": "Vulnerability ID",
                        "type": "string",
                        "example": "CVE-PS-8019"
                    },
                    "title": {
                        "description": "Vulnerability title",
                        "type": "string",
                        "example": "WordPress <= 5.9.1 - Stored Cross-Site Scripting (XSS) vulnerability"
                    },
                    "description": {
                        "description": "Vulnerability description",
                        "type": "string",
                        "example": "Stored Cross-Site Scripting (XSS) vulnerability discovered by Ben Bidner in WordPress (versions <= 5.9.1)."
                    },
                    "directUrl": {
                        "description": "Vulnerability details URL",
                        "type": "string",
                        "example": "https://patchstack.com/database/vulnerability/wordpress/wordpress-5-9-1-stored-cross-site-scripting-xss-vulnerability"
                    },
                    "riskRank": {
                        "description": "Vulnerability risk rank",
                        "type": "string",
                        "enum": [
                            "low",
                            "medium",
                            "high",
                            "critical"
                        ],
                        "example": "low"
                    },
                    "cvssScore": {
                        "description": "Vulnerability score by CVSSv3.1",
                        "type": "number",
                        "example": "9.9",
                        "nullable": "true"
                    },
                    "cve": {
                        "description": "List of CVE corresponding to vulnerability",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "CVE-2222-22"
                        }
                    },
                    "exploited": {
                        "type": "boolean",
                        "example": "true"
                    },
                    "disclosedAt": {
                        "description": "Date/time when the vulnerability was disclosed",
                        "type": "string",
                        "example": "1970-01-01T00:00:00+00:00",
                        "nullable": "true"
                    },
                    "fixedIn": {
                        "description": "Version where vulnerability was fixed",
                        "type": "string",
                        "example": "5.9.2",
                        "nullable": true
                    },
                    "mitigations": {
                        "description": "Vulnerability mitigation options",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VulnerabilityMitigation"
                        }
                    },
                    "providers": {
                        "description": "Vulnerability providers information",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VulnerabilityProvider"
                        }
                    }
                },
                "type": "object"
            },
            "VulnerabilityMitigation": {
                "required": [
                    "type",
                    "id",
                    "applied"
                ],
                "properties": {
                    "type": {
                        "description": "Mitigation option type",
                        "type": "string",
                        "enum": [
                            "securityMeasure",
                            "virtualPatch",
                            "update",
                            "deactivateAsset"
                        ],
                        "example": "securityMeasure"
                    },
                    "id": {
                        "description": "Mitigation option identifier",
                        "type": "string",
                        "example": "pingbacks"
                    },
                    "applied": {
                        "description": "Mitigation option applied or not",
                        "type": "boolean",
                        "example": "false"
                    }
                },
                "type": "object"
            },
            "VulnerabilityProvider": {
                "required": [
                    "provider",
                    "directUrl"
                ],
                "properties": {
                    "provider": {
                        "description": "Type of vulnerability provider",
                        "type": "string",
                        "enum": [
                            "patchstack",
                            "wordfence"
                        ],
                        "example": "patchstack"
                    },
                    "directUrl": {
                        "description": "Link to vulnerability description",
                        "type": "string",
                        "example": "https://some-url.com"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "ScheduledTasksTimeResponse": {
                "description": "Time to run scheduled task",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ScheduledTasksTimeResponse"
                        }
                    }
                }
            },
            "ScannerLogListResponse": {
                "description": "Log messages of the scanner process",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "ScannerLogListResponse",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/ScannerLog"
                            }
                        }
                    }
                }
            },
            "ServerInfoResponse": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "ServerInfoResponse",
                            "required": [
                                "platform",
                                "hostname",
                                "os",
                                "version",
                                "revision",
                                "guid"
                            ],
                            "properties": {
                                "platform": {
                                    "description": "Platform type",
                                    "type": "string",
                                    "enum": [
                                        "unix",
                                        "windows"
                                    ],
                                    "example": "unix"
                                },
                                "hostname": {
                                    "description": "Hostname",
                                    "type": "string",
                                    "example": "example.com"
                                },
                                "os": {
                                    "required": [
                                        "name",
                                        "version",
                                        "architecture"
                                    ],
                                    "properties": {
                                        "name": {
                                            "description": "Operating system name",
                                            "type": "string",
                                            "example": "almalinux",
                                            "nullable": true
                                        },
                                        "version": {
                                            "description": "Operating system version",
                                            "type": "string",
                                            "example": "8.0",
                                            "nullable": true
                                        },
                                        "architecture": {
                                            "description": "Operating system architecture",
                                            "type": "string",
                                            "enum": [
                                                "x86_64",
                                                "aarch64"
                                            ],
                                            "example": "x86_64",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                },
                                "version": {
                                    "description": "Version",
                                    "type": "string",
                                    "example": "6.2"
                                },
                                "revision": {
                                    "description": "Revision",
                                    "type": "string",
                                    "example": "048"
                                },
                                "guid": {
                                    "description": "GUID",
                                    "type": "string",
                                    "example": "baa58292-fee0-4ecb-9da1-bba0cc5adea7"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "BackgroundTaskResponse": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/BackgroundTaskResponse"
                        }
                    }
                }
            },
            "BackgroundTaskWithUrlResponse": {
                "description": "Created",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/BackgroundTaskWithUrlResponse"
                        }
                    }
                }
            },
            "BackgroundTasksResponse": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "BackgroundTasksResponse",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/responses/BackgroundTaskResponse"
                            }
                        }
                    }
                }
            },
            "ChangelogsResponse": {
                "description": "WP Toolkit changelog",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "ChangelogsResponse",
                            "required": [
                                "changelog"
                            ],
                            "properties": {
                                "changelog": {
                                    "type": "string",
                                    "example": "# 5.7.4 (19 Oct 2021)\\n\\n* [*] Updated translations.",
                                    "nullable": true
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "BadRequestResponse": {
                "description": "Bad Request",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "BadRequestResponse",
                            "required": [
                                "meta"
                            ],
                            "properties": {
                                "meta": {
                                    "$ref": "#/components/schemas/Meta"
                                }
                            },
                            "type": "object"
                        },
                        "example": {
                            "meta": {
                                "status": 400,
                                "message": "Bad Request"
                            }
                        }
                    }
                }
            },
            "ConflictExceptionResponse": {
                "description": "Conflict response",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "ConflictResponse",
                            "required": [
                                "meta"
                            ],
                            "properties": {
                                "meta": {
                                    "$ref": "#/components/schemas/Meta"
                                }
                            },
                            "type": "object"
                        },
                        "example": {
                            "meta": {
                                "status": 409,
                                "message": "Item already exist"
                            }
                        }
                    }
                }
            },
            "FailedDependencyResponse": {
                "description": "FailedDependency",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/FailedDependencyResponse"
                        }
                    }
                }
            },
            "ForbiddenResponse": {
                "description": "Forbidden",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "ForbiddenResponse",
                            "required": [
                                "meta"
                            ],
                            "properties": {
                                "meta": {
                                    "$ref": "#/components/schemas/Meta"
                                }
                            },
                            "type": "object"
                        },
                        "example": {
                            "meta": {
                                "status": 403,
                                "message": "Forbidden"
                            }
                        }
                    }
                }
            },
            "InternalServerErrorResponse": {
                "description": "Internal Server Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "InternalServerErrorResponse",
                            "required": [
                                "meta"
                            ],
                            "properties": {
                                "meta": {
                                    "$ref": "#/components/schemas/Meta"
                                }
                            },
                            "type": "object"
                        },
                        "example": {
                            "meta": {
                                "status": 500,
                                "message": "Internal Server Error"
                            }
                        }
                    }
                }
            },
            "NotFoundResponse": {
                "description": "Not Found",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "NotFoundResponse",
                            "required": [
                                "meta"
                            ],
                            "properties": {
                                "meta": {
                                    "$ref": "#/components/schemas/Meta"
                                }
                            },
                            "type": "object"
                        },
                        "example": {
                            "meta": {
                                "status": 404,
                                "message": "Not Found"
                            }
                        }
                    }
                }
            },
            "UnauthorizedResponse": {
                "description": "Unauthorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "UnauthorizedResponse",
                            "required": [
                                "meta"
                            ],
                            "properties": {
                                "meta": {
                                    "$ref": "#/components/schemas/Meta"
                                }
                            },
                            "type": "object"
                        },
                        "example": {
                            "meta": {
                                "status": 401,
                                "message": "Unauthorized"
                            }
                        }
                    }
                }
            },
            "UnprocessableEntityResponse": {
                "description": "Unprocessable Entity",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UnprocessableEntityResponse"
                        }
                    }
                }
            },
            "WpAgentMinVersionConstraintFailedException": {
                "description": "Wp-agent min version constraint failed error",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "WpAgentMinVersionConstraintFailedException",
                            "required": [
                                "meta"
                            ],
                            "properties": {
                                "meta": {
                                    "$ref": "#/components/schemas/Meta"
                                }
                            },
                            "type": "object"
                        },
                        "example": {
                            "meta": {
                                "status": 412,
                                "message": "WP-Agent minimal version check failed, version needed: 5.2.5"
                            }
                        }
                    }
                }
            },
            "InstallationBackupsMetaResponse": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "InstallationBackupsMetaResponse",
                            "required": [
                                "value",
                                "meta"
                            ],
                            "properties": {
                                "value": {
                                    "description": "Backups list",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/InstallationBackupMeta"
                                    }
                                },
                                "meta": {
                                    "required": [
                                        "limit",
                                        "fileManagerUrl",
                                        "dirName"
                                    ],
                                    "properties": {
                                        "limit": {
                                            "description": "Service plan limit of installation backups",
                                            "type": "integer",
                                            "example": "3",
                                            "nullable": true
                                        },
                                        "fileManagerUrl": {
                                            "description": "File Manager URL for backups directory",
                                            "type": "string",
                                            "example": "frontend/paper_lantern/filemanager/index.html?dir=%2Fhome%2Facc2%2Fwordpress-backups",
                                            "nullable": true
                                        },
                                        "dirName": {
                                            "description": "Backups directory name",
                                            "type": "string",
                                            "example": "wordpress-backups"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "CloneStubResponse": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "CloneStubResponse",
                            "required": [
                                "value",
                                "meta"
                            ],
                            "properties": {
                                "value": {
                                    "required": [
                                        "database",
                                        "domain",
                                        "installationPath"
                                    ],
                                    "properties": {
                                        "database": {
                                            "$ref": "#/components/schemas/CloneStubDatabaseResponse"
                                        },
                                        "domain": {
                                            "$ref": "#/components/schemas/CloneStubDomainResponse"
                                        },
                                        "installationPath": {
                                            "$ref": "#/components/schemas/CloneStubInstallationPathResponse"
                                        }
                                    },
                                    "type": "object"
                                },
                                "meta": {
                                    "required": [
                                        "messages"
                                    ],
                                    "properties": {
                                        "messages": {
                                            "$ref": "#/components/schemas/CloneStubMessagesResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "HotlinkProtectionSettingsResponse": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "HotlinkProtectionSettings",
                            "required": [
                                "domains",
                                "fileExtensions"
                            ],
                            "properties": {
                                "domains": {
                                    "description": "List of allowed domains",
                                    "type": "array",
                                    "items": {
                                        "title": "HotlinkProtectionSettingsDomain",
                                        "type": "string",
                                        "example": "example.tld"
                                    }
                                },
                                "fileExtensions": {
                                    "description": "List of allowed file extensions",
                                    "type": "array",
                                    "items": {
                                        "title": "HotlinkProtectionSettingsFileExtension",
                                        "type": "string",
                                        "example": [
                                            "gif",
                                            "png"
                                        ]
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "MetaHotlinkProtectionSettingsResponse": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "MetaHotlinkProtectionSettings",
                            "required": [
                                "value",
                                "meta"
                            ],
                            "properties": {
                                "value": {
                                    "required": [
                                        "domains",
                                        "fileExtensions"
                                    ],
                                    "properties": {
                                        "domains": {
                                            "required": [
                                                "value",
                                                "meta"
                                            ],
                                            "properties": {
                                                "value": {
                                                    "type": "array",
                                                    "items": {
                                                        "title": "MetaHotlinkProtectionSettingsDomainsValue",
                                                        "required": [
                                                            "value",
                                                            "meta"
                                                        ],
                                                        "properties": {
                                                            "value": {
                                                                "type": "string",
                                                                "example": "google.com"
                                                            },
                                                            "meta": {
                                                                "title": "MetaHotlinkProtectionSettingsDomainsValueMeta",
                                                                "required": [
                                                                    "persistent"
                                                                ],
                                                                "properties": {
                                                                    "persistent": {
                                                                        "type": "boolean",
                                                                        "example": true
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "meta": {
                                                    "required": [
                                                        "defaults"
                                                    ],
                                                    "properties": {
                                                        "defaults": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "example": [
                                                                "google.com",
                                                                "example.tld"
                                                            ]
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "fileExtensions": {
                                            "required": [
                                                "value",
                                                "meta"
                                            ],
                                            "properties": {
                                                "value": {
                                                    "type": "array",
                                                    "items": {
                                                        "title": "MetaHotlinkProtectionSettingsFileExtensionsValue",
                                                        "required": [
                                                            "value",
                                                            "meta"
                                                        ],
                                                        "properties": {
                                                            "value": {
                                                                "type": "string",
                                                                "example": "gif"
                                                            },
                                                            "meta": {
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "meta": {
                                                    "title": "MetaHotlinkProtectionSettingsFileExtensionsMeta",
                                                    "required": [
                                                        "defaults"
                                                    ],
                                                    "properties": {
                                                        "defaults": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "example": [
                                                                "gif",
                                                                "png"
                                                            ]
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "meta": {
                                    "properties": {},
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "Integrity": {
                "description": "Information about WordPress integrity check",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "Integrity",
                            "required": [
                                "available",
                                "tasks"
                            ],
                            "properties": {
                                "available": {
                                    "description": "Availability of 'Check WordPress Integrity' feature",
                                    "type": "boolean"
                                },
                                "tasks": {
                                    "required": [
                                        "reinstall"
                                    ],
                                    "properties": {
                                        "reinstall": {
                                            "example": {
                                                "id": 1,
                                                "code": "reinstall-core",
                                                "title": "Reinstalling WordPress core files",
                                                "status": "running",
                                                "progress": 0,
                                                "steps": [
                                                    {
                                                        "code": "reinstallCore",
                                                        "title": "Task in progress",
                                                        "icon": "",
                                                        "progress": -1,
                                                        "status": "running",
                                                        "hint": ""
                                                    }
                                                ],
                                                "publicParams": {
                                                    "coreReinstallationResult": "Finished successfully"
                                                },
                                                "errors": []
                                            },
                                            "nullable": true,
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/BackgroundTaskResponse"
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "InstallationLabelsResponse": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/InstallationLabel"
                            }
                        }
                    }
                }
            },
            "MetaInstallationLabelsResponse": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "MetaInstallationLabels",
                            "required": [
                                "value",
                                "meta"
                            ],
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetaInstallationLabel"
                                    }
                                },
                                "meta": {
                                    "required": [
                                        "template"
                                    ],
                                    "properties": {
                                        "template": {
                                            "$ref": "#/components/schemas/MetaInstallationLabel"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "MaintenancePreviewResponse": {
                "description": "Created",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "MaintenancePreviewResponse",
                            "required": [
                                "url"
                            ],
                            "properties": {
                                "url": {
                                    "description": "URL to the maintenance mode preview",
                                    "type": "string",
                                    "example": "https://example.com/maintenance-preview.php",
                                    "nullable": true
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "MaintenanceSettingsResponse": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "MaintenanceSettingsResponse",
                            "required": [
                                "fullMode",
                                "texts",
                                "timer",
                                "socialNetworks",
                                "defaultSocialNetworks",
                                "templateFilePath"
                            ],
                            "properties": {
                                "fullMode": {
                                    "description": "Allow access to WordPress admin dashboard when maintance mode is enabled",
                                    "type": "boolean",
                                    "example": "true"
                                },
                                "texts": {
                                    "description": "Change the text displayed on the maintenance screen",
                                    "required": [
                                        "title",
                                        "header",
                                        "subheader"
                                    ],
                                    "properties": {
                                        "title": {
                                            "description": "Browser page title",
                                            "type": "string",
                                            "example": "Scheduled Maintenance"
                                        },
                                        "header": {
                                            "description": "Text block 1 (bigger font)",
                                            "type": "string",
                                            "example": "The website is undergoing scheduled maintenance."
                                        },
                                        "subheader": {
                                            "description": "Text block 2 (smaller font)",
                                            "type": "string",
                                            "example": "Sorry for the inconvenience. Come back a bit later, we will be ready soon!"
                                        }
                                    },
                                    "type": "object"
                                },
                                "timer": {
                                    "description": "Countdown timer",
                                    "required": [
                                        "enabled",
                                        "days",
                                        "hours",
                                        "minutes"
                                    ],
                                    "properties": {
                                        "enabled": {
                                            "description": "Enable timer",
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "days": {
                                            "description": "Remaining days",
                                            "type": "number",
                                            "example": "5"
                                        },
                                        "hours": {
                                            "description": "Remaining hours",
                                            "type": "number",
                                            "example": "12"
                                        },
                                        "minutes": {
                                            "description": "Remaining minutes",
                                            "type": "number",
                                            "example": "30"
                                        }
                                    },
                                    "type": "object"
                                },
                                "socialNetworks": {
                                    "description": "Links to your social network pages",
                                    "required": [
                                        "facebook",
                                        "twitter",
                                        "instagram"
                                    ],
                                    "properties": {
                                        "facebook": {
                                            "description": "Link to Facebook",
                                            "type": "string",
                                            "example": "https://www.facebook.com/"
                                        },
                                        "twitter": {
                                            "description": "Link to Twitter",
                                            "type": "string",
                                            "example": "https://twitter.com/"
                                        },
                                        "instagram": {
                                            "description": "Link to Instagram",
                                            "type": "string",
                                            "example": "https://instagram.com"
                                        }
                                    },
                                    "type": "object"
                                },
                                "defaultSocialNetworks": {
                                    "description": "Default links to your social network pages",
                                    "required": [
                                        "facebook",
                                        "twitter",
                                        "instagram"
                                    ],
                                    "properties": {
                                        "facebook": {
                                            "description": "Link to Facebook",
                                            "type": "string",
                                            "example": "https://www.facebook.com/"
                                        },
                                        "twitter": {
                                            "description": "Link to Twitter",
                                            "type": "string",
                                            "example": "https://twitter.com/"
                                        },
                                        "instagram": {
                                            "description": "Link to Instagram",
                                            "type": "string",
                                            "example": "https://instagram.com"
                                        }
                                    },
                                    "type": "object"
                                },
                                "templateFilePath": {
                                    "description": "Path to the maintenance mode template",
                                    "type": "string",
                                    "example": "/var/www/vhosts/example.com/httpdocs/wp-content/maintenance/template.phtml"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "MaintenanceTemplateCustomizationUrlResponse": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "MaintenanceTemplateCustomizationUrlResponse",
                            "required": [
                                "url"
                            ],
                            "properties": {
                                "url": {
                                    "description": "URL",
                                    "type": "string",
                                    "example": "/admin/subscription/login/id/1/?pageUrl=/smb/file-manager/code-editor?currentDir=/httpdocs/wp-content/maintenance&file=template.phtml",
                                    "nullable": true
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "RemoteAgentInstallationProperties": {
                "description": "Remote WordPress installation properties",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "RemoteAgentInstallationProperties",
                            "required": [
                                "pluginUrl",
                                "token",
                                "ip"
                            ],
                            "properties": {
                                "pluginUrl": {
                                    "description": "Plugin URL",
                                    "type": "string",
                                    "nullable": true
                                },
                                "token": {
                                    "description": "Token",
                                    "type": "string",
                                    "nullable": true
                                },
                                "ip": {
                                    "description": "IP address",
                                    "type": "string",
                                    "nullable": true
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "RemoteServerInstallationProperties": {
                "description": "Properties of a WordPress installation on a remote server",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "RemoteServerInstallationProperties",
                            "required": [
                                "ip",
                                "systemUser",
                                "php"
                            ],
                            "properties": {
                                "ip": {
                                    "description": "IP address",
                                    "type": "string",
                                    "nullable": true
                                },
                                "systemUser": {
                                    "description": "System user",
                                    "type": "string",
                                    "nullable": true
                                },
                                "php": {
                                    "description": "PHP",
                                    "required": [
                                        "bin",
                                        "ini"
                                    ],
                                    "properties": {
                                        "bin": {
                                            "description": "Path to PHP binary",
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "ini": {
                                            "description": "Path to PHP ini",
                                            "type": "string",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "VirtualPatchesPurchaseSessionResponse": {
                "description": "Virtual patches purchase session info",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/VirtualPatchesPurchaseSessionData"
                        }
                    }
                }
            },
            "VirtualPatchesSubscriptionCustomerPortalUrlResponse": {
                "description": "Url to virtual patches subscription customer portal",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/VirtualPatchesSubscriptionCustomerPortalUrl"
                        }
                    }
                }
            },
            "VirtualPatchesSubscriptionInfoResponse": {
                "description": "Virtual patches subscription info",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/VirtualPatchesSubscriptionInfo"
                        }
                    }
                }
            },
            "VirtualPatchesSubscriptionGuidResponse": {
                "description": "Virtual patches subscription GUID responce",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "VirtualPatchesSubscriptionGuidResponse",
                            "required": [
                                "guid"
                            ],
                            "properties": {
                                "guid": {
                                    "description": "Virtual patches subscription GUID",
                                    "type": "string",
                                    "example": "33d5430e-febd-433d-99f7-9d1dcefbbfec"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "MetaWordPressDebugSettingsResponse": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "MetaWordPressDebugSettingsResponse",
                            "required": [
                                "value",
                                "meta"
                            ],
                            "properties": {
                                "value": {
                                    "required": [
                                        "wpDebug",
                                        "wpDebugLog",
                                        "wpDebugDisplay",
                                        "scriptDebug",
                                        "saveQueries"
                                    ],
                                    "properties": {
                                        "wpDebug": {
                                            "required": [
                                                "value",
                                                "meta"
                                            ],
                                            "properties": {
                                                "value": {
                                                    "description": "WP_DEBUG setting",
                                                    "type": "boolean",
                                                    "example": "true"
                                                },
                                                "meta": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "wpDebugLog": {
                                            "required": [
                                                "value",
                                                "meta"
                                            ],
                                            "properties": {
                                                "value": {
                                                    "description": "WP_DEBUG_LOG setting",
                                                    "type": "boolean",
                                                    "example": "true"
                                                },
                                                "meta": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "wpDebugDisplay": {
                                            "required": [
                                                "value",
                                                "meta"
                                            ],
                                            "properties": {
                                                "value": {
                                                    "description": "WP_DEBUG_DISPLAY setting",
                                                    "type": "boolean",
                                                    "example": "true"
                                                },
                                                "meta": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "scriptDebug": {
                                            "required": [
                                                "value",
                                                "meta"
                                            ],
                                            "properties": {
                                                "value": {
                                                    "description": "SCRIPT_DEBUG setting",
                                                    "type": "boolean",
                                                    "example": "true"
                                                },
                                                "meta": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "saveQueries": {
                                            "required": [
                                                "value",
                                                "meta"
                                            ],
                                            "properties": {
                                                "value": {
                                                    "description": "SAVEQUERIES setting",
                                                    "type": "boolean",
                                                    "example": "true"
                                                },
                                                "meta": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "meta": {
                                    "required": [
                                        "debugLogUrl",
                                        "wpContentUrl"
                                    ],
                                    "properties": {
                                        "debugLogUrl": {
                                            "description": "Log Browser URL for WordPress debug log",
                                            "type": "string",
                                            "example": "/smb/log-file/browser/id/2/custom/true/?file=/path/to/debug.log"
                                        },
                                        "wpContentUrl": {
                                            "description": "File Manager URL for WordPress wp-content directory",
                                            "type": "string",
                                            "example": "/admin/subscription/login/id/18/?pageUrl=/smb/file-manager/list?currentDir=/httpdocs/wp-content"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "WordPressDebugSettingsResponse": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "WordPressDebugSettingsResponse",
                            "required": [
                                "wpDebug",
                                "wpDebugLog",
                                "wpDebugDisplay",
                                "scriptDebug",
                                "saveQueries"
                            ],
                            "properties": {
                                "wpDebug": {
                                    "description": "WP_DEBUG setting",
                                    "type": "boolean",
                                    "example": "true"
                                },
                                "wpDebugLog": {
                                    "description": "WP_DEBUG_LOG setting",
                                    "type": "boolean",
                                    "example": "true"
                                },
                                "wpDebugDisplay": {
                                    "description": "WP_DEBUG_DISPLAY setting",
                                    "type": "boolean",
                                    "example": "true"
                                },
                                "scriptDebug": {
                                    "description": "SCRIPT_DEBUG setting",
                                    "type": "boolean",
                                    "example": "true"
                                },
                                "saveQueries": {
                                    "description": "SAVEQUERIES setting",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "WpCronTakeoverInstanceResponse": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "WpCronTakeoverInstanceFeature",
                            "required": [
                                "available"
                            ],
                            "properties": {
                                "available": {
                                    "description": "Availability of wp-cron takeover feature",
                                    "type": "boolean",
                                    "example": "true"
                                },
                                "status": {
                                    "description": "Status",
                                    "type": "boolean",
                                    "example": "true"
                                },
                                "taskReplacementStatus": {
                                    "description": "Status",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "MetaWpCronTakeoverInstanceResponse": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "MetaWpCronTakeoverInstanceFeature",
                            "required": [
                                "value",
                                "meta"
                            ],
                            "properties": {
                                "value": {
                                    "required": [
                                        "available"
                                    ],
                                    "properties": {
                                        "available": {
                                            "required": [
                                                "value",
                                                "meta"
                                            ],
                                            "properties": {
                                                "value": {
                                                    "type": "boolean"
                                                },
                                                "meta": {
                                                    "properties": {},
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status": {
                                            "required": [
                                                "value",
                                                "meta"
                                            ],
                                            "properties": {
                                                "value": {
                                                    "type": "boolean"
                                                },
                                                "meta": {
                                                    "properties": {},
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "taskReplacementStatus": {
                                            "required": [
                                                "value",
                                                "meta"
                                            ],
                                            "properties": {
                                                "value": {
                                                    "type": "boolean"
                                                },
                                                "meta": {
                                                    "required": [
                                                        "managementUri"
                                                    ],
                                                    "properties": {
                                                        "managementUri": {
                                                            "type": "string",
                                                            "nullable": true
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "meta": {
                                    "properties": {},
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "InstallationPluginResponse": {
                "description": "Plugin info",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/InstallationPlugin"
                        }
                    }
                }
            },
            "InstallationThemeResponse": {
                "description": "Theme info",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/InstallationTheme"
                        }
                    }
                }
            },
            "InstallationPluginsResponse": {
                "description": "Installation plugin list",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "InstallationPluginsResponse",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/InstallationPlugin"
                            }
                        }
                    }
                }
            },
            "InstallationThemesResponse": {
                "description": "Installation theme list",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "InstallationThemesResponse",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/InstallationTheme"
                            }
                        }
                    }
                }
            },
            "InstallationAutoUpdateResponse": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/InstallationAutoUpdateResponse"
                        }
                    }
                }
            },
            "InstallationBackupInfoListResponse": {
                "description": "Installation backup information list",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "InstallationBackupListResponse",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/InstallationBackupInfo"
                            }
                        }
                    }
                }
            },
            "InstallationLoginResponse": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/InstallationLoginResponse"
                        }
                    }
                }
            },
            "InstallationResponse": {
                "description": "Installation",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Installation"
                        }
                    }
                }
            },
            "InstallationSecurityPoliciesResponse": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/InstallationSecurityPoliciesResponse"
                        }
                    }
                }
            },
            "InstallationsListResponse": {
                "description": "Installation list",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "InstallationsListResponse",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Installation"
                            }
                        }
                    }
                }
            },
            "PhpHandlersResponse": {
                "description": "PHP handlers available for WordPress installation",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "PhpHandlersResponse",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/PhpHandler"
                            }
                        }
                    }
                }
            },
            "SetupDrawerSettingsResponse": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "SetupDrawerSettingsResponse",
                            "required": [
                                "loginUrl",
                                "currentLogin",
                                "currentPassword",
                                "currentEmail",
                                "currentLanguage",
                                "availableLogins",
                                "availableLanguages"
                            ],
                            "properties": {
                                "loginUrl": {
                                    "description": "Login URL to WordPress admin dashboard",
                                    "type": "string",
                                    "example": "https://example.com/wp-login.php",
                                    "nullable": true
                                },
                                "currentLogin": {
                                    "description": "Site administrator username for WordPress admin dashboard",
                                    "type": "string",
                                    "example": "admin",
                                    "nullable": true
                                },
                                "currentPassword": {
                                    "description": "Site administrator password for WordPress admin dashboard",
                                    "type": "string",
                                    "nullable": true
                                },
                                "currentEmail": {
                                    "description": "Site administrator email",
                                    "type": "string",
                                    "example": "admin@example.com",
                                    "nullable": true
                                },
                                "currentLanguage": {
                                    "description": "Installation language",
                                    "type": "string",
                                    "example": "en_US",
                                    "nullable": true
                                },
                                "availableLogins": {
                                    "description": "List of available administrator accounts",
                                    "type": "array",
                                    "items": {
                                        "title": "SetupDrawerSettingsResponseLoginsItem",
                                        "required": [
                                            "login",
                                            "title"
                                        ],
                                        "properties": {
                                            "login": {
                                                "type": "string",
                                                "example": "admin"
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "Administrator"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "availableLanguages": {
                                    "description": "List of available languages",
                                    "type": "array",
                                    "items": {
                                        "title": "SetupDrawerSettingsResponseLanguagesItem",
                                        "required": [
                                            "code",
                                            "title"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "en_US"
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "English"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "SmartPhpUpdateStubResponse": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "SmartPhpUpdateStubResponse",
                            "required": [
                                "value",
                                "meta"
                            ],
                            "properties": {
                                "value": {
                                    "required": [
                                        "newSubdomain",
                                        "php"
                                    ],
                                    "properties": {
                                        "newSubdomain": {
                                            "required": [
                                                "value"
                                            ],
                                            "properties": {
                                                "value": {
                                                    "required": [
                                                        "parentDomain"
                                                    ],
                                                    "properties": {
                                                        "parentDomain": {
                                                            "$ref": "#/components/schemas/ParameterWithChoices"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object",
                                            "nullable": true
                                        },
                                        "php": {
                                            "$ref": "#/components/schemas/SmartPhpUpdateStubPhpResponse"
                                        }
                                    },
                                    "type": "object"
                                },
                                "meta": {
                                    "required": [
                                        "tasks",
                                        "taskStatus",
                                        "messages",
                                        "limited"
                                    ],
                                    "properties": {
                                        "tasks": {
                                            "required": [
                                                "update"
                                            ],
                                            "properties": {
                                                "update": {
                                                    "oneOf": [
                                                        {
                                                            "$ref": "#/components/schemas/BackgroundTaskResponse"
                                                        }
                                                    ],
                                                    "nullable": true,
                                                    "description": "Smart PHP Update task",
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object",
                                            "example": {
                                                "update": {
                                                    "id": 1,
                                                    "code": "smart-php-update-instance",
                                                    "title": "Performing Smart PHP Update test run for example.tld",
                                                    "status": "running",
                                                    "progress": 0,
                                                    "steps": [
                                                        {
                                                            "code": "spu-initial-check",
                                                            "title": "Analyzing the original site",
                                                            "icon": "",
                                                            "progress": -1,
                                                            "status": "running",
                                                            "hint": ""
                                                        }
                                                    ],
                                                    "publicParams": [],
                                                    "errors": []
                                                }
                                            }
                                        },
                                        "taskStatus": {
                                            "$ref": "#/components/schemas/InstallationSmartPhpUpdatesTaskStatusEnum"
                                        },
                                        "limited": {
                                            "description": "Smart PHP Update available for specific account configurations",
                                            "type": "boolean"
                                        },
                                        "messages": {
                                            "$ref": "#/components/schemas/MessagesResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "WordPressAssetCatalogResponse": {
                "description": "WordPress asset info",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/WordPressAsset"
                        }
                    }
                }
            },
            "WordPressAssetsCatalogResponse": {
                "description": "WordPress available assets info",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "WordPressAssetsCatalogResponse",
                            "required": [
                                "items",
                                "total"
                            ],
                            "properties": {
                                "total": {
                                    "description": "Total number of available assets",
                                    "type": "integer",
                                    "example": "123"
                                },
                                "items": {
                                    "description": "List of available assets",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WordPressAsset"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "WordPressUserResponse": {
                "description": "WordPress user",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "WordPressUser",
                            "required": [
                                "login",
                                "email"
                            ],
                            "properties": {
                                "login": {
                                    "description": "User login",
                                    "type": "string",
                                    "example": "johndoe"
                                },
                                "email": {
                                    "description": "User email",
                                    "type": "string",
                                    "example": "johndoe@example.com"
                                },
                                "password": {
                                    "description": "User password",
                                    "type": "string",
                                    "example": "superpassword",
                                    "nullable": true
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "CredentialsResponse": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "CredentialsResponse",
                            "required": [
                                "credentials",
                                "loginUrl"
                            ],
                            "properties": {
                                "credentials": {
                                    "required": [
                                        "login",
                                        "password"
                                    ],
                                    "properties": {
                                        "login": {
                                            "description": "WordPress admin dashboard username",
                                            "type": "string",
                                            "example": "admin_mn15865r"
                                        },
                                        "password": {
                                            "description": "WordPress admin dashboard password",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "loginUrl": {
                                    "description": "WordPress admin dashboard URL",
                                    "type": "string",
                                    "example": "https://example.com/wp-login.php"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "InstallationStubResponse": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "InstallationStubResponse",
                            "required": [
                                "admin",
                                "database",
                                "protocol",
                                "title",
                                "installationPath",
                                "autoUpdate",
                                "language",
                                "domain",
                                "version",
                                "set"
                            ],
                            "properties": {
                                "admin": {
                                    "$ref": "#/components/schemas/AdminSettings"
                                },
                                "database": {
                                    "$ref": "#/components/schemas/DatabaseSettings"
                                },
                                "protocol": {
                                    "$ref": "#/components/schemas/ParameterWithChoices"
                                },
                                "title": {
                                    "description": "Installation title",
                                    "required": [
                                        "value"
                                    ],
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "example": "Cute And Fluffy"
                                        }
                                    },
                                    "type": "object"
                                },
                                "installationPath": {
                                    "description": "Installation path",
                                    "required": [
                                        "value"
                                    ],
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "example": "wordpress"
                                        }
                                    },
                                    "type": "object"
                                },
                                "autoUpdate": {
                                    "$ref": "#/components/schemas/AutoUpdateSettings"
                                },
                                "language": {
                                    "$ref": "#/components/schemas/ParameterWithChoices"
                                },
                                "domain": {
                                    "$ref": "#/components/schemas/ParameterWithChoices"
                                },
                                "version": {
                                    "$ref": "#/components/schemas/ParameterWithChoices"
                                },
                                "set": {
                                    "$ref": "#/components/schemas/ParameterWithChoices"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "LicenseInfoResponse": {
                "description": "Info about current license",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "LicenseInfoResponse",
                            "properties": {
                                "virtualPatches": {
                                    "$ref": "#/components/schemas/VirtualPatchesInfo"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "InstallationsRemoverConfirmationResponse": {
                "description": "Installation removal confirmation",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "InstallationsRemoverConfirmationResponse",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/InstallationRemoveConfirmationResponse"
                            }
                        }
                    }
                }
            },
            "StatusResponse": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "StatusResponse",
                            "required": [
                                "status"
                            ],
                            "properties": {
                                "status": {
                                    "description": "Status",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "SecurityMeasuresResponse": {
                "description": "Security measure list",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "SecurityMeasures",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/SecurityMeasure"
                            }
                        }
                    }
                }
            },
            "SecurityMeasuresStatusesForInstallationsResponse": {
                "description": "Status of security measures",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "SecurityMeasuresStatusesForInstallations",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/SecurityMeasuresInstallationStatus"
                            }
                        }
                    }
                }
            },
            "SetDetailsResponse": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/SetDetails"
                        }
                    }
                }
            },
            "SetsListResponse": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "SetsListResponse",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/SetDetails"
                            }
                        }
                    }
                }
            },
            "UploadPluginIntoSetResponse": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "UploadPluginIntoSetResponse",
                            "required": [
                                "status",
                                "id",
                                "uploaded",
                                "slug",
                                "title"
                            ],
                            "properties": {
                                "status": {
                                    "description": "Plugin active status",
                                    "type": "boolean"
                                },
                                "id": {
                                    "description": "Asset id in set",
                                    "type": "integer"
                                },
                                "uploaded": {
                                    "description": "File uploaded status",
                                    "type": "object"
                                },
                                "slug": {
                                    "description": "Plugin slug",
                                    "type": "string"
                                },
                                "title": {
                                    "description": "Plugin title",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "UploadThemeIntoSetResponse": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "title": "UploadThemeIntoSetResponse",
                            "required": [
                                "status",
                                "id",
                                "uploaded",
                                "slug",
                                "title"
                            ],
                            "properties": {
                                "status": {
                                    "description": "Theme active status",
                                    "type": "boolean"
                                },
                                "id": {
                                    "description": "Asset id in set",
                                    "type": "integer"
                                },
                                "uploaded": {
                                    "description": "File uploaded status",
                                    "type": "object"
                                },
                                "slug": {
                                    "description": "Theme slug",
                                    "type": "string"
                                },
                                "title": {
                                    "description": "Theme title",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "parameters": {
            "scheduledTaskId": {
                "name": "scheduledTaskId",
                "in": "path",
                "description": "The name of scheduled task",
                "required": true,
                "schema": {
                    "type": "string",
                    "enum": [
                        "instances-auto-update"
                    ]
                },
                "example": "instances-auto-update"
            },
            "CloneStubDatabaseNameRequest": {
                "name": "database[name]",
                "in": "query",
                "description": "Database name",
                "schema": {
                    "type": "string"
                },
                "example": "wp_im7zx"
            },
            "CloneStubDatabaseServerRequest": {
                "name": "database[server]",
                "in": "query",
                "description": "Database server ID (Plesk only)",
                "schema": {
                    "type": "string"
                },
                "example": "1"
            },
            "CloneStubDomainExistingRequest": {
                "name": "domain[existing]",
                "in": "query",
                "description": "Domain name",
                "schema": {
                    "type": "string"
                },
                "example": "example.com"
            },
            "CloneStubNewSubdomainNameRequest": {
                "name": "domain[newSubdomain][name]",
                "in": "query",
                "description": "Subdomain name",
                "schema": {
                    "type": "string"
                },
                "example": "staging"
            },
            "CloneStubNewSubdomainParentDomainRequest": {
                "name": "domain[newSubdomain][parentDomain]",
                "in": "query",
                "description": "Domain name",
                "schema": {
                    "type": "string"
                },
                "example": "example.com"
            },
            "CloneStubInstallationPathRequest": {
                "name": "installationPath",
                "in": "query",
                "description": "Installation path of cloned WordPress site (relative to the root directory of the domain)",
                "schema": {
                    "type": "string"
                },
                "example": "wordpress-clone"
            },
            "SetId": {
                "name": "setId",
                "in": "path",
                "description": "Set ID",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "example": "1"
            },
            "InstallationId": {
                "name": "installationId",
                "in": "path",
                "description": "Installation ID",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "example": "1"
            },
            "TaskId": {
                "name": "taskId",
                "in": "path",
                "description": "Task ID",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "example": "7"
            },
            "TaskCode": {
                "name": "taskCode",
                "in": "path",
                "description": "Task code",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "task_install"
            },
            "Is-Webspace-Context": {
                "name": "Is-Webspace-Context",
                "in": "header",
                "description": "Applicable only for requests from WP Toolkit UI in Plesk",
                "schema": {
                    "type": "boolean"
                },
                "example": "false"
            },
            "InstallationsIds": {
                "name": "installationsIds[]",
                "in": "query",
                "description": "Array with installation IDs for filter",
                "required": false,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "example": [
                    1,
                    3,
                    5
                ]
            },
            "skipBrokenInstallations": {
                "name": "skipBrokenInstallations",
                "in": "query",
                "description": "Ignore broken installations (by default request fails on them)",
                "required": false,
                "schema": {
                    "type": "boolean"
                },
                "example": "false"
            },
            "skipInfectedInstallations": {
                "name": "skipInfectedInstallations",
                "in": "query",
                "description": "Ignore quarantined installations (by default request fails on them)",
                "required": false,
                "schema": {
                    "type": "boolean"
                },
                "example": "false"
            },
            "skipUnsupportedInstallations": {
                "name": "skipUnsupportedInstallations",
                "in": "query",
                "description": "Ignore unsupported installations (by default request fails on them)",
                "required": false,
                "schema": {
                    "type": "boolean"
                },
                "example": "false"
            },
            "InstallationAssetsCompatibleRequest": {
                "name": "compatible",
                "in": "query",
                "description": "Flag to output only compatible assets",
                "schema": {
                    "type": "boolean",
                    "default": "false"
                },
                "example": "false"
            },
            "InstallationAssetsDownloadCountRequest": {
                "name": "downloadCount",
                "in": "query",
                "description": "The minimum number of installations",
                "schema": {
                    "type": "integer",
                    "default": "0"
                },
                "example": "100000"
            },
            "InstallationAssetsLastUpdatedAtRequest": {
                "name": "lastUpdatedAt",
                "in": "query",
                "description": "Asset was updated later than current date minus a selected value",
                "schema": {
                    "type": "string",
                    "default": "all",
                    "enum": [
                        "all",
                        "3M",
                        "6M",
                        "1y",
                        "2y"
                    ]
                },
                "example": "1y"
            },
            "InstallationAssetsPageRequest": {
                "name": "page",
                "in": "query",
                "description": "Page number",
                "required": true,
                "schema": {
                    "type": "integer",
                    "default": "1"
                },
                "example": "1"
            },
            "InstallationAssetsPageSizeRequest": {
                "name": "pageSize",
                "in": "query",
                "description": "Items per page",
                "required": true,
                "schema": {
                    "type": "integer",
                    "default": "25"
                },
                "example": "25"
            },
            "InstallationAssetsRatingRequest": {
                "name": "rating",
                "in": "query",
                "description": "The minimum rating of asset",
                "schema": {
                    "type": "number",
                    "default": "0.0"
                },
                "example": "4.0"
            },
            "InstallationAssetsTermRequest": {
                "name": "term",
                "in": "query",
                "description": "Search term",
                "schema": {
                    "type": "string",
                    "default": ""
                },
                "example": "some-term"
            },
            "Domain": {
                "name": "domain",
                "in": "query",
                "description": "Domain name",
                "schema": {
                    "type": "string"
                },
                "example": "example.com"
            },
            "Version": {
                "name": "version",
                "in": "query",
                "description": "Version of WordPress installation",
                "schema": {
                    "type": "string"
                },
                "example": "5.9"
            }
        },
        "securitySchemes": {
            "httpBasic": {
                "type": "http",
                "description": "Authenticate via HTTP Basic using Plesk, cPanel or WHM credentials.",
                "scheme": "basic"
            },
            "pleskApiToken": {
                "type": "apiKey",
                "description": "Use Plesk API Key for authentication.",
                "name": "X-API-Key",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "httpBasic": []
        },
        {
            "pleskApiToken": []
        }
    ],
    "tags": [
        {
            "name": "Internal",
            "description": "Methods with this tag are for internal use only. Such methods can be changed or removed at any moment"
        },
        {
            "name": "Public",
            "description": "This tag marks the API resource as public (available for users)"
        },
        {
            "name": "Installations",
            "description": "WordPress installations"
        },
        {
            "name": "Installations.Account"
        },
        {
            "name": "Installations.Features.Clone"
        },
        {
            "name": "Installations.Features.Debug"
        },
        {
            "name": "Installations.Features.HotlinkProtection"
        },
        {
            "name": "Installations.Features.Indexing"
        },
        {
            "name": "Installations.Features.Integrity"
        },
        {
            "name": "Installations.Features.Maintenance"
        },
        {
            "name": "Installations.Features.NginxCaching"
        },
        {
            "name": "Installations.Features.PasswordProtection"
        },
        {
            "name": "Installations.Features.Updates"
        },
        {
            "name": "Installations.Features.Updates.Smart"
        },
        {
            "name": "Installations.Features.Updates.Php"
        },
        {
            "name": "Installations.Features.Vulnerability"
        },
        {
            "name": "Installations.Features.Vulnerability.Threshold",
            "description": "This feature allows to filter low-score vulnerabilities to reduce notification noise"
        },
        {
            "name": "Installations.Features.WpCronTakeover"
        },
        {
            "name": "Installations.Features.Backups"
        },
        {
            "name": "Installations.Features.VirtualPatches"
        },
        {
            "name": "Installations.Backups"
        },
        {
            "name": "Installations.Plugins"
        },
        {
            "name": "Installations.Themes"
        },
        {
            "name": "Plugins",
            "description": "Mass management of WordPress plugins"
        },
        {
            "name": "Themes",
            "description": "Mass management of WordPress themes"
        },
        {
            "name": "Sets"
        },
        {
            "name": "BackgroundTasks"
        },
        {
            "name": "Changelogs"
        },
        {
            "name": "GlobalAlerts"
        },
        {
            "name": "Updater"
        },
        {
            "name": "Updater.Checker"
        },
        {
            "name": "SecurityMeasures"
        },
        {
            "name": "Vulnerabilities"
        },
        {
            "name": "WPGuardian",
            "description": "This tag marks an API resource, only for WP Guardian business cases."
        }
    ]
}