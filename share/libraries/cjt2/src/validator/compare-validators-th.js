//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/share/libraries/cjt2/src/validator/compare-validators.js
// Generated: /usr/local/cpanel/share/libraries/cjt2/src/validator/compare-validators-th.js
// Module:    cjt/validator/compare-validators-th
// Locale:    th
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"The compare-to value, [_1], is not a number.":"ค่าปลายทางสำหรับเปรียบเทียบ [_1] ไม่ใช่ตัวเลข","The entered value, [_1], is not a number.":"ค่าที่ป้อน [_1] ไม่ใช่ตัวเลข","The number must be an even multiple of [numf,_1].":"The number must be an even multiple of [numf,_1].","The number should be greater than [numf,_1].":"จำนวนควรมากกว่า [numf,_1]","The number should be greater than or equal to [numf,_1].":"จำนวนควรมากกว่าหรือเท่ากับ [numf,_1]","The number should be less than [numf,_1].":"จำนวนควรน้อยกว่า [numf,_1]","The number should be less than or equal to [numf,_1].":"จำนวนควรน้อยกว่าหรือเท่ากับ [numf,_1]","The number you have entered can not be equal to [numf,_1].":"จำนวนที่คุณป้อนต้องไม่เท่ากับ [numf,_1]","The number you have entered is not equal to [numf,_1].":"จำนวนที่คุณป้อนไม่เท่ากับ [numf,_1]","The text that you entered cannot be equal to “[_1]”.":"ข้อความที่คุณป้อนต้องไม่เท่ากับ “[_1]”","The text you have entered can not be equal to “[_1]”.":"ข้อความที่คุณป้อนต้องไม่เท่ากับ “[_1]”","The text you have entered is not equal to “[_1]”.":"ข้อความที่คุณป้อนไม่เท่ากับ “[_1]”","The value contains spaces.":"ค่ามีการเว้นช่องว่าง","The value contains the following excluded characters, which are not allowed: [_1]":"The value contains the following excluded characters, which are not allowed: [_1]"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
