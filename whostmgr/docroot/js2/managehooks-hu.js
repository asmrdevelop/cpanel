//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/whostmgr/docroot/js2/managehooks.js
// Generated: /usr/local/cpanel/whostmgr/docroot/js2/managehooks-hu.js
// Module:    /js2/managehooks-hu
// Locale:    hu
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"Close":"Bezárás","Delete a Hook":"Hook törlése","Deleting hook …":"Hook törlése…","Disable":"Letiltás","Disabling hook …":"Hook letiltása…","Enable":"Engedélyezés","Enabling hook …":"Hook engedélyezése…","Move this hook down.":"Hook mozgatása lefelé.","Move this hook to the bottom.":"Ennek a hooknak az áthelyezése legalulra.","Move this hook to the top.":"Ennek a hooknak az áthelyezése legfelülre.","Move this hook up.":"Hook mozgatása felfelé.","Reordering hooks …":"Hookok újrarendezése…","Save":"Mentés","Saving …":"Mentés…","This hook is disabled.":"Ez a hook le van tiltva.","This hook is enabled.":"Ez a hook engedélyezve van.","View/Edit Hook Details":"Hook részleteinek megtekintése/szerkesztése"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
