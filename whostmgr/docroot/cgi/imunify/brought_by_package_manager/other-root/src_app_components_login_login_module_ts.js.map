{"version":3,"file":"src_app_components_login_login_module_ts.js","mappings":"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","sources":["./src/app/services/login.ts","./src/app/components/login/login.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AuthAPI } from '@imunify360-api/auth';\nimport { XHR } from 'app/utils/xhr/xhr';\n\n@Injectable()\nexport class LoginService {\n    constructor(public xhr: XHR) {}\n\n    login = this.xhr.rx(AuthAPI.login);\n}\n","<form [formGroup]=\"form\" (i360Submit)=\"login()\">\n    <mat-icon\n            svgIcon=\"{{ is360Package ? 'logo-imunify' : 'logo-imunifyAV' }}\"\n            class=\"i360-logo\"\n            [class.imunifyav-logo]=\"!is360Package\"\n            i360Loader></mat-icon>\n    <div class=\"i360-input\">\n        <span class=\"input-icon\">\n            <i class=\"material-icons\">person</i>\n        </span>\n        <input type=\"text\"\n               class=\"input wide\"\n               name=\"i360-login\"\n               placeholder=\"{{'login.usernamePlaceholder' | translate}}\"\n               formControlName=\"username\">\n    </div>\n    <div class=\"i360-input\">\n        <span class=\"input-icon\">\n            <i class=\"material-icons\">lock</i>\n        </span>\n        <input type=\"password\"\n               class=\"input wide\"\n               name=\"i360-password\"\n               placeholder=\"{{'login.passwordPlaceholder' | translate}}\"\n               formControlName=\"password\">\n    </div>\n    <div class=\"i360-error\" *ngIf=\"error\" [ngSwitch]=\"error\">\n        <ng-container *ngSwitchCase=\"LoginError.credentials\">\n            {{'login.error.credentials' | translate}}\n        </ng-container>\n        <ng-container *ngSwitchCase=\"LoginError.service\">\n            {{'login.error.service' | translate}}\n        </ng-container>\n    </div>\n    <button class=\"i360-submit\"\n            color=\"primary\"\n            type=\"submit\" mat-raised-button>\n        {{'login.submit' | translate}}\n    </button>\n</form>\n<mat-form-field>\n    <mat-select [value]=\"appState.lang|async\"\n                (valueChange)=\"translate.use($event)\">\n        <mat-select-trigger>\n            <mat-icon>language</mat-icon>\n            Change language\n        </mat-select-trigger>\n        <mat-option *ngFor=\"let lang of translate.langs\"\n                    [value]=\"lang.code\">\n            {{lang.name}}\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n","import { ActivatedRoute, Router, RouteConfigLoadEnd } from '@angular/router';\nimport { useLoader } from 'app/utils/loader/decorators';\nimport { I360Validators } from 'app/utils/validator/validators';\nimport { EMPTY, catchError, first, switchMap, take, lastValueFrom } from 'rxjs';\nimport { I360FormBuilder } from 'app/utils/validator/form-builder';\nimport { Component, ViewChild } from '@angular/core';\nimport { LoaderDirective } from 'app/utils/loader/loader.directive';\nimport { TranslateService } from 'app/utils/translate/translate.service';\nimport { AuthState } from 'app/services/auth-state';\nimport { AuthService } from 'app/services/auth';\nimport { LoginService } from 'app/services/login';\nimport { Package } from '@imunify360-api/license';\nimport { AppState } from 'app/core/app.service';\n\n\nenum LoginError {\n    credentials = 1, service,\n}\n\n@Component({\n    selector: 'i360-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent {\n    is360Package = IMUNIFY_PACKAGE === Package.imunify360;\n    LoginError = LoginError;\n    form = this.formBuilder.group({\n        username: this.formBuilder.control('', [I360Validators.required('username')]),\n        password: this.formBuilder.control('', [I360Validators.required('password')]),\n    });\n    error: LoginError | null;\n    @ViewChild(LoaderDirective, {static: true}) loader: LoaderDirective;\n\n    constructor(private formBuilder: I360FormBuilder,\n                private router: Router,\n                private route: ActivatedRoute,\n                public appState: AppState,\n                private authState: AuthState,\n                private authService: AuthService,\n                private loginService: LoginService,\n                public translate: TranslateService) {}\n\n    @useLoader\n    async login() {\n        await lastValueFrom(this.loginService.login(this.form.value).pipe(\n            catchError((error, caught) => {\n                // eh\n                if (error && Array.isArray(error.messages)) {\n                    this.error = LoginError.credentials;\n                } else {\n                    this.error = LoginError.service;\n                }\n\n                this.form.valueChanges.pipe(take(1)).subscribe(() => {\n                    this.error = null;\n                });\n\n                return EMPTY;\n            }),\n            take(1),\n            switchMap(res => {\n                this.authService.setToken(res.data.items);\n                return this.route.queryParams.pipe(take(1));\n            }),\n            switchMap(({targetUrl}) => {\n                if (!(new RegExp(`^\\/${IMUNIFY_PACKAGE}\\/${IMUNIFY_PACKAGE === Package.imunify360\n                    ? this.authState.role.value : ''}.*`).test(targetUrl))) {\n                    targetUrl =  '/';\n                }\n\n                this.router.navigateByUrl(targetUrl, { replaceUrl: true });\n                return this.router.events.pipe(\n                    first(event => event instanceof RouteConfigLoadEnd),\n                );\n            }),\n        ), { defaultValue: undefined });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { LoginComponent } from './login.component';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { I360ValidationModule } from 'app/utils/validator/validation.module';\nimport { I360LoaderModule } from 'app/utils/loader/loader.module';\nimport { AuthService } from 'app/services/auth';\nimport { LoginService } from 'app/services/login';\nimport { CommonModule } from '@angular/common';\nimport { I360TranslateModule } from 'app/utils/translate/translate.module';\nimport { SharedModule } from 'app/core/shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n    imports: [\n        RouterModule.forChild([\n            {\n                path: '',\n                component: LoginComponent,\n                canActivate: [AuthService],\n            },\n        ]),\n        MatButtonModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        MatIconModule,\n        I360ValidationModule,\n        I360LoaderModule,\n        CommonModule,\n        I360TranslateModule,\n        TranslateModule,\n        SharedModule,\n    ],\n    exports: [\n        LoginComponent,\n        RouterModule,\n    ],\n    declarations: [\n        LoginComponent,\n    ],\n    providers: [\n        LoginService,\n    ],\n})\nexport class LoginModule {}\n"],"names":["LoginService","constructor","xhr","login","this","rx","AuthAPI","i0","i1","factory","ɵfac","LoginComponent_div_14_ng_container_1_Template","LoginComponent_div_14_ng_container_2_Template","ctx_r0","error","LoginError","credentials","service","lang_r4","code","name","LoginComponent","formBuilder","router","route","appState","authState","authService","loginService","translate","is360Package","IMUNIFY_PACKAGE","Package","form","group","username","control","I360Validators","password","_this","_asyncToGenerator","lastValueFrom","value","pipe","catchError","caught","Array","isArray","messages","valueChanges","take","subscribe","EMPTY","switchMap","res","setToken","data","items","queryParams","targetUrl","RegExp","role","test","navigateByUrl","replaceUrl","events","first","event","RouteConfigLoadEnd","defaultValue","undefined","i2","i3","i4","i5","i6","i7","selectors","viewQuery","rf","ctx","LoaderDirective","LoginComponent_div_14_Template","$event","use","LoginComponent_mat_option_25_Template","lang","langs","useLoader","LoginModule","imports","RouterModule","path","component","canActivate","AuthService","MatButtonModule","MatSelectModule","MatFormFieldModule","MatIconModule","I360ValidationModule","I360LoaderModule","CommonModule","I360TranslateModule","TranslateModule","SharedModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}