{"version":3,"file":"src_app_components_dashboard_maps_topojson_ts.js","mappings":"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","sources":["./node_modules/topojson-client/src/identity.js","./node_modules/topojson-client/src/feature.js","./node_modules/topojson-client/src/transform.js","./node_modules/topojson-client/src/reverse.js","./src/app/components/dashboard/maps/topojson.ts"],"sourcesContent":["export default function(x) {\n  return x;\n}\n","import reverse from \"./reverse.js\";\nimport transform from \"./transform.js\";\n\nexport default function(topology, o) {\n  if (typeof o === \"string\") o = topology.objects[o];\n  return o.type === \"GeometryCollection\"\n      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature(topology, o); })}\n      : feature(topology, o);\n}\n\nfunction feature(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n}\n\nexport function object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type, coordinates;\n    switch (type) {\n      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n      case \"Point\": coordinates = point(o.coordinates); break;\n      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n      case \"LineString\": coordinates = line(o.arcs); break;\n      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n      case \"Polygon\": coordinates = polygon(o.arcs); break;\n      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n      default: return null;\n    }\n    return {type: type, coordinates: coordinates};\n  }\n\n  return geometry(o);\n}\n","import identity from \"./identity.js\";\n\nexport default function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2, n = input.length, output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n}\n","export default function(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n","import feature from 'topojson-client/src/feature';\nimport topojson from './topojson.json';\n\ninterface GeojsonCountry {\n    geometry: {\n        type: 'Polygon' | 'MultiPolygon'; // |'SomethingElse?'\n        coordinates: any[];\n    };\n    properties: {\n        code: string;\n    };\n}\n\nexport const countries: GeojsonCountry[] = feature(topojson, topojson.objects.countries).features;\n"],"names":["x","feature","topology","o","id","bbox","properties","geometry","transformPoint","transform","identity","x0","y0","kx","scale","ky","dx","translate","dy","input","i","j","n","length","output","Array","arcs","arc","points","pop","a","k","push","array","t","reverse","point","p","line","ring","polygon","map","coordinates","type","geometries","object","countries","topojson","objects","features"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3]}