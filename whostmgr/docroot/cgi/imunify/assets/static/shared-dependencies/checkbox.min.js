System.register(["@angular/cdk/a11y","@angular/cdk/coercion","@angular/core","@angular/forms","@angular/material/core","@angular/platform-browser/animations","@angular/cdk/observers"],(function(e){"use strict";var t,i,n,a,c,o,r,s,m,h,d,k,l,b,u,p,x,f,g,_;return{setters:[function(e){t=e},function(e){i=e.coerceBooleanProperty},function(e){n=e.InjectionToken,a=e.forwardRef,c=e,e.Directive,e.Input,e.Output,e.ViewChild,e.Component,e.ViewEncapsulation,e.ChangeDetectionStrategy,e.Attribute,e.Optional,e.Inject,e.NgModule,o=e.EventEmitter},function(e){r=e.NG_VALUE_ACCESSOR,s=e.NG_VALIDATORS,m=e.CheckboxRequiredValidator},function(e){h=e.mixinTabIndex,d=e.mixinColor,k=e.mixinDisableRipple,l=e.mixinDisabled,b=e.MatRipple,u=e,p=e.MatRippleModule,x=e.MatCommonModule},function(e){f=e.ANIMATION_MODULE_TYPE},function(e){g=e,_=e.ObserversModule}],execute:function(){e("MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY",A);const C=["input"],y=["label"],v=function(e){return{enterDuration:e}},I=e("MAT_CHECKBOX_DEFAULT_OPTIONS",new n("mat-checkbox-default-options",{providedIn:"root",factory:A}));function A(){return{color:"accent",clickAction:"check-indeterminate"}}let E=0;const R={color:"accent",clickAction:"check-indeterminate"},T=e("MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR",{provide:r,useExisting:a((()=>O)),multi:!0});class w{}e("MatCheckboxChange",w);const M=h(d(k(l(class{constructor(e){this._elementRef=e}}))));class D extends M{constructor(e,t,i,n,a,c,r){super(t),this._changeDetectorRef=i,this._ngZone=n,this._animationMode=c,this._options=r,this.ariaLabel="",this.ariaLabelledby=null,this.labelPosition="after",this.name=null,this.change=new o,this.indeterminateChange=new o,this._onTouched=()=>{},this._currentAnimationClass="",this._currentCheckState=0,this._controlValueAccessorChangeFn=()=>{},this._checked=!1,this._disabled=!1,this._indeterminate=!1,this._options=this._options||R,this.color=this.defaultColor=this._options.color||R.color,this.tabIndex=parseInt(a)||0,this.id=this._uniqueId=`${e}${++E}`}get inputId(){return`${this.id||this._uniqueId}-input`}get required(){return this._required}set required(e){this._required=i(e)}ngAfterViewInit(){this._syncIndeterminate(this._indeterminate)}get checked(){return this._checked}set checked(e){const t=i(e);t!=this.checked&&(this._checked=t,this._changeDetectorRef.markForCheck())}get disabled(){return this._disabled}set disabled(e){const t=i(e);t!==this.disabled&&(this._disabled=t,this._changeDetectorRef.markForCheck())}get indeterminate(){return this._indeterminate}set indeterminate(e){const t=e!=this._indeterminate;this._indeterminate=i(e),t&&(this._indeterminate?this._transitionCheckState(3):this._transitionCheckState(this.checked?1:2),this.indeterminateChange.emit(this._indeterminate)),this._syncIndeterminate(this._indeterminate)}_isRippleDisabled(){return this.disableRipple||this.disabled}_onLabelTextChange(){this._changeDetectorRef.detectChanges()}writeValue(e){this.checked=!!e}registerOnChange(e){this._controlValueAccessorChangeFn=e}registerOnTouched(e){this._onTouched=e}setDisabledState(e){this.disabled=e}_getAriaChecked(){return this.checked?"true":this.indeterminate?"mixed":"false"}_transitionCheckState(e){let t=this._currentCheckState,i=this._getAnimationTargetElement();if(t!==e&&i&&(this._currentAnimationClass&&i.classList.remove(this._currentAnimationClass),this._currentAnimationClass=this._getAnimationClassForCheckStateTransition(t,e),this._currentCheckState=e,this._currentAnimationClass.length>0)){i.classList.add(this._currentAnimationClass);const e=this._currentAnimationClass;this._ngZone.runOutsideAngular((()=>{setTimeout((()=>{i.classList.remove(e)}),1e3)}))}}_emitChangeEvent(){this._controlValueAccessorChangeFn(this.checked),this.change.emit(this._createChangeEvent(this.checked)),this._inputElement&&(this._inputElement.nativeElement.checked=this.checked)}toggle(){this.checked=!this.checked,this._controlValueAccessorChangeFn(this.checked)}_handleInputClick(){const e=this._options?.clickAction;this.disabled||"noop"===e?this.disabled||"noop"!==e||(this._inputElement.nativeElement.checked=this.checked,this._inputElement.nativeElement.indeterminate=this.indeterminate):(this.indeterminate&&"check"!==e&&Promise.resolve().then((()=>{this._indeterminate=!1,this.indeterminateChange.emit(this._indeterminate)})),this._checked=!this._checked,this._transitionCheckState(this._checked?1:2),this._emitChangeEvent())}_onInteractionEvent(e){e.stopPropagation()}_onBlur(){Promise.resolve().then((()=>{this._onTouched(),this._changeDetectorRef.markForCheck()}))}_getAnimationClassForCheckStateTransition(e,t){if("NoopAnimations"===this._animationMode)return"";switch(e){case 0:if(1===t)return this._animationClasses.uncheckedToChecked;if(3==t)return this._checked?this._animationClasses.checkedToIndeterminate:this._animationClasses.uncheckedToIndeterminate;break;case 2:return 1===t?this._animationClasses.uncheckedToChecked:this._animationClasses.uncheckedToIndeterminate;case 1:return 2===t?this._animationClasses.checkedToUnchecked:this._animationClasses.checkedToIndeterminate;case 3:return 1===t?this._animationClasses.indeterminateToChecked:this._animationClasses.indeterminateToUnchecked}return""}_syncIndeterminate(e){const t=this._inputElement;t&&(t.nativeElement.indeterminate=e)}}e("_MatCheckboxBase",D),D.\u0275fac=function(e){c.\u0275\u0275invalidFactory()},D.\u0275dir=c.\u0275\u0275defineDirective({type:D,viewQuery:function(e,t){if(1&e&&(c.\u0275\u0275viewQuery(C,5),c.\u0275\u0275viewQuery(y,5),c.\u0275\u0275viewQuery(b,5)),2&e){let e;c.\u0275\u0275queryRefresh(e=c.\u0275\u0275loadQuery())&&(t._inputElement=e.first),c.\u0275\u0275queryRefresh(e=c.\u0275\u0275loadQuery())&&(t._labelElement=e.first),c.\u0275\u0275queryRefresh(e=c.\u0275\u0275loadQuery())&&(t.ripple=e.first)}},inputs:{ariaLabel:["aria-label","ariaLabel"],ariaLabelledby:["aria-labelledby","ariaLabelledby"],ariaDescribedby:["aria-describedby","ariaDescribedby"],id:"id",required:"required",labelPosition:"labelPosition",name:"name",value:"value",checked:"checked",disabled:"disabled",indeterminate:"indeterminate"},outputs:{change:"change",indeterminateChange:"indeterminateChange"},features:[c.\u0275\u0275InheritDefinitionFeature]});class O extends D{constructor(e,t,i,n,a,c,o){super("mat-checkbox-",e,t,n,a,c,o),this._focusMonitor=i,this._animationClasses={uncheckedToChecked:"mat-checkbox-anim-unchecked-checked",uncheckedToIndeterminate:"mat-checkbox-anim-unchecked-indeterminate",checkedToUnchecked:"mat-checkbox-anim-checked-unchecked",checkedToIndeterminate:"mat-checkbox-anim-checked-indeterminate",indeterminateToChecked:"mat-checkbox-anim-indeterminate-checked",indeterminateToUnchecked:"mat-checkbox-anim-indeterminate-unchecked"}}_createChangeEvent(e){const t=new w;return t.source=this,t.checked=e,t}_getAnimationTargetElement(){return this._elementRef.nativeElement}ngAfterViewInit(){super.ngAfterViewInit(),this._focusMonitor.monitor(this._elementRef,!0).subscribe((e=>{e||this._onBlur()}))}ngOnDestroy(){this._focusMonitor.stopMonitoring(this._elementRef)}_onInputClick(e){e.stopPropagation(),super._handleInputClick()}focus(e,t){e?this._focusMonitor.focusVia(this._inputElement,e,t):this._inputElement.nativeElement.focus(t)}}e("MatCheckbox",O),O.\u0275fac=function(e){return new(e||O)(c.\u0275\u0275directiveInject(c.ElementRef),c.\u0275\u0275directiveInject(c.ChangeDetectorRef),c.\u0275\u0275directiveInject(t.FocusMonitor),c.\u0275\u0275directiveInject(c.NgZone),c.\u0275\u0275injectAttribute("tabindex"),c.\u0275\u0275directiveInject(f,8),c.\u0275\u0275directiveInject(I,8))},O.\u0275cmp=c.\u0275\u0275defineComponent({type:O,selectors:[["mat-checkbox"]],hostAttrs:[1,"mat-checkbox"],hostVars:14,hostBindings:function(e,t){2&e&&(c.\u0275\u0275hostProperty("id",t.id),c.\u0275\u0275attribute("tabindex",null)("aria-label",null)("aria-labelledby",null),c.\u0275\u0275classProp("mat-checkbox-indeterminate",t.indeterminate)("mat-checkbox-checked",t.checked)("mat-checkbox-disabled",t.disabled)("mat-checkbox-label-before","before"==t.labelPosition)("_mat-animation-noopable","NoopAnimations"===t._animationMode))},inputs:{disableRipple:"disableRipple",color:"color",tabIndex:"tabIndex"},exportAs:["matCheckbox"],features:[c.\u0275\u0275ProvidersFeature([T]),c.\u0275\u0275InheritDefinitionFeature],ngContentSelectors:["*"],decls:17,vars:21,consts:[[1,"mat-checkbox-layout"],["label",""],[1,"mat-checkbox-inner-container"],["type","checkbox",1,"mat-checkbox-input","cdk-visually-hidden",3,"id","required","checked","disabled","tabIndex","change","click"],["input",""],["matRipple","",1,"mat-checkbox-ripple","mat-focus-indicator",3,"matRippleTrigger","matRippleDisabled","matRippleRadius","matRippleCentered","matRippleAnimation"],[1,"mat-ripple-element","mat-checkbox-persistent-ripple"],[1,"mat-checkbox-frame"],[1,"mat-checkbox-background"],["version","1.1","focusable","false","viewBox","0 0 24 24","aria-hidden","true",1,"mat-checkbox-checkmark"],["fill","none","stroke","white","d","M4.1,12.7 9,17.6 20.3,6.3",1,"mat-checkbox-checkmark-path"],[1,"mat-checkbox-mixedmark"],[1,"mat-checkbox-label",3,"cdkObserveContent"],["checkboxLabel",""],[2,"display","none"]],template:function(e,t){if(1&e&&(c.\u0275\u0275projectionDef(),c.\u0275\u0275elementStart(0,"label",0,1)(2,"span",2)(3,"input",3,4),c.\u0275\u0275listener("change",(function(e){return t._onInteractionEvent(e)}))("click",(function(e){return t._onInputClick(e)})),c.\u0275\u0275elementEnd(),c.\u0275\u0275elementStart(5,"span",5),c.\u0275\u0275element(6,"span",6),c.\u0275\u0275elementEnd(),c.\u0275\u0275element(7,"span",7),c.\u0275\u0275elementStart(8,"span",8),c.\u0275\u0275namespaceSVG(),c.\u0275\u0275elementStart(9,"svg",9),c.\u0275\u0275element(10,"path",10),c.\u0275\u0275elementEnd(),c.\u0275\u0275namespaceHTML(),c.\u0275\u0275element(11,"span",11),c.\u0275\u0275elementEnd()(),c.\u0275\u0275elementStart(12,"span",12,13),c.\u0275\u0275listener("cdkObserveContent",(function(){return t._onLabelTextChange()})),c.\u0275\u0275elementStart(14,"span",14),c.\u0275\u0275text(15,"\xa0"),c.\u0275\u0275elementEnd(),c.\u0275\u0275projection(16),c.\u0275\u0275elementEnd()()),2&e){const e=c.\u0275\u0275reference(1),i=c.\u0275\u0275reference(13);c.\u0275\u0275attribute("for",t.inputId),c.\u0275\u0275advance(2),c.\u0275\u0275classProp("mat-checkbox-inner-container-no-side-margin",!i.textContent||!i.textContent.trim()),c.\u0275\u0275advance(1),c.\u0275\u0275property("id",t.inputId)("required",t.required)("checked",t.checked)("disabled",t.disabled)("tabIndex",t.tabIndex),c.\u0275\u0275attribute("value",t.value)("name",t.name)("aria-label",t.ariaLabel||null)("aria-labelledby",t.ariaLabelledby)("aria-checked",t._getAriaChecked())("aria-describedby",t.ariaDescribedby),c.\u0275\u0275advance(2),c.\u0275\u0275property("matRippleTrigger",e)("matRippleDisabled",t._isRippleDisabled())("matRippleRadius",20)("matRippleCentered",!0)("matRippleAnimation",c.\u0275\u0275pureFunction1(19,v,"NoopAnimations"===t._animationMode?0:150))}},dependencies:[u.MatRipple,g.CdkObserveContent],styles:['@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);position:relative}.mat-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-checkbox-layout{-webkit-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:rgba(0,0,0,0);transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1);-webkit-print-color-adjust:exact;color-adjust:exact}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{display:block;width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:rgba(0,0,0,0)}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox-input:focus~.mat-focus-indicator::before{content:""}'],encapsulation:2,changeDetection:0});const S=e("MAT_CHECKBOX_REQUIRED_VALIDATOR",{provide:s,useExisting:a((()=>L)),multi:!0});class L extends m{}e("MatCheckboxRequiredValidator",L),L.\u0275fac=function(){let e;return function(t){return(e||(e=c.\u0275\u0275getInheritedFactory(L)))(t||L)}}(),L.\u0275dir=c.\u0275\u0275defineDirective({type:L,selectors:[["mat-checkbox","required","","formControlName",""],["mat-checkbox","required","","formControl",""],["mat-checkbox","required","","ngModel",""]],features:[c.\u0275\u0275ProvidersFeature([S]),c.\u0275\u0275InheritDefinitionFeature]});class F{}e("_MatCheckboxRequiredValidatorModule",F),F.\u0275fac=function(e){return new(e||F)},F.\u0275mod=c.\u0275\u0275defineNgModule({type:F}),F.\u0275inj=c.\u0275\u0275defineInjector({});class q{}e("MatCheckboxModule",q),q.\u0275fac=function(e){return new(e||q)},q.\u0275mod=c.\u0275\u0275defineNgModule({type:q}),q.\u0275inj=c.\u0275\u0275defineInjector({imports:[p,x,_,F,x,F]})}}}));
