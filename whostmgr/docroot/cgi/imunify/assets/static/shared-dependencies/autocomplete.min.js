System.register(["@angular/cdk/a11y","@angular/cdk/coercion","@angular/cdk/platform","@angular/core","@angular/material/core","rxjs","@angular/common","@angular/cdk/overlay","@angular/cdk/scrolling","@angular/cdk/bidi","@angular/cdk/keycodes","@angular/cdk/portal","@angular/forms","@angular/material/form-field","rxjs/operators"],(function(e){"use strict";var t,i,o,n,s,a,l,r,c,u,p,h,d,_,m,v,g,f,y,O,b,A,C,E,S,w,T,R,P,M,F,I,L,D,k,x,V,j,N,W,Y,B,U,K,Q,z,G,H,X,q,Z;return{setters:[function(e){t=e.ActiveDescendantKeyManager},function(e){i=e.coerceBooleanProperty,o=e.coerceStringArray},function(e){n=e,s=e._getEventTarget},function(e){a=e.InjectionToken,l=e,r=e.TemplateRef,e.Directive,e.Inject,e.ViewChild,e.Input,e.Output,e.Component,e.ViewEncapsulation,e.ChangeDetectionStrategy,e.ContentChildren,c=e.forwardRef,e.Optional,e.Host,e.NgModule,u=e.EventEmitter},function(e){p=e.mixinDisableRipple,h=e.MAT_OPTGROUP,d=e.MatOption,_=e.MAT_OPTION_PARENT_COMPONENT,m=e.MatOptionModule,v=e.MatCommonModule,g=e.MatOptionSelectionChange,f=e._countGroupLabelsBeforeOption,y=e._getOptionScrollPosition},function(e){O=e.Subscription,b=e.Subject,A=e.defer,C=e.merge,E=e.of,S=e.fromEvent},function(e){w=e,T=e.DOCUMENT,R=e.CommonModule},function(e){P=e,M=e.OverlayModule,F=e.Overlay,I=e.OverlayConfig},function(e){L=e,D=e.CdkScrollableModule},function(e){k=e},function(e){x=e.hasModifierKey,V=e.ESCAPE,j=e.ENTER,N=e.TAB,W=e.UP_ARROW,Y=e.DOWN_ARROW},function(e){B=e.TemplatePortal},function(e){U=e.NG_VALUE_ACCESSOR},function(e){e,K=e.MAT_FORM_FIELD},function(e){Q=e.startWith,z=e.switchMap,G=e.take,H=e.filter,X=e.map,q=e.tap,Z=e.delay}],execute:function(){e({MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY:ne,MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY:ue,getMatAutocompleteMissingPanelError:de});const J=["panel"];function $(e,t){if(1&e&&(l.\u0275\u0275elementStart(0,"div",0,1),l.\u0275\u0275projection(2),l.\u0275\u0275elementEnd()),2&e){const e=t.id,i=l.\u0275\u0275nextContext();l.\u0275\u0275property("id",i.id)("ngClass",i._classList),l.\u0275\u0275attribute("aria-label",i.ariaLabel||null)("aria-labelledby",i._getPanelAriaLabelledby(e))}}let ee=0;class te{constructor(e,t){this.source=e,this.option=t}}e("MatAutocompleteSelectedEvent",te);const ie=p(class{}),oe=e("MAT_AUTOCOMPLETE_DEFAULT_OPTIONS",new a("mat-autocomplete-default-options",{providedIn:"root",factory:ne}));function ne(){return{autoActiveFirstOption:!1,autoSelectActiveOption:!1}}class se extends ie{constructor(e,t,i,o){super(),this._changeDetectorRef=e,this._elementRef=t,this._activeOptionChanges=O.EMPTY,this.showPanel=!1,this._isOpen=!1,this.displayWith=null,this.optionSelected=new u,this.opened=new u,this.closed=new u,this.optionActivated=new u,this._classList={},this.id="mat-autocomplete-"+ee++,this.inertGroups=o?.SAFARI||!1,this._autoActiveFirstOption=!!i.autoActiveFirstOption,this._autoSelectActiveOption=!!i.autoSelectActiveOption}get isOpen(){return this._isOpen&&this.showPanel}get autoActiveFirstOption(){return this._autoActiveFirstOption}set autoActiveFirstOption(e){this._autoActiveFirstOption=i(e)}get autoSelectActiveOption(){return this._autoSelectActiveOption}set autoSelectActiveOption(e){this._autoSelectActiveOption=i(e)}set classList(e){e&&e.length?this._classList=o(e).reduce(((e,t)=>(e[t]=!0,e)),{}):this._classList={},this._setVisibilityClasses(this._classList),this._elementRef.nativeElement.className=""}ngAfterContentInit(){this._keyManager=new t(this.options).withWrap(),this._activeOptionChanges=this._keyManager.change.subscribe((e=>{this.isOpen&&this.optionActivated.emit({source:this,option:this.options.toArray()[e]||null})})),this._setVisibility()}ngOnDestroy(){this._activeOptionChanges.unsubscribe()}_setScrollTop(e){this.panel&&(this.panel.nativeElement.scrollTop=e)}_getScrollTop(){return this.panel?this.panel.nativeElement.scrollTop:0}_setVisibility(){this.showPanel=!!this.options.length,this._setVisibilityClasses(this._classList),this._changeDetectorRef.markForCheck()}_emitSelectEvent(e){const t=new te(this,e);this.optionSelected.emit(t)}_getPanelAriaLabelledby(e){if(this.ariaLabel)return null;const t=e?e+" ":"";return this.ariaLabelledby?t+this.ariaLabelledby:e}_setVisibilityClasses(e){e[this._visibleClass]=this.showPanel,e[this._hiddenClass]=!this.showPanel}}e("_MatAutocompleteBase",se),se.\u0275fac=function(e){return new(e||se)(l.\u0275\u0275directiveInject(l.ChangeDetectorRef),l.\u0275\u0275directiveInject(l.ElementRef),l.\u0275\u0275directiveInject(oe),l.\u0275\u0275directiveInject(n.Platform))},se.\u0275dir=l.\u0275\u0275defineDirective({type:se,viewQuery:function(e,t){if(1&e&&(l.\u0275\u0275viewQuery(r,7),l.\u0275\u0275viewQuery(J,5)),2&e){let e;l.\u0275\u0275queryRefresh(e=l.\u0275\u0275loadQuery())&&(t.template=e.first),l.\u0275\u0275queryRefresh(e=l.\u0275\u0275loadQuery())&&(t.panel=e.first)}},inputs:{ariaLabel:["aria-label","ariaLabel"],ariaLabelledby:["aria-labelledby","ariaLabelledby"],displayWith:"displayWith",autoActiveFirstOption:"autoActiveFirstOption",autoSelectActiveOption:"autoSelectActiveOption",panelWidth:"panelWidth",classList:["class","classList"]},outputs:{optionSelected:"optionSelected",opened:"opened",closed:"closed",optionActivated:"optionActivated"},features:[l.\u0275\u0275InheritDefinitionFeature]});class ae extends se{constructor(){super(...arguments),this._visibleClass="mat-autocomplete-visible",this._hiddenClass="mat-autocomplete-hidden"}}e("MatAutocomplete",ae),ae.\u0275fac=function(){let e;return function(t){return(e||(e=l.\u0275\u0275getInheritedFactory(ae)))(t||ae)}}(),ae.\u0275cmp=l.\u0275\u0275defineComponent({type:ae,selectors:[["mat-autocomplete"]],contentQueries:function(e,t,i){if(1&e&&(l.\u0275\u0275contentQuery(i,h,5),l.\u0275\u0275contentQuery(i,d,5)),2&e){let e;l.\u0275\u0275queryRefresh(e=l.\u0275\u0275loadQuery())&&(t.optionGroups=e),l.\u0275\u0275queryRefresh(e=l.\u0275\u0275loadQuery())&&(t.options=e)}},hostAttrs:[1,"mat-autocomplete"],inputs:{disableRipple:"disableRipple"},exportAs:["matAutocomplete"],features:[l.\u0275\u0275ProvidersFeature([{provide:_,useExisting:ae}]),l.\u0275\u0275InheritDefinitionFeature],ngContentSelectors:["*"],decls:1,vars:0,consts:[["role","listbox",1,"mat-autocomplete-panel",3,"id","ngClass"],["panel",""]],template:function(e,t){1&e&&(l.\u0275\u0275projectionDef(),l.\u0275\u0275template(0,$,3,4,"ng-template"))},dependencies:[w.NgClass],styles:[".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}mat-autocomplete{display:none}"],encapsulation:2,changeDetection:0});class le{constructor(e){this.elementRef=e}}e("_MatAutocompleteOriginBase",le),le.\u0275fac=function(e){return new(e||le)(l.\u0275\u0275directiveInject(l.ElementRef))},le.\u0275dir=l.\u0275\u0275defineDirective({type:le});class re extends le{}e("MatAutocompleteOrigin",re),re.\u0275fac=function(){let e;return function(t){return(e||(e=l.\u0275\u0275getInheritedFactory(re)))(t||re)}}(),re.\u0275dir=l.\u0275\u0275defineDirective({type:re,selectors:[["","matAutocompleteOrigin",""]],exportAs:["matAutocompleteOrigin"],features:[l.\u0275\u0275InheritDefinitionFeature]});const ce=e("MAT_AUTOCOMPLETE_SCROLL_STRATEGY",new a("mat-autocomplete-scroll-strategy"));function ue(e){return()=>e.scrollStrategies.reposition()}const pe=e("MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER",{provide:ce,deps:[F],useFactory:ue}),he=e("MAT_AUTOCOMPLETE_VALUE_ACCESSOR",{provide:U,useExisting:c((()=>me)),multi:!0});function de(){return Error("Attempting to open an undefined instance of `mat-autocomplete`. Make sure that the id passed to the `matAutocomplete` is correct and that you're attempting to open it after the ngAfterContentInit hook.")}class _e{constructor(e,t,i,o,n,s,a,l,r,c,u){this._element=e,this._overlay=t,this._viewContainerRef=i,this._zone=o,this._changeDetectorRef=n,this._dir=a,this._formField=l,this._document=r,this._viewportRuler=c,this._defaults=u,this._componentDestroyed=!1,this._autocompleteDisabled=!1,this._manuallyFloatingLabel=!1,this._viewportSubscription=O.EMPTY,this._canOpenOnNextFocus=!0,this._closeKeyEventStream=new b,this._windowBlurHandler=()=>{this._canOpenOnNextFocus=this._document.activeElement!==this._element.nativeElement||this.panelOpen},this._onChange=()=>{},this._onTouched=()=>{},this.position="auto",this.autocompleteAttribute="off",this._overlayAttached=!1,this.optionSelections=A((()=>{const e=this.autocomplete?this.autocomplete.options:null;return e?e.changes.pipe(Q(e),z((()=>C(...e.map((e=>e.onSelectionChange)))))):this._zone.onStable.pipe(G(1),z((()=>this.optionSelections)))})),this._scrollStrategy=s}get autocompleteDisabled(){return this._autocompleteDisabled}set autocompleteDisabled(e){this._autocompleteDisabled=i(e)}ngAfterViewInit(){const e=this._getWindow();void 0!==e&&this._zone.runOutsideAngular((()=>e.addEventListener("blur",this._windowBlurHandler)))}ngOnChanges(e){e.position&&this._positionStrategy&&(this._setStrategyPositions(this._positionStrategy),this.panelOpen&&this._overlayRef.updatePosition())}ngOnDestroy(){const e=this._getWindow();void 0!==e&&e.removeEventListener("blur",this._windowBlurHandler),this._viewportSubscription.unsubscribe(),this._componentDestroyed=!0,this._destroyPanel(),this._closeKeyEventStream.complete()}get panelOpen(){return this._overlayAttached&&this.autocomplete.showPanel}openPanel(){this._attachOverlay(),this._floatLabel()}closePanel(){this._resetLabel(),this._overlayAttached&&(this.panelOpen&&this._zone.run((()=>{this.autocomplete.closed.emit()})),this.autocomplete._isOpen=this._overlayAttached=!1,this._pendingAutoselectedOption=null,this._overlayRef&&this._overlayRef.hasAttached()&&(this._overlayRef.detach(),this._closingActionsSubscription.unsubscribe()),this._componentDestroyed||this._changeDetectorRef.detectChanges())}updatePosition(){this._overlayAttached&&this._overlayRef.updatePosition()}get panelClosingActions(){return C(this.optionSelections,this.autocomplete._keyManager.tabOut.pipe(H((()=>this._overlayAttached))),this._closeKeyEventStream,this._getOutsideClickStream(),this._overlayRef?this._overlayRef.detachments().pipe(H((()=>this._overlayAttached))):E()).pipe(X((e=>e instanceof g?e:null)))}get activeOption(){return this.autocomplete&&this.autocomplete._keyManager?this.autocomplete._keyManager.activeItem:null}_getOutsideClickStream(){return C(S(this._document,"click"),S(this._document,"auxclick"),S(this._document,"touchend")).pipe(H((e=>{const t=s(e),i=this._formField?this._formField._elementRef.nativeElement:null,o=this.connectedTo?this.connectedTo.elementRef.nativeElement:null;return this._overlayAttached&&t!==this._element.nativeElement&&this._document.activeElement!==this._element.nativeElement&&(!i||!i.contains(t))&&(!o||!o.contains(t))&&!!this._overlayRef&&!this._overlayRef.overlayElement.contains(t)})))}writeValue(e){Promise.resolve(null).then((()=>this._assignOptionValue(e)))}registerOnChange(e){this._onChange=e}registerOnTouched(e){this._onTouched=e}setDisabledState(e){this._element.nativeElement.disabled=e}_handleKeydown(e){const t=e.keyCode,i=x(e);if(t!==V||i||e.preventDefault(),this.activeOption&&t===j&&this.panelOpen&&!i)this.activeOption._selectViaInteraction(),this._resetActiveItem(),e.preventDefault();else if(this.autocomplete){const o=this.autocomplete._keyManager.activeItem,n=t===W||t===Y;t===N||n&&!i&&this.panelOpen?this.autocomplete._keyManager.onKeydown(e):n&&this._canOpen()&&this.openPanel(),(n||this.autocomplete._keyManager.activeItem!==o)&&(this._scrollToOption(this.autocomplete._keyManager.activeItemIndex||0),this.autocomplete.autoSelectActiveOption&&this.activeOption&&(this._pendingAutoselectedOption||(this._valueBeforeAutoSelection=this._element.nativeElement.value),this._pendingAutoselectedOption=this.activeOption,this._assignOptionValue(this.activeOption.value)))}}_handleInput(e){let t=e.target,i=t.value;"number"===t.type&&(i=""==i?null:parseFloat(i)),this._previousValue!==i&&(this._previousValue=i,this._pendingAutoselectedOption=null,this._onChange(i),this._canOpen()&&this._document.activeElement===e.target&&this.openPanel())}_handleFocus(){this._canOpenOnNextFocus?this._canOpen()&&(this._previousValue=this._element.nativeElement.value,this._attachOverlay(),this._floatLabel(!0)):this._canOpenOnNextFocus=!0}_handleClick(){this._canOpen()&&!this.panelOpen&&this.openPanel()}_floatLabel(e=!1){this._formField&&"auto"===this._formField.floatLabel&&(e?this._formField._animateAndLockLabel():this._formField.floatLabel="always",this._manuallyFloatingLabel=!0)}_resetLabel(){this._manuallyFloatingLabel&&(this._formField.floatLabel="auto",this._manuallyFloatingLabel=!1)}_subscribeToClosingActions(){const e=this._zone.onStable.pipe(G(1)),t=this.autocomplete.options.changes.pipe(q((()=>this._positionStrategy.reapplyLastPosition())),Z(0));return C(e,t).pipe(z((()=>(this._zone.run((()=>{const e=this.panelOpen;this._resetActiveItem(),this.autocomplete._setVisibility(),this._changeDetectorRef.detectChanges(),this.panelOpen&&this._overlayRef.updatePosition(),e!==this.panelOpen&&(this.panelOpen?this.autocomplete.opened.emit():this.autocomplete.closed.emit())})),this.panelClosingActions))),G(1)).subscribe((e=>this._setValueAndClose(e)))}_destroyPanel(){this._overlayRef&&(this.closePanel(),this._overlayRef.dispose(),this._overlayRef=null)}_assignOptionValue(e){const t=this.autocomplete&&this.autocomplete.displayWith?this.autocomplete.displayWith(e):e;this._updateNativeInputValue(null!=t?t:"")}_updateNativeInputValue(e){this._formField?this._formField._control.value=e:this._element.nativeElement.value=e,this._previousValue=e}_setValueAndClose(e){const t=e?e.source:this._pendingAutoselectedOption;t&&(this._clearPreviousSelectedOption(t),this._assignOptionValue(t.value),this._onChange(t.value),this.autocomplete._emitSelectEvent(t),this._element.nativeElement.focus()),this.closePanel()}_clearPreviousSelectedOption(e){this.autocomplete.options.forEach((t=>{t!==e&&t.selected&&t.deselect()}))}_attachOverlay(){this.autocomplete;let e=this._overlayRef;e?(this._positionStrategy.setOrigin(this._getConnectedElement()),e.updateSize({width:this._getPanelWidth()})):(this._portal=new B(this.autocomplete.template,this._viewContainerRef,{id:this._formField?.getLabelId()}),e=this._overlay.create(this._getOverlayConfig()),this._overlayRef=e,this._handleOverlayEvents(e),this._viewportSubscription=this._viewportRuler.change().subscribe((()=>{this.panelOpen&&e&&e.updateSize({width:this._getPanelWidth()})}))),e&&!e.hasAttached()&&(e.attach(this._portal),this._closingActionsSubscription=this._subscribeToClosingActions());const t=this.panelOpen;this.autocomplete._setVisibility(),this.autocomplete._isOpen=this._overlayAttached=!0,this.panelOpen&&t!==this.panelOpen&&this.autocomplete.opened.emit()}_getOverlayConfig(){return new I({positionStrategy:this._getOverlayPosition(),scrollStrategy:this._scrollStrategy(),width:this._getPanelWidth(),direction:this._dir,panelClass:this._defaults?.overlayPanelClass})}_getOverlayPosition(){const e=this._overlay.position().flexibleConnectedTo(this._getConnectedElement()).withFlexibleDimensions(!1).withPush(!1);return this._setStrategyPositions(e),this._positionStrategy=e,e}_setStrategyPositions(e){const t=[{originX:"start",originY:"bottom",overlayX:"start",overlayY:"top"},{originX:"end",originY:"bottom",overlayX:"end",overlayY:"top"}],i=this._aboveClass,o=[{originX:"start",originY:"top",overlayX:"start",overlayY:"bottom",panelClass:i},{originX:"end",originY:"top",overlayX:"end",overlayY:"bottom",panelClass:i}];let n;n="above"===this.position?o:"below"===this.position?t:[...t,...o],e.withPositions(n)}_getConnectedElement(){return this.connectedTo?this.connectedTo.elementRef:this._formField?this._formField.getConnectedOverlayOrigin():this._element}_getPanelWidth(){return this.autocomplete.panelWidth||this._getHostWidth()}_getHostWidth(){return this._getConnectedElement().nativeElement.getBoundingClientRect().width}_resetActiveItem(){const e=this.autocomplete;e.autoActiveFirstOption?e._keyManager.setFirstItemActive():e._keyManager.setActiveItem(-1)}_canOpen(){const e=this._element.nativeElement;return!e.readOnly&&!e.disabled&&!this._autocompleteDisabled}_getWindow(){return this._document?.defaultView||window}_scrollToOption(e){const t=this.autocomplete,i=f(e,t.options,t.optionGroups);if(0===e&&1===i)t._setScrollTop(0);else if(t.panel){const i=t.options.toArray()[e];if(i){const e=i._getHostElement(),o=y(e.offsetTop,e.offsetHeight,t._getScrollTop(),t.panel.nativeElement.offsetHeight);t._setScrollTop(o)}}}_handleOverlayEvents(e){e.keydownEvents().subscribe((e=>{(e.keyCode===V&&!x(e)||e.keyCode===W&&x(e,"altKey"))&&(this._pendingAutoselectedOption&&(this._updateNativeInputValue(this._valueBeforeAutoSelection??""),this._pendingAutoselectedOption=null),this._closeKeyEventStream.next(),this._resetActiveItem(),e.stopPropagation(),e.preventDefault())})),e.outsidePointerEvents().subscribe()}}e("_MatAutocompleteTriggerBase",_e),_e.\u0275fac=function(e){return new(e||_e)(l.\u0275\u0275directiveInject(l.ElementRef),l.\u0275\u0275directiveInject(P.Overlay),l.\u0275\u0275directiveInject(l.ViewContainerRef),l.\u0275\u0275directiveInject(l.NgZone),l.\u0275\u0275directiveInject(l.ChangeDetectorRef),l.\u0275\u0275directiveInject(ce),l.\u0275\u0275directiveInject(k.Directionality,8),l.\u0275\u0275directiveInject(K,9),l.\u0275\u0275directiveInject(T,8),l.\u0275\u0275directiveInject(L.ViewportRuler),l.\u0275\u0275directiveInject(oe,8))},_e.\u0275dir=l.\u0275\u0275defineDirective({type:_e,inputs:{autocomplete:["matAutocomplete","autocomplete"],position:["matAutocompletePosition","position"],connectedTo:["matAutocompleteConnectedTo","connectedTo"],autocompleteAttribute:["autocomplete","autocompleteAttribute"],autocompleteDisabled:["matAutocompleteDisabled","autocompleteDisabled"]},features:[l.\u0275\u0275NgOnChangesFeature]});class me extends _e{constructor(){super(...arguments),this._aboveClass="mat-autocomplete-panel-above"}}e("MatAutocompleteTrigger",me),me.\u0275fac=function(){let e;return function(t){return(e||(e=l.\u0275\u0275getInheritedFactory(me)))(t||me)}}(),me.\u0275dir=l.\u0275\u0275defineDirective({type:me,selectors:[["input","matAutocomplete",""],["textarea","matAutocomplete",""]],hostAttrs:[1,"mat-autocomplete-trigger"],hostVars:7,hostBindings:function(e,t){1&e&&l.\u0275\u0275listener("focusin",(function(){return t._handleFocus()}))("blur",(function(){return t._onTouched()}))("input",(function(e){return t._handleInput(e)}))("keydown",(function(e){return t._handleKeydown(e)}))("click",(function(){return t._handleClick()})),2&e&&l.\u0275\u0275attribute("autocomplete",t.autocompleteAttribute)("role",t.autocompleteDisabled?null:"combobox")("aria-autocomplete",t.autocompleteDisabled?null:"list")("aria-activedescendant",t.panelOpen&&t.activeOption?t.activeOption.id:null)("aria-expanded",t.autocompleteDisabled?null:t.panelOpen.toString())("aria-owns",t.autocompleteDisabled||!t.panelOpen||null==t.autocomplete?null:t.autocomplete.id)("aria-haspopup",t.autocompleteDisabled?null:"listbox")},exportAs:["matAutocompleteTrigger"],features:[l.\u0275\u0275ProvidersFeature([he]),l.\u0275\u0275InheritDefinitionFeature]});class ve{}e("MatAutocompleteModule",ve),ve.\u0275fac=function(e){return new(e||ve)},ve.\u0275mod=l.\u0275\u0275defineNgModule({type:ve}),ve.\u0275inj=l.\u0275\u0275defineInjector({providers:[pe],imports:[M,m,v,R,D,m,v]})}}}));
