{"version":3,"file":"src_app_components_installation_installation_module_ts.js","mappings":"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","sources":["./src/app/components/installation/installation.guard.ts","./src/app/components/installation/header/installation-header.component.html","./src/app/components/installation/header/installation-header.component.ts","./src/app/components/installation/installation.component.ts","./src/app/components/installation/log/installation-log.component.html","./src/app/components/installation/log/installation-log.component.ts","./src/app/components/installation/start/installation-start.component.ts","./src/app/components/installation/start/installation-start.component.html","./src/app/components/installation/tabs/installation-tabs.component.html","./src/app/components/installation/tabs/installation-tabs.component.ts","./src/app/components/installation/stopped-service/stopped-service.component.ts","./src/app/components/installation/installation-routing.module.ts","./src/app/components/installation/installation.module.ts","./src/app/components/installation/installation.service.ts","./src/app/components/installation/slider/installation-slider.component.html","./src/app/components/installation/slider/installation-slider.component.ts","./src/app/utils/blocked-ui-message/blocked-ui-message.component.ts","./src/app/utils/blocked-ui-message/blocked-ui-message.module.ts","./src/app/utils/log-box/log-box.component.html","./src/app/utils/log-box/log-box.component.ts","./src/app/utils/log-box/log-box.module.ts","./src/app/utils/preview-screenshot/module.ts","./src/app/utils/preview-screenshot/preview-screenshot.component.ts"],"sourcesContent":["import { CanActivate, Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { AgentStatus } from '@imunify360-api/misc';\nimport { AuthState } from 'app/services/auth-state';\nimport { AppState } from 'app/core/app.service';\n\n\n@Injectable()\nexport class InstallationGuard implements CanActivate {\n    constructor (\n        private appState: AppState,\n        public authState: AuthState,\n        private router: Router,\n    ) {}\n\n    canActivate() {\n        if (AgentStatus.OK === this.appState.imunifyStatus.value) {\n            this.router.navigate(['/'], { replaceUrl: true });\n            return false;\n        }\n        return true;\n    }\n}\n","<div class=\"installation-header\">\n    <div>\n        <mat-icon class=\"i360-logo\"\n                [class.imunifyav-logo]=\"isAv\"\n                [svgIcon]=\"isAv ? 'logo-imunifyAV' : 'logo-imunify'\">\n        </mat-icon>\n        <div class=\"i360-logo-description\">{{ 'installation.start.logoDescription' | translate }}</div>\n    </div>\n    <div *ngIf=\"(appState.imunifyStatus|async) === AgentStatus.FAILED_TO_INSTALL\"\n         class=\"installation-header_status-stopped\">\n        <div class=\"i360-stopped\" i360-button [round]=\"true\">\n            <mat-icon matPrefix>error_outline</mat-icon>\n            {{ 'installation.status.stopped' | translate }}\n        </div>\n\n        <button class=\"i360-retry\" i360-button [primary]=\"true\" (click)=\"handleRetryBtnClick()\">\n            <mat-icon matPrefix\n                      fontSet=\"i360-icon\"\n                      fontIcon=\"i360-icon-refresh\"></mat-icon>\n            {{ 'installation.status.retry' | translate }}\n        </button>\n    </div>\n\n    <div *ngIf=\"(appState.imunifyStatus|async) === AgentStatus.INSTALLING\"\n         class=\"i360-progress\"\n         i360-button\n         [primary]=\"true\"\n         [round]=\"true\">\n        <spinner [show]=\"true\" color=\"white\" matPrefix></spinner>\n        {{ \"installation.statusMessage\" | translate }}\n    </div>\n</div>\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { Package } from '@imunify360-api/license';\nimport { AgentStatus } from '@imunify360-api/misc';\nimport { AppState } from 'app/core/app.service';\n\nimport { Router } from '@angular/router';\nimport { useLoader } from 'app/utils/loader/decorators';\nimport { LoaderDirective } from 'app/utils/loader/loader.directive';\nimport { InstallationService } from 'app/components/installation/installation.service';\n\n\n@Component({\n    selector: 'installation-header',\n    templateUrl: './installation-header.component.html',\n    styleUrls: ['./installation-header.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class InstallationHeaderComponent {\n    isAv = IMUNIFY_PACKAGE === Package.imunifyAV;\n    AgentStatus = AgentStatus;\n\n    constructor(\n        public appState: AppState,\n        private router: Router,\n        private installationService: InstallationService,\n        private loader: LoaderDirective,\n    ) { }\n\n    @useLoader\n    async handleRetryBtnClick() {\n        // this line fixes should cancel log request if retry button was clicked\n        this.installationService.stopWatchingLog();\n        await this.installationService.start();\n        if (this.router.url === '/installation/progress/log') {\n            this.installationService.startWatchingLog();\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { InstallationService } from 'app/components/installation/installation.service';\n\n@Component({\n    template: `\n        <div i360Loader>\n            <installation-header></installation-header>\n            <router-outlet></router-outlet>\n        </div>`,\n    providers: [\n        // declared here to preserve service's internal state when switching between the tabs\n        InstallationService,\n    ],\n})\nexport class InstallationComponent {}\n","<i360-message #message\n              *ngIf=\"(appState.imunifyStatus|async) === AgentStatus.NOT_INSTALLED\"\n              icon=\"icon-info\"\n              [theme]=\"message.Theme.blue\">\n    {{ 'installation.cancelled.messageText' | translate }}\n</i360-message>\n\n<ng-container [ngSwitch]=\"appState.imunifyStatus|async\">\n    <div *ngSwitchCase=\"AgentStatus.INSTALLING\" role=\"heading\">{{ 'installation.log.title' | translate }}</div>\n    <div *ngSwitchCase=\"AgentStatus.STOPPED\" role=\"heading\">{{ 'installation.log.titleStopped' | translate }}</div>\n</ng-container>\n\n<i360-log-box [log]=\"installationService.accumulatedLog | async\"></i360-log-box>\n\n<div *ngIf=\"(appState.imunifyStatus|async) === AgentStatus.NOT_INSTALLED\" class=\"installation-log_cancelled-hint\">\n    <div>{{ 'installation.cancelled.hint.retry' | translate  }}</div>\n    <div>\n        <!--Without spans there would be blank space around the middle span which looks awkward-->\n        <span>{{ 'installation.cancelled.hint.support' | translate | translateCut: 0 }}</span>\n        <a class=\"i360-dashboard-link\" href=\"https://cloudlinux.zendesk.com/hc/en-us/requests/new\">{{ 'installation.cancelled.hint.support' | translate | translateCut: 1 }}</a>\n        <span>{{ 'installation.cancelled.hint.support' | translate | translateCut: 2 }}</span>\n    </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AgentStatus } from '@imunify360-api/misc';\nimport { AppState } from 'app/core/app.service';\nimport { InstallationService } from 'app/components/installation/installation.service';\n\n\n@Component({\n    selector: 'installation-log',\n    templateUrl: './installation-log.component.html',\n    styleUrls: ['./installation-log.component.scss'],\n})\nexport class InstallationLogComponent implements OnInit, OnDestroy {\n    AgentStatus = AgentStatus;\n    constructor(\n        public appState: AppState,\n        public installationService: InstallationService,\n    ) {}\n\n    ngOnInit(): void {\n        this.installationService.startWatchingLog();\n    }\n\n    ngOnDestroy(): void {\n        this.installationService.stopWatchingLog();\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { useLoader } from 'app/utils/loader/decorators';\nimport { LoaderDirective } from 'app/utils/loader/loader.directive';\nimport { InstallationService } from '../installation.service';\n\n@Component({\n    templateUrl: './installation-start.component.html',\n    styleUrls: ['./installation-start.component.scss'],\n})\nexport class InstallationStartComponent {\n    constructor(\n        private router: Router,\n        private route: ActivatedRoute,\n        private loader: LoaderDirective,\n        private installationService: InstallationService,\n    ) {}\n\n    @useLoader\n    async start() {\n        await this.installationService.start();\n        this.router.navigate(['progress'], { relativeTo: this.route });\n    }\n}\n","<mat-icon svgIcon=\"shield\" class=\"i360-shield\"></mat-icon>\n<div class=\"i360-wrapper\">\n    <div class=\"i360-start-title\">{{ 'installation.start.title' | translate }}</div>\n    <div class=\"i360-start-subtitle\">{{ 'installation.start.subtitle' | translate }}</div>\n    <mat-checkbox #eula color=\"primary\" id=\"start-checkbox\">\n        {{ 'installation.start.checkbox' | translate | translateCut: 0 }}\n        <a class=\"i360-dashboard-link\" href=\"https://www.imunify360.com/legal/eula\" target=\"_blank\">\n            {{ 'installation.start.checkbox' | translate | translateCut: 1 }}\n        </a>\n        {{ 'installation.start.checkbox' | translate | translateCut: 2 }}\n    </mat-checkbox>\n    <button i360-button [primary]=\"true\" id=\"start-button\" [disabled]=\"!eula.checked\" (click)=\"start()\">\n        {{ 'installation.start.buttonText' | translate }}\n    </button>\n    <i360-message #message\n                  [theme]=\"message.Theme.white\"\n                  icon=\"icon-info\">\n        <div class=\"i360-note\">{{ 'installation.start.note' | translate }}</div>\n        <div>{{ 'installation.start.noteDescription' | translate }}</div>\n    </i360-message>\n    <div class=\"i360-support\">\n        <a class=\"i360-dashboard-link\" href=\"https://cloudlinux.zendesk.com/hc/requests/new\" target=\"_blank\">\n            <mat-icon fontSet=\"i360-icon\" fontIcon=\"i360-icon-arrow-right\"></mat-icon>\n            {{ 'installation.start.support' | translate }}\n        </a>\n    </div>\n</div>","<i360-tabs *ngIf=\"is360 && (authState.isAdmin|async)\">\n    <a routerLink=\"slides\" routerLinkActive=\"active\" id=\"i360-slides-tab\">\n        {{ 'installation.tabs.features' | translate }}\n    </a>\n    <a routerLink=\"log\" routerLinkActive=\"active\" id=\"i360-log-tab\">\n        {{ 'installation.tabs.log' | translate }}\n    </a>\n</i360-tabs>\n\n<router-outlet></router-outlet>\n","import { Component } from '@angular/core';\nimport { Package } from '@imunify360-api/license';\nimport { AuthState } from 'app/services/auth-state';\n\n\n@Component({\n    selector: 'installation-tabs',\n    templateUrl: './installation-tabs.component.html',\n    styleUrls: ['./installation-tabs.component.scss'],\n})\nexport class InstallationTabsComponent {\n    is360 = IMUNIFY_PACKAGE === Package.imunify360;\n    constructor(public authState: AuthState) {}\n}\n","import { AuthState } from 'app/services/auth-state';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { timer, EMPTY, Subject, catchError, repeatWhen, switchMap, takeUntil } from 'rxjs';\nimport { LicenseAPI, Package } from '@imunify360-api/license';\nimport { AppState } from 'app/core/app.service';\nimport { XHR } from 'app/utils/xhr/xhr';\n\n@Component ({\n    selector: 'stopped-service',\n    template: `\n        <div class=\"i360-stopped-wrapper\">\n            <blocked-ui-message [title]=\"'stoppedService.title' | translate\">\n                <div class=\"message-text\" *ngIf=\"authState.isAdmin|async\">\n                    {{ 'stoppedService.message' | translate }}\n                    <a class=\"i360-dashboard-link\"\n                       [href]=\"is360Package ? docsI360Link : docsAvLink\"\n                       target=\"_blank\">\n                        {{ 'stoppedService.guide' | translate }}\n                    </a>\n                    {{ 'stoppedService.or' | translate }}\n                    <a class=\"i360-dashboard-link\"\n                       href=\"https://cloudlinux.zendesk.com/hc/requests/new\"\n                       target=\"_blank\">\n                        {{ 'stoppedService.support' | translate }}\n                    </a>\n                </div>\n            </blocked-ui-message>\n        </div>\n    `,\n    styleUrls: ['./stopped-service.component.scss'],\n})\nexport class StoppedServiceComponent implements OnInit, OnDestroy {\n    is360Package = IMUNIFY_PACKAGE === Package.imunify360;\n    readonly docsAvLink = 'https://docs.imunifyav.com/faq_and_known_issues' +\n        '/#imunify-agent-is-not-running-troubleshooting';\n    readonly docsI360Link = 'https://docs.imunify360.com/faq_and_known_issues/' +\n        '#_23-imunify-agent-is-not-running-troubleshooting';\n    private destroyed = new Subject<void>();\n\n    constructor(\n        public authState: AuthState,\n        public appState: AppState,\n        private xhr: XHR,\n    ) {}\n\n    ngOnInit(): void {\n        timer(0).pipe(\n            switchMap(() => this.xhr.post(LicenseAPI.version())),\n            catchError(() => EMPTY),\n            repeatWhen((notifications) => notifications.pipe(\n                switchMap(() => timer(10000)),\n            )),\n            takeUntil(this.destroyed),\n        ).subscribe();\n    }\n\n    ngOnDestroy(): void {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n}\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { InstallationGuard } from './installation.guard';\nimport { InstallationComponent } from './installation.component';\nimport { InstallationLogComponent } from './log/installation-log.component';\nimport { InstallationSliderComponent } from './slider/installation-slider.component';\nimport { InstallationStartComponent } from './start/installation-start.component';\nimport { InstallationTabsComponent } from './tabs/installation-tabs.component';\nimport { StoppedServiceComponent } from './stopped-service/stopped-service.component';\n\n\nconst routes: Routes = [{\n    path: '',\n    component: InstallationComponent,\n    canActivate: [InstallationGuard],\n    children: [{\n        path: '',\n        pathMatch: 'full',\n        component: InstallationStartComponent,\n    }, {\n        path: 'stopped-service',\n        component: StoppedServiceComponent,\n    }, {\n        path: 'progress',\n        component: InstallationTabsComponent,\n        children: [{\n            path: '',\n            pathMatch: 'full',\n            redirectTo: 'slides',\n        }, {\n            path: 'log',\n            component: InstallationLogComponent,\n        }, {\n            path: 'slides',\n            component: InstallationSliderComponent,\n        }],\n    }],\n}];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class InstallationRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { I360WarningMessageModule } from 'app/utils/warning-message/warning-message.module';\nimport { I360LoaderModule } from 'app/utils/loader/loader.module';\nimport { I360PreviewScreenshotModule } from 'app/utils/preview-screenshot/module';\nimport { I360TranslateModule } from 'app/utils/translate/translate.module';\nimport { I360ButtonModule } from 'app/utils/button/button.module';\n\nimport { I360NavigationTabsModule } from '../navigation-tabs/navigation-tabs.module';\nimport { InstallationGuard } from './installation.guard';\nimport { InstallationRoutingModule } from './installation-routing.module';\nimport { InstallationComponent } from './installation.component';\nimport { InstallationTabsComponent } from './tabs/installation-tabs.component';\nimport { InstallationStartComponent } from './start/installation-start.component';\nimport { InstallationLogComponent } from './log/installation-log.component';\nimport { InstallationSliderComponent } from './slider/installation-slider.component';\nimport { InstallationHeaderComponent } from './header/installation-header.component';\nimport { InstallationService } from './installation.service';\nimport { StoppedServiceComponent } from './stopped-service/stopped-service.component';\nimport {\n    I360BlockedUiMessageModule,\n} from 'app/utils/blocked-ui-message/blocked-ui-message.module';\nimport { I360LogBoxModule } from 'app/utils/log-box/log-box.module';\n\n@NgModule({\n    imports: [\n        InstallationRoutingModule,\n        MatCheckboxModule,\n        MatIconModule,\n        MatButtonModule,\n        CommonModule,\n        I360ButtonModule,\n        I360LoaderModule,\n        I360WarningMessageModule,\n        I360TranslateModule,\n        I360PreviewScreenshotModule,\n        I360BlockedUiMessageModule,\n        I360NavigationTabsModule,\n        I360LogBoxModule,\n    ],\n    declarations: [\n        InstallationSliderComponent,\n        StoppedServiceComponent,\n        InstallationComponent,\n        InstallationLogComponent,\n        InstallationStartComponent,\n        InstallationTabsComponent,\n        InstallationHeaderComponent,\n    ],\n    providers: [\n        InstallationGuard,\n        InstallationService,\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class InstallationModule {}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { timer, BehaviorSubject, Subscription, catchError, repeatWhen, switchMap, tap } from 'rxjs';\nimport { AgentStatus } from '@imunify360-api/misc';\nimport { AppState } from 'app/core/app.service';\nimport { InstallationBackendService } from './installation-backend.service';\nimport { LogChunk } from 'app/utils/log-box/log-box.component';\n\n\nexport const LOG_REFRESH_INTERVAL = 1000;\nexport const LOG_CHUNK_SIZE = 1024 * 1024;\n\n@Injectable()\nexport class InstallationService {\n    accumulatedLog = new BehaviorSubject<LogChunk[]>([]);\n    shownSlidesCount = 0;\n    private logCollector$ = timer(0).pipe(\n        switchMap(() => this.installationBackendService.status({\n            offset: this.offset,\n            limit: LOG_CHUNK_SIZE,\n        })),\n        tap(res => {\n            const items = res.data.items;\n            const offsetDiff = items.offset - this.offset;\n            this.offset = items.offset;\n            const chunk = items.log;\n            if (chunk) {\n                this.accumulatedLog.next(this.accumulatedLog.getValue().concat([{text: chunk}]));\n            }\n            if (offsetDiff === 0 && this.appState.imunifyStatus.value !== AgentStatus.INSTALLING) {\n                this.stopWatchingLog();\n            }\n            if (this.appState.imunifyStatus.value === AgentStatus.OK) {\n                this.router.navigate(['/'], {\n                    replaceUrl: true,\n                });\n            }\n        }),\n        catchError(() => timer(LOG_REFRESH_INTERVAL)),\n        repeatWhen(notifications => {\n            return notifications.pipe(\n                switchMap(() => timer(LOG_REFRESH_INTERVAL)),  // needed for unit tests\n            );\n        }),\n    );\n    private logCollectorSubscription = Subscription.EMPTY;\n    private offset = 0;\n\n    constructor(\n        private router: Router,\n        private appState: AppState,\n        private installationBackendService: InstallationBackendService,\n    ) {}\n\n    start() {\n        this.offset = 0;\n        this.accumulatedLog.next([]);\n        return this.installationBackendService.start();\n    }\n\n    startWatchingLog() {\n        this.logCollectorSubscription = this.logCollector$.subscribe();\n    }\n\n    stopWatchingLog() {\n        this.logCollectorSubscription.unsubscribe();\n    }\n}\n","<div class=\"i360-installation-wrapper\">\n    <div class=\"i360-installation-slider-wrapper\" *ngIf=\"((authState.isAdmin|async) && !isAv); else textForUser\">\n        <ng-template [ngTemplateOutlet]=\"activeSlide$ | async\"></ng-template>\n        <ng-template #installationSlide>\n            <div class=\"i360-slide\" [@enterAnimation]>\n                <div class=\"i360-preview-info\">\n                    <div role=\"heading\" aria-level=\"1\">\n                        {{ \"installation.dashboard.title\" | translate }}\n                    </div>\n                    <div class=\"i360-paragraph\">\n                        {{ \"installation.dashboard.text\" | translate }}\n                    </div>\n                </div>\n                <preview-screenshot screenshotName=\"dashboard-preview\"></preview-screenshot>\n            </div>\n        </ng-template>\n        <ng-template #installationSlide>\n            <div class=\"i360-slide\" [@enterAnimation]>\n                <preview-screenshot screenshotName=\"license-extension-preview\"></preview-screenshot>\n                <div class=\"i360-preview-info\">\n                    <div role=\"heading\" aria-level=\"1\">\n                        {{ \"installation.firewall.title\" | translate }}\n                    </div>\n                    <div class=\"i360-paragraph\">\n                        {{ \"installation.firewall.text\" | translate }}\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #installationSlide >\n            <div class=\"i360-slide\" [@enterAnimation]>\n                <div class=\"i360-preview-info\">\n                    <div role=\"heading\" aria-level=\"1\">\n                        {{ \"installation.malware.title\" | translate }}\n                    </div>\n                    <div class=\"i360-paragraph\">\n                        {{ \"installation.malware.text\" | translate }}\n                    </div>\n                </div>\n                <preview-screenshot screenshotName=\"malware-scanner-preview\"></preview-screenshot>\n            </div>\n        </ng-template>\n        <ng-template #installationSlide>\n            <div class=\"i360-slide\" [@enterAnimation]>\n                <preview-screenshot screenshotName=\"proactive-preview\"></preview-screenshot>\n                <div class=\"i360-preview-info\">\n                    <div role=\"heading\" aria-level=\"1\">\n                        {{ \"installation.proactive.title\" | translate }}\n                    </div>\n                    <div class=\"i360-paragraph\">\n                        {{ \"installation.proactive.text\" | translate }}\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #installationSlide>\n            <div class=\"i360-slide\" [@enterAnimation]>\n                <div class=\"i360-preview-info\">\n                    <div role=\"heading\" aria-level=\"1\">\n                        {{ \"installation.patch.title\" | translate }}\n                    </div>\n                    <div class=\"i360-just-text\">\n                        <div>\n                            <div role=\"heading\" aria-level=\"2\">{{ \"installation.patch.subtitle1\" | translate }}</div>\n                            <div class=\"i360-paragraph\">{{ \"installation.patch.text1\" | translate }}</div>\n                        </div>\n                        <div>\n                            <div role=\"heading\" aria-level=\"2\">{{ \"installation.patch.subtitle2\" | translate }}</div>\n                            <div class=\"i360-paragraph\">{{ \"installation.patch.text2\" | translate }}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #installationSlide>\n            <div class=\"i360-slide\" [@enterAnimation]>\n                <div class=\"i360-preview-info\">\n                    <div role=\"heading\" aria-level=\"1\">{{ \"installation.reputation.title\" | translate }}</div>\n                    <div class=\"i360-paragraph\">\n                        {{ \"installation.reputation.text\" | translate }}\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </div>\n    <ng-template #textForUser>\n        <div class=\"i360-paragraph\" id=\"text-for-user\">{{ \"installation.textForUser\" | translate }}</div>\n    </ng-template>\n</div>\n","import {\n    Component, OnDestroy, OnInit, QueryList, TemplateRef, ViewChildren, ViewEncapsulation,\n} from '@angular/core';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { LicenseAPI, Package } from '@imunify360-api/license';\nimport {\n    timer, EMPTY, Subject,\n    catchError, map, repeatWhen, switchMap, takeUntil, tap\n} from 'rxjs';\nimport { AuthState } from 'app/services/auth-state';\nimport { XHR } from 'app/utils/xhr/xhr';\nimport { InstallationService } from 'app/components/installation/installation.service';\nimport { AppState } from 'app/core/app.service';\n\n\nexport const REFRESH_INTERVAL = 20000;\nexport const ANIMATION_DURATION = REFRESH_INTERVAL * 0.15;\nexport const STATUS_POLLING_INTERVAL = 5000;\n\n@Component ({\n    selector: 'installation-slider',\n    templateUrl: './installation-slider.component.html',\n    styleUrls: ['./installation-slider.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations: [ // infinity css animation is more simple but it\n        // can be not synchronized with timer inside component\n        trigger(\n            'enterAnimation', [\n                transition(':enter', [\n                    style({ opacity: 0 }),\n                    animate(`${ANIMATION_DURATION}ms`, style({ opacity: 1 })),\n                    animate(\n                        `${ANIMATION_DURATION}ms ${REFRESH_INTERVAL - 2 * ANIMATION_DURATION}ms`,\n                        style({ opacity: 0 }),\n                    ),\n                ]),\n            ],\n        ),\n    ],\n})\nexport class InstallationSliderComponent implements OnInit, OnDestroy {\n    @ViewChildren('installationSlide') slides: QueryList<TemplateRef<any>>;\n    activeSlide$ = timer(0, REFRESH_INTERVAL).pipe(\n        map(() => {\n            const slideNumber = this.installationService.shownSlidesCount % this.slides.length;\n            return this.slides.toArray()[slideNumber];\n        }),\n        tap(() => {\n            this.installationService.shownSlidesCount += 1;\n        }),\n    );\n    isAv = IMUNIFY_PACKAGE === Package.imunifyAV;\n\n    private destroyed = new Subject<void>();\n\n    constructor(\n        public authState: AuthState,\n        private xhr: XHR,\n        private appState: AppState,\n        private installationService: InstallationService,\n    ) {}\n\n    ngOnInit(): void {\n        timer(0).pipe(\n            switchMap(() => this.xhr.post(LicenseAPI.version())),\n            catchError(() => EMPTY),\n            repeatWhen((notifications) => notifications.pipe(\n                switchMap(() => timer(STATUS_POLLING_INTERVAL)),\n            )),\n            takeUntil(this.destroyed),\n        ).subscribe();\n    }\n\n    ngOnDestroy(): void {\n        // needed to display the last shown slide when switching between the tabs\n        this.installationService.shownSlidesCount -= 1;\n\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n}\n","import { Component, Input } from '@angular/core';\n\n\n@Component({\n    selector: 'blocked-ui-message',\n    template: `\n        <div class=\"blocked-ui-message\">\n            <mat-icon svgIcon=\"logo-grey\" class=\"logo-grey\"></mat-icon>\n            <div role=\"heading\" aria-level=\"1\">{{ title }}</div>\n            <ng-content></ng-content>\n        </div>\n    `,\n    styleUrls: ['./blocked-ui-message.component.scss'],\n})\n\nexport class BlockedUiMessageComponent {\n    @Input() title: string = '';\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n    BlockedUiMessageComponent,\n} from './blocked-ui-message.component';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatIconModule,\n    ],\n    declarations: [BlockedUiMessageComponent],\n    exports: [\n        BlockedUiMessageComponent,\n    ],\n})\nexport class I360BlockedUiMessageModule {}\n","<div #logOutput class=\"log_output\">\n    <div class=\"inner_log_output\">\n        <!--\n        We have to use innerHTML because acronis installer returns <br/>\n        Chunks are needed for rendering optimization\n        (whole text will not be processed by innerHTML/browser each time)\n        span - inline element needed to allow text to be split in the middle of the world\n        -->\n        <span *ngFor=\"let chunk of log\" [innerHTML]=\"chunk.text\"></span>\n    </div>\n</div>\n","import { Component, ElementRef, Input, ViewChild } from '@angular/core';\n\n\nexport type LogChunk = {\n    text: string;\n};\n\n\n@Component({\n    selector: 'i360-log-box',\n    templateUrl: './log-box.component.html',\n    styleUrls: ['./log-box.component.scss'],\n})\nexport class LogBoxComponent {\n    @Input() set log(log: LogChunk[]) {\n        this._log = log;\n        setTimeout(() => this.scrollToBottom());\n    }\n    get log() {\n        return this._log;\n    }\n    @ViewChild('logOutput', {static: true}) logOutput: ElementRef<HTMLDivElement>;\n    private _log: LogChunk[];\n    scrollToBottom() {\n        this.logOutput.nativeElement.scrollTop = this.logOutput.nativeElement.scrollHeight;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { LogBoxComponent } from 'app/utils/log-box/log-box.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [LogBoxComponent],\n    exports: [LogBoxComponent],\n})\nexport class I360LogBoxModule {}\n","import { NgModule } from '@angular/core';\nimport { PreviewScreenshotComponent } from './preview-screenshot.component';\n\n\n@NgModule({\n    declarations: [PreviewScreenshotComponent],\n    exports: [\n        PreviewScreenshotComponent,\n    ],\n})\nexport class I360PreviewScreenshotModule {}\n\n","import { Component, Input } from '@angular/core';\nimport { getImagePath } from 'app/core/misc';\n\n\n@Component({\n    selector: 'preview-screenshot',\n    template: `\n        <div class=\"buy_license_screenshot\">\n            <div class=\"screenshot_toolbar\">\n                <span class=\"screenshot_button\"></span>\n                <span class=\"screenshot_button\"></span>\n                <span class=\"screenshot_button\"></span>\n            </div>\n            <img [src]=\"imagePath + '/' + screenshotName + '.png'\">\n        </div>\n    `,\n    styleUrls: ['./preview-screenshot.component.scss'],\n})\nexport class PreviewScreenshotComponent {\n    @Input() screenshotName: string = '';\n    public imagePath: string = getImagePath();\n}\n\n"],"names":["InstallationGuard","constructor","appState","authState","router","canActivate","AgentStatus","this","imunifyStatus","value","navigate","replaceUrl","i0","i1","i2","i3","factory","ɵfac","_r3","ctx_r2","handleRetryBtnClick","InstallationHeaderComponent","installationService","loader","isAv","IMUNIFY_PACKAGE","Package","_this","_asyncToGenerator","stopWatchingLog","start","url","startWatchingLog","i4","selectors","decls","vars","consts","template","rf","ctx","InstallationHeaderComponent_div_6_Template","InstallationHeaderComponent_div_8_Template","FAILED_TO_INSTALL","INSTALLING","useLoader","InstallationComponent","features","InstallationService","_r4","Theme","blue","InstallationLogComponent","ngOnInit","ngOnDestroy","InstallationLogComponent_i360_message_0_Template","InstallationLogComponent_div_4_Template","InstallationLogComponent_div_5_Template","InstallationLogComponent_div_8_Template","NOT_INSTALLED","STOPPED","accumulatedLog","InstallationStartComponent","route","relativeTo","_r0","checked","_r1","white","InstallationTabsComponent","is360","InstallationTabsComponent_i360_tabs_0_Template","isAdmin","ctx_r0","is360Package","docsI360Link","docsAvLink","routes","path","component","children","pathMatch","StoppedServiceComponent","xhr","destroyed","Subject","timer","pipe","switchMap","post","LicenseAPI","catchError","EMPTY","repeatWhen","notifications","takeUntil","subscribe","next","complete","StoppedServiceComponent_div_3_Template","redirectTo","InstallationSliderComponent","InstallationRoutingModule","RouterModule","InstallationModule","imports","MatCheckboxModule","MatIconModule","MatButtonModule","CommonModule","I360ButtonModule","I360LoaderModule","I360WarningMessageModule","I360TranslateModule","I360PreviewScreenshotModule","I360BlockedUiMessageModule","I360NavigationTabsModule","I360LogBoxModule","installationBackendService","BehaviorSubject","shownSlidesCount","logCollector$","status","offset","limit","tap","res","items","data","offsetDiff","chunk","log","getValue","concat","text","logCollectorSubscription","Subscription","unsubscribe","undefined","InstallationSliderComponent_div_1_ng_template_1_Template","InstallationSliderComponent_div_1_ng_template_3_Template","InstallationSliderComponent_div_1_ng_template_5_Template","InstallationSliderComponent_div_1_ng_template_7_Template","InstallationSliderComponent_div_1_ng_template_9_Template","InstallationSliderComponent_div_1_ng_template_11_Template","InstallationSliderComponent_div_1_ng_template_13_Template","activeSlide$","REFRESH_INTERVAL","ANIMATION_DURATION","map","slideNumber","slides","length","toArray","viewQuery","InstallationSliderComponent_div_1_Template","InstallationSliderComponent_ng_template_3_Template","trigger","transition","style","opacity","animate","BlockedUiMessageComponent","title","inputs","ngContentSelectors","_c0","chunk_r2","LogBoxComponent","_log","setTimeout","scrollToBottom","logOutput","nativeElement","scrollTop","scrollHeight","LogBoxComponent_span_3_Template","PreviewScreenshotComponent","screenshotName","imagePath","getImagePath"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}