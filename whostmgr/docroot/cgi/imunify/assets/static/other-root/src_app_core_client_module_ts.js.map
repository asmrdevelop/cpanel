{"version":3,"file":"src_app_core_client_module_ts.js","mappings":"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","sources":["./src/app/components/proactive-defense/route.ts","./src/app/components/userside/settings/settings.component.html","./src/app/components/userside/settings/settings.component.ts","./src/app/core/client-routing.module.ts","./src/app/components/userside/userside-state/userside-state.service.ts","./src/app/utils/config/user-config.ts","./src/app/core/client.module.ts","./src/app/core/user-features-status.guard.ts"],"sourcesContent":["import { Route } from '@angular/router';\nimport { FiltersService } from 'app/services/filters';\n\n// attention: src/asyncclient/ui/spa/src/app/core/client-routing.module.ts\n// handmade unwrapping\nexport const PROACTIVE_ROUTE: Route = {\n    path: 'proactive-defense',\n    loadChildren: () => import('app/components/proactive-defense/proactive-defense.module')\n        .then(m => m.ProactiveDefenseModule),\n    canActivate: [FiltersService],\n    runGuardsAndResolvers: 'always',\n};\n","<div class=\"card-container\">\n    <i360-header>\n        <mat-icon class=\"hidden-xs\">settings</mat-icon>\n        {{ 'settings.title' | translate }}\n    </i360-header>\n    <form class=\"card-container settings-container\"\n          [formGroup]=\"config.form\"\n          i360Config\n          #config=\"i360Config\">\n        <div class=\"canvas i360-visible-save-button\"\n             i360Loader>\n            <div class=\"input_group\">\n                <div class=\"group_name\" translate>settings.menu.general</div>\n                <ng-container formGroupName=\"CONTROL_PANEL\">\n                    <i360-settings-field\n                        inputTitle=\"{{ 'settings.general.genericUserNotifications.label' | translate }}\"\n                        [isLongTitle]=\"true\"\n                    >\n                        <ng-container description>\n                            <div>{{ 'settings.general.genericUserNotifications.description' | translate }}</div>\n                            <a [href]=\"moreLink\" target=\"_blank\">\n                                {{ 'settings.general.genericUserNotifications.linkLabel' | translate }}\n                            </a>\n                        </ng-container>\n                        <mat-checkbox formControlName=\"generic_user_notifications\"></mat-checkbox>\n                    </i360-settings-field>\n                </ng-container>\n            </div>\n            <div class=\"input_group\" *ngIf=\"requestsState.hasAv|async\">\n                <div class=\"group_name\" translate>settings.menu.malware</div>\n                <ng-container formGroupName=\"MALWARE_SCANNING\">\n                    <i360-settings-field\n                        *ngIf=\"restoreEnabled\"\n                        inputTitle=\"{{ 'settings.malware.general.tryToRestore.label' | translate }}\"\n                        [description]=\"['settings.malware.general.tryToRestore.descriptions.ifExists' | translate,\n                                    'settings.malware.general.tryToRestore.descriptions.otherwise' | translate]\">\n                        <mat-checkbox formControlName=\"try_restore_from_backup_first\"></mat-checkbox>\n                    </i360-settings-field>\n                    <i360-settings-field\n                            [disabled]=\"!(permissions.MS_CONFIG_DEFAULT_ACTION_EDIT | async)\"\n                            [warning]=\"(permissions.MS_CONFIG_DEFAULT_ACTION_EDIT | async) ? false : 'warning.set_by_admin'\"\n                            inputTitle=\"{{ 'settings.malware.general.defaultAction.label' | translate }}\">\n                        <mat-form-field>\n                            <mat-select formControlName=\"default_action\"\n                                        #defaultActionSelect\n                                        [placeholder]=\"'settings.malware.general.defaultAction.placeholder' | translate\">\n                                <ng-container *ngFor=\"let option of []\">\n                                    <mat-option  [value]=\"option.value\"\n                                                 *ngIf=\"option.value !== 'cleanup' || (requestsState.hasAvFull|async)\">\n                                            {{option.title | translate}}\n                                    </mat-option>\n                                </ng-container>\n                            </mat-select>\n                        </mat-form-field>\n                    </i360-settings-field>\n                </ng-container>\n                <ng-container formGroupName=\"BACKUP_RESTORE\" *ngIf=\"restoreEnabled\">\n                    <i360-settings-field inputTitle=\"{{ 'settings.malware.general.backupMaxDays' | translate }}\">\n                        <input formControlName=\"max_days_in_backup\">\n                    </i360-settings-field>\n                </ng-container>\n            </div>\n            <div class=\"tools\">\n                <button id=\"update-config\"\n                        mat-raised-button\n                        type=\"submit\">\n                    {{ 'settings.saveSettings' | translate }}\n                </button>\n            </div>\n        </div>\n    </form>\n</div>\n","import { Component } from '@angular/core';\nimport { BackupSystemsService } from 'app/services/backup-systems';\nimport { AuthState } from 'app/services/auth-state';\nimport { RequestsState } from 'app/services/requests-state';\nimport { I360Config } from 'app/utils/config/config';\nimport { PermissionsService } from 'app/services/permissions';\nimport { take } from 'rxjs';\n\n@Component({\n    selector: 'i360-settings',\n    templateUrl: './settings.component.html',\n    styleUrls: ['../../settings/settings-index.component.scss'],\n})\nexport class SettingsComponent {\n    public restoreEnabled = false;\n    readonly moreLink = 'https://blog.imunify360.com/how-to-manage-imunify-security-notifications';\n\n    constructor(\n        public backupSystemsService: BackupSystemsService,\n        public authState: AuthState,\n        public requestsState: RequestsState,\n        public permissions: PermissionsService,\n        public config: I360Config,\n    ) {\n        this.backupSystemsService.narrowStatus()\n            .pipe(take(1))\n            .subscribe(response => {\n                this.restoreEnabled = response.data.items.enabled;\n            });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ComingSoonComponent } from 'app/components/coming-soon/coming-soon.component';\nimport { SettingsComponent } from 'app/components/userside/settings/settings.component';\nimport { MaliciousComponent } from 'app/components/malware/malicious/malicious.component';\nimport { AppComponent } from 'app/components/application/app.component';\nimport { MalwareHistoryComponent } from 'app/components/malware/history/history.component';\nimport { IgnoreListComponent } from 'app/components/malware/ignore-list/ignore-list.component';\nimport { PROACTIVE_ROUTE } from 'app/components/proactive-defense/route';\nimport { FeatureName } from '@imunify360-api/features-management';\nimport { UserFeaturesStatusGuard } from './user-features-status.guard';\nimport { UnsavedConfigRouteGuard } from 'app/core/unsaved-route-guard';\nimport { FiltersService } from 'app/services/filters';\nimport { MalwareIndexComponent } from '../components/malware/malware-index.component';\nimport { MalwareOnDemandScanComponent } from 'app/components/malware/on-demand/on-demand-scan.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: AppComponent,\n        canActivate: [UserFeaturesStatusGuard],\n        canActivateChild: [UserFeaturesStatusGuard],\n        children: [\n            {\n                path: '',\n                redirectTo: 'malware',\n                pathMatch: 'full',\n            },\n            {\n                path: 'malware',\n                component: MalwareIndexComponent,\n                data: {feature: FeatureName.av},\n                canActivate: [FiltersService],\n                runGuardsAndResolvers: 'paramsOrQueryParamsChange',\n                children: [\n                    {path: '', redirectTo: 'files', pathMatch: 'full'},\n                    {\n                        path: 'files',\n                        component: MaliciousComponent,\n                        data: {feature: FeatureName.av},\n                        canActivate: [FiltersService],\n                        runGuardsAndResolvers: 'paramsOrQueryParamsChange',\n                    },\n                    {\n                        path: 'history',\n                        component: MalwareHistoryComponent,\n                        data: {feature: FeatureName.av},\n                        canActivate: [FiltersService],\n                        runGuardsAndResolvers: 'paramsOrQueryParamsChange',\n                    },\n                    {\n                        path: 'on-demand-scan',\n                        component: MalwareOnDemandScanComponent,\n                        data: {feature: FeatureName.av},\n                        canActivate: [FiltersService],\n                        runGuardsAndResolvers: 'paramsOrQueryParamsChange',\n                    },\n                    {\n                        path: 'ignore-list',\n                        component: IgnoreListComponent,\n                        data: {feature: FeatureName.av},\n                        canActivate: [FiltersService],\n                        runGuardsAndResolvers: 'paramsOrQueryParamsChange',\n                    },\n                ],\n            },\n            {\n                path: PROACTIVE_ROUTE.path,\n                loadChildren: PROACTIVE_ROUTE.loadChildren,\n                data: {feature: FeatureName.proactive},\n                canActivate: [FiltersService],\n                runGuardsAndResolvers: 'paramsOrQueryParamsChange',\n            },\n            {path: 'coming-soon', component: ComingSoonComponent},\n            {\n                path: 'settings',\n                component: SettingsComponent,\n                canDeactivate: [UnsavedConfigRouteGuard],\n            },\n        ],\n    },\n    {\n        path: 'features-disabled',\n        loadChildren: () => import('app/components/features-disabled/features-disabled.module')\n            .then(m => m.FeaturesDisabledModule),\n    },\n];\n\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n    ],\n    exports: [RouterModule],\n})\nexport class ClientRoutingModule {\n}\n","import { Injectable } from '@angular/core';\n@Injectable()\nexport class UsersideState {\n    infectedFilesCount = 23;\n}\n","import { I360Validators } from '../validator/validators';\nimport { Mode } from '@imunify360-api/proactive-defense';\nimport { getAdminEnduserMalwareCommonConfig } from './malware-config';\nimport { ConfigTypeExtractingHelper, PermissionsType } from './misc';\nimport { I360FormBuilder } from 'app/utils/validator/form-builder';\nimport { Validators } from '@angular/forms';\n\n\nexport const getSchema = (formBuilder: I360FormBuilder) => ({\n    CONTROL_PANEL: formBuilder.group({\n        generic_user_notifications: formBuilder.control(true),\n    }),\n    MALWARE_SCANNING: formBuilder.group(getAdminEnduserMalwareCommonConfig(formBuilder)),\n    BACKUP_RESTORE: formBuilder.group({\n        max_days_in_backup: formBuilder.control(0,\n            [I360Validators.integer(true), Validators.min(1)]),\n    }),\n    PROACTIVE_DEFENCE: formBuilder.group({\n        mode: formBuilder.control<Mode>(null),\n        blamer: formBuilder.control(false),\n    }),\n    ERROR_REPORTING: formBuilder.group({\n        enable: formBuilder.control(true),\n    }),\n    MALWARE_CLEANUP: formBuilder.group({\n        trim_file_instead_of_removal: formBuilder.control(true),\n        keep_original_files_days: formBuilder.control(14,\n            [I360Validators.integer(true), Validators.min(1)]),\n    }),\n    MY_IMUNIFY: formBuilder.group({\n        enable: formBuilder.control(false),\n        purchase_page_url: formBuilder.control<string>(''),\n    }),\n});\n\n\nconst a = () => (null as any as I360FormBuilder).group(getSchema(null as any));\nexport type UserConfigType = ConfigTypeExtractingHelper<typeof a> & PermissionsType;\n","import { NgModule } from '@angular/core';\nimport { ClientRoutingModule } from 'app/core/client-routing.module';\nimport { SharedModule } from 'app/core/shared.module';\nimport { UsersideState } from 'app/components/userside/userside-state/userside-state.service';\nimport { SettingsComponent } from 'app/components/userside/settings/settings.component';\nimport { PermissionsService } from 'app/services/permissions';\nimport { UserFeaturesStatusService } from 'app/services/user-features-status';\nimport { GetConfigSchema } from 'app/utils/config/config';\nimport { getSchema } from 'app/utils/config/user-config';\nimport { UserFeaturesStatusGuard } from './user-features-status.guard';\n\n@NgModule({\n    declarations: [\n        SettingsComponent,\n    ],\n    imports: [\n        SharedModule.forUser(),\n        ClientRoutingModule,\n    ],\n    providers: [\n        UsersideState,\n        UserFeaturesStatusService,\n        PermissionsService,\n        UserFeaturesStatusGuard,\n        { provide: GetConfigSchema, useValue: getSchema },\n    ],\n})\nexport class ClientModule {}\n","import { Injectable } from '@angular/core';\nimport { Observable, filter, map, take, tap } from 'rxjs';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    CanActivateChild,\n    Router,\n    RouterStateSnapshot,\n} from '@angular/router';\nimport { BoolFeature, ClientFeatures } from '@imunify360-api/features-management';\nimport { AuthState } from 'app/services/auth-state';\nimport { RequestsState } from 'app/services/requests-state';\nimport { UserFeaturesStatusService } from 'app/services/user-features-status';\n\n\n@Injectable()\nexport class UserFeaturesStatusGuard implements CanActivate, CanActivateChild {\n    constructor(\n        private authState: AuthState,\n        private requestsState: RequestsState,\n        private userFeaturesStatusService: UserFeaturesStatusService,\n        private router: Router,\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean>|boolean {\n        if (this.authState.isAdmin.value) {\n            return true;\n        }\n        return this.requestsState.hasEnabledFeatures.pipe(\n            filter(hasEnabledFeatures => hasEnabledFeatures != null),\n            take(1),\n            tap((hasEnabledFeatures: boolean) => {\n                if (!hasEnabledFeatures) {\n                    this.router.navigate(this.authState.featuresDisabledCommands);\n                }\n            }),\n        );\n    }\n\n    canActivateChild(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot,\n    ): Observable<boolean>|boolean {\n        if (this.authState.isAdmin.value) {\n            return true;\n        }\n        return this.requestsState.clientFeatures.cache.pipe(\n            take(1),\n            map((features: ClientFeatures) => {\n                const feature = route.data.feature;\n                const enabled = features[feature] !== BoolFeature.na;\n                if (!enabled) {\n                    const children = route.parent!.routeConfig!.children || [];\n                    const child = children.find((child) =>\n                        !!child.data && features[child.data.feature] !== BoolFeature.na,\n                    );\n\n                    if (child) {\n                        this.router.navigate(\n                            this.authState.getDisabledRouteCommands(child),\n                        );\n                    }\n\n                    return false;\n                }\n                return true;\n            }),\n        );\n    }\n}\n"],"names":["PROACTIVE_ROUTE","path","loadChildren","then","m","ProactiveDefenseModule","canActivate","FiltersService","runGuardsAndResolvers","i0","_c0","option_r6","value","title","SettingsComponent_div_23_ng_container_13_mat_option_1_Template","ctx_r4","requestsState","hasAvFull","SettingsComponent_div_23_i360_settings_field_4_Template","SettingsComponent_div_23_ng_container_13_Template","SettingsComponent_div_23_ng_container_14_Template","ctx_r1","restoreEnabled","permissions","MS_CONFIG_DEFAULT_ACTION_EDIT","_c1","SettingsComponent","constructor","backupSystemsService","authState","config","moreLink","this","narrowStatus","pipe","take","subscribe","response","data","items","enabled","i1","i2","i3","i4","i5","selectors","decls","vars","consts","template","rf","ctx","SettingsComponent_div_23_Template","_r0","form","hasAv","routes","component","AppComponent","UserFeaturesStatusGuard","canActivateChild","children","redirectTo","pathMatch","MalwareIndexComponent","feature","FeatureName","MaliciousComponent","MalwareHistoryComponent","MalwareOnDemandScanComponent","IgnoreListComponent","ComingSoonComponent","canDeactivate","UnsavedConfigRouteGuard","FeaturesDisabledModule","ClientRoutingModule","RouterModule","UsersideState","infectedFilesCount","factory","ɵfac","getSchema","formBuilder","CONTROL_PANEL","group","generic_user_notifications","control","MALWARE_SCANNING","getAdminEnduserMalwareCommonConfig","BACKUP_RESTORE","max_days_in_backup","I360Validators","Validators","PROACTIVE_DEFENCE","mode","blamer","ERROR_REPORTING","enable","MALWARE_CLEANUP","trim_file_instead_of_removal","keep_original_files_days","MY_IMUNIFY","purchase_page_url","ClientModule","UserFeaturesStatusService","PermissionsService","provide","GetConfigSchema","useValue","imports","SharedModule","userFeaturesStatusService","router","route","state","isAdmin","hasEnabledFeatures","filter","tap","navigate","featuresDisabledCommands","clientFeatures","cache","map","features","BoolFeature","child","parent","routeConfig","find","getDisabledRouteCommands"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}