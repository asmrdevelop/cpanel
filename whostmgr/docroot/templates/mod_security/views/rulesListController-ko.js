//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/whostmgr/docroot/templates/mod_security/views/rulesListController.js
// Generated: /usr/local/cpanel/whostmgr/docroot/templates/mod_security/views/rulesListController-ko.js
// Module:    /templates/mod_security/views/rulesListController-ko
// Locale:    ko
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"Custom":"사용자 지정","Loading …":"로드하는 중 …","The displayed rules are from the following vendor rule [numerate,_1,set,sets]: [list_and,_2]":"표시된 규칙은 다음 벤더 규칙 [numerate,_1,집합,집합](으)로부터 제공된 것입니다. [list_and,_2]","There was a problem loading the page. The system is reporting the following error: [_1].":"페이지를 로드하는 데 문제가 있었습니다. 시스템에서 다음 오류를 보고합니다. [_1].","You have not selected any vendor rule sets.":"벤더 규칙 세트를 선택하지 않았습니다.","You successfully deleted “[_1]” from the list of [asis,ModSecurity™] rules.":"[asis,ModSecurity™] 규칙 목록에서 “[_1]”을(를) 성공적으로 삭제했습니다.","You successfully deployed the staged changes and [asis,Apache] received a graceful restart request.":"스테이징된 변경 사항을 성공적으로 배포했고 [asis,Apache]이(가) 정식 다시 시작 요청을 수신했습니다.","You successfully disabled “[_1]” in the list of [asis,ModSecurity™] rules.":"[asis,ModSecurity™] 규칙 목록에서 “[_1]”을(를) 성공적으로 비활성화했습니다.","You successfully discarded the staged changes.":"스테이징된 변경 사항을 성공적으로 삭제했습니다.","You successfully enabled “[_1]” in the list of [asis,ModSecurity™] rules.":"[asis,ModSecurity™] 규칙 목록에서 “[_1]”을(를) 성공적으로 활성화했습니다.","Your user-defined rules are included below.":"아래에 사용자 정의 규칙이 포함되어 있습니다.","Your user-defined rules are not included below.":"아래에 사용자 정의 규칙이 포함되어 있지 않습니다.","[quant,_1,Vendor,Vendors]":"[quant,_1,벤더,벤더]"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
