//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/whostmgr/docroot/templates/mod_security/vendors.cmb.js
// Generated: /usr/local/cpanel/whostmgr/docroot/templates/mod_security/vendors.cmb-el.js
// Module:    /templates/mod_security/vendors.cmb-el
// Locale:    el
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"Add Vendor":"Προσθήκη προμηθευτή","An error occurred in the attempt to retrieve the vendor information.":"Παρουσιάστηκε σφάλμα κατά την προσπάθεια ανάκτησης των πληροφοριών προμηθευτή.","Manage Vendors":"Διαχείριση προμηθευτών","Select Vendor Rule Sets":"Επιλογή συνόλων κανόνων προμηθευτή","The URL must contain a protocol, domain, and file name in the correct format. (Example: [asis,https://example.com/example/meta_example.yaml])":"Η διεύθυνση URL πρέπει να περιέχει ένα πρωτόκολλο, έναν τομέα και ένα όνομα αρχείου στη σωστή μορφή. (Παράδειγμα: [asis,https://example.com/example/meta_example.yaml])","The URL must use one of the following recognized protocols: [join,~, ,_1]":"Η διεύθυνση URL πρέπει να χρησιμοποιεί ένα από τα παρακάτω αναγνωρισμένα πρωτόκολλα: [join,~, ,_1]","The file name must have the .yaml extension. (Example: [asis,meta_example.yaml])":"Το όνομα του αρχείου πρέπει να έχει την επέκταση .yaml. (Παράδειγμα: [asis,meta_example.yaml])","The file name must start with meta_, followed by the vendor name and have the .yaml extension. (Example: [asis,meta_example.yaml])":"Το όνομα του αρχείου πρέπει να αρχίζει με το meta_, ακολουθούμενο από το όνομα προμηθευτή και να έχει μια επέκταση .yaml. (Παράδειγμα: [asis,meta_example.yaml])","The file name must use the meta_ prefix, followed by the vendor name and a .yaml extension. The vendor name must only contain characters in the following set: [join,~, ,_1] (Example: [asis,meta_example.yaml])":"Το όνομα του αρχείου πρέπει να χρησιμοποιεί το πρόθημα meta_ ακολουθούμενο από το όνομα προμηθευτή και μια επέκταση .yaml. Το όνομα του προμηθευτή μπορεί να περιέχει μόνο τους χαρακτήρες του ακόλουθου συνόλου: [join,~, ,_1] (Παράδειγμα: [asis,meta_example.yaml])","The file name must use the meta_ prefix. (Example: [asis,meta_example.yaml])":"Το όνομα του αρχείου πρέπει να χρησιμοποιεί το πρόθημα meta_. (Παράδειγμα: [asis,meta_example.yaml])","The protocol should be followed by a colon and two forward slashes. (Example: [asis,https://])":"Το πρωτόκολλο θα πρέπει να ακολουθείται από μια άνω-κάτω τελεία και δύο καθέτους. (Παράδειγμα: [asis,https://])","The system could not disable the configuration files.":"Το σύστημα δεν μπόρεσε να απενεργοποιήσει τα αρχεία διαμόρφωσης.","The system could not enable the configuration files.":"Το σύστημα δεν μπόρεσε να ενεργοποιήσει τα αρχεία διαμόρφωσης.","The system could not find the specified [asis,vendor_id].":"Το σύστημα δεν μπόρεσε να εντοπίσει το καθορισμένο [asis,vendor_id].","The system experienced the following error when it attempted to install the “[_1]” vendor: [_2]":"Το σύστημα αντιμετώπισε το ακόλουθο σφάλμα κατά την προσπάθεια εγκατάστασης του προμηθευτή «[_1]»: [_2]","The system experienced the following error when it attempted to remove the vendor [_1]: [_2]":"Το σύστημα αντιμετώπισε το ακόλουθο σφάλμα κατά την προσπάθεια κατάργησης του προμηθευτή [_1]: [_2]","The system failed to pass the ID query string parameter.":"Το σύστημα δεν κατάφερε να μεταβιβάσει την παράμετρο συμβολοσειράς ερωτήματος ID.","The vendor name part of the file name must only contain characters in the following set: [join,~, ,_1] (Example: [asis,meta_example.yaml])":"Το μέρος του ονόματος αρχείου που περιλαμβάνει το όνομα του προμηθευτή μπορεί να περιέχει μόνο τους χαρακτήρες του ακόλουθου συνόλου: [join,~, ,_1] (Παράδειγμα: [asis,meta_example.yaml])","You have multiple vendors with the same [asis,vendor_id].":"Έχετε πολλούς προμηθευτές με το ίδιο [asis,vendor_id].","You have successfully added “[_1]” to the vendor configuration list.":"Προσθέσατε με επιτυχία το «[_1]» στη λίστα διαμόρφωσης προμηθευτών.","You have successfully disabled all of the configuration files.":"Απενεργοποιήσατε επιτυχώς όλα τα αρχεία διαμόρφωσης.","You have successfully disabled automatic updates for the vendor: [_1]":"Απενεργοποιήσατε με επιτυχία τις αυτόματες ενημερώσεις για τον προμηθευτή: [_1]","You have successfully disabled some of the configuration files. The files that the system failed to disable are marked below.":"Απενεργοποιήσατε επιτυχώς ορισμένα αρχεία διαμόρφωσης. Τα αρχεία τα οποία το σύστημα απέτυχε να απενεργοποιήσει επισημαίνονται παρακάτω.","You have successfully disabled the configuration file: [_1]":"Απενεργοποιήσατε επιτυχώς το αρχείο διαμόρφωσης: [_1]","You have successfully disabled the vendor: [_1]":"Απενεργοποιήσατε επιτυχώς τον προμηθευτή: [_1]","You have successfully enabled all of the configuration files.":"Ενεργοποιήσατε επιτυχώς όλα τα αρχεία διαμόρφωσης.","You have successfully enabled automatic updates for the vendor: [_1]":"Ενεργοποιήσατε με επιτυχία τις αυτόματες ενημερώσεις για τον προμηθευτή: [_1]","You have successfully enabled some of the configuration files. The files that the system failed to enable are marked below.":"Ενεργοποιήσατε επιτυχώς ορισμένα αρχεία διαμόρφωσης. Τα αρχεία τα οποία το σύστημα απέτυχε να ενεργοποιήσει επισημαίνονται παρακάτω.","You have successfully enabled the configuration file: [_1]":"Ενεργοποιήσατε επιτυχώς το αρχείο διαμόρφωσης: [_1]","You have successfully enabled the vendor: [_1]":"Ενεργοποιήσατε επιτυχώς τον προμηθευτή: [_1]","You have successfully installed the vendor: [_1]":"Εγκαταστήσατε επιτυχώς τον προμηθευτή: [_1]","You have successfully removed the vendor: [_1]":"Έχετε καταργήσει επιτυχώς τον προμηθευτή: [_1]"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
