//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/whostmgr/docroot/templates/autossl/views/select_provider_controller.js
// Generated: /usr/local/cpanel/whostmgr/docroot/templates/autossl/views/select_provider_controller-id.js
// Module:    /templates/autossl/views/select_provider_controller-id
// Locale:    id
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"This interface uses the following parameters to calculate the usability score: [list_and,_1].":"This interface uses the following parameters to calculate the usability score: [list_and,_1].","You have configured [asis,AutoSSL] to use the “[_1]” provider.":"You have configured [asis,AutoSSL] to use the “[_1]” provider.","You have created a new registration for this system with “[_1]” and configured [asis,AutoSSL] to use that provider.":"Anda telah membuat pendaftaran baru untuk sistem ini dengan “[_1]” dan [asis,AutoSSL] terkonfigurasi untuk menggunakan penyedia tersebut.","You have disabled [asis,AutoSSL]. Any users with [asis,SSL] certificates from [asis,AutoSSL] will continue to use them, but the system will not automatically renew these certificates.":"Anda telah menonaktifkan [asis,AutoSSL]. Pengguna dengan sertifikat [asis,SSL] dari [asis,AutoSSL] akan terus menggunakannya, tetapi sistem tidak akan memperbarui sertifikat ini secara otomatis.","[output,em,Unspecified]":"[output,em,Tidak Ditentukan]","[quant,_1,day,days]":"[quant,_1, hari, hari]","[quant,_1,hour,hours]":"[quant,_1, jam, jam]","[quant,_1,minute,minutes]":"[quant,_1, menit, menit]","[quant,_1,second,seconds]":"[quant,_1, detik, detik]","[quant,_1,year,years]":"[quant,_1, tahun, tahun]","unlimited":"tidak terbatas"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
