(function(){"use strict";var refreshInterval=5e3;var samples=[];var oneEl,fiveEl,fifteenEl;var increasingEl,decreasingEl,idleEl,settlingUpEl,settlingDownEl;var loadingEls;var abortController,intervalHandle;var url="";if(window.PAGE.token){url=window.PAGE.token+"/json-api/loadavg"}else{url="/json-api/loadavg"}function initLoadAverage(){oneEl=document.getElementById("lavg_one");fiveEl=document.getElementById("lavg_five");fifteenEl=document.getElementById("lavg_fifteen");increasingEl=document.getElementById("lavg_increasing");decreasingEl=document.getElementById("lavg_decreasing");idleEl=document.getElementById("lavg_idle");settlingUpEl=document.getElementById("lavg_settling_from_up");settlingDownEl=document.getElementById("lavg_settling_from_down");loadingEls=document.getElementsByClassName("lavg_loading");document.addEventListener("visibilitychange",(function handleVisibilityChange(){if(document.visibilityState==="hidden"){pauseLoadAverages()}else{startLoadAverages()}}),false);if(document.visibilityState==="visible"){startLoadAverages()}}function fetchLoadAverage(){abortController=new AbortController;return fetch(url,{method:"GET",cache:"no-cache",signal:abortController.signal}).then((function(response){if(response.ok){return response.json()}else{throw response.statusText}}))}function pauseLoadAverages(){if(intervalHandle){clearInterval(intervalHandle);intervalHandle=null}if(abortController){abortController.abort();abortController=null}}function updateAverages(current){oneEl.textContent=current.one;fiveEl.textContent=current.five;fifteenEl.textContent=current.fifteen;[increasingEl,settlingUpEl,idleEl,settlingDownEl,decreasingEl].forEach((function(el){el.classList.add("hidden")}));samples.push(current);if(samples.length===1){return}var last=samples.shift();if(current.one===0){idleEl.classList.remove("hidden")}else if(current.one>current.five||current.one>current.fifteen){if(current.one>=last.one){increasingEl.classList.remove("hidden")}else{settlingUpEl.classList.remove("hidden")}}else if(current.one<current.five||current.one<current.fifteen){if(current.one<=last.one){decreasingEl.classList.remove("hidden")}else{settlingDownEl.classList.remove("hidden")}}}function startLoadAverages(){fetchLoadAverage().then((function(data){Object.keys(data).forEach((function(key){data[key]=Number.parseFloat(data[key])}));updateAverages(data);Array.from(loadingEls).forEach((function(el){el.classList.add("hidden")}));[oneEl,fiveEl,fifteenEl].forEach((function(el){el.classList.remove("hidden")}))}));intervalHandle=setInterval((function(){fetchLoadAverage().then((function(data){updateAverages(data)}))}),refreshInterval)}function init(){initLoadAverage()}init()})();
