//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/whostmgr/docroot/templates/external_auth/manage.cmb.js
// Generated: /usr/local/cpanel/whostmgr/docroot/templates/external_auth/manage.cmb-ja.js
// Module:    /templates/external_auth/manage.cmb-ja
// Locale:    ja
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"Status ([_1])":"ステータス（[_1]）","The system could not disable the “[_1]” provider in “[_2]”. The following error occurred: [_3]":"システムが「[_2]」の「[_1]」プロバイダを無効化できませんでした。以下のエラーが発生しました：[_3]","The system could not enable the “[_1]” provider in “[_2]”. The following error occurred: [_3]":"システムが「[_2]」の「[_1]」プロバイダを有効化できませんでした。以下のエラーが発生しました：[_3]","The system could not remove the “[_1] ([_2])” authentication linkage for “[_3]” due to an error: [_4]":"エラーにより、システムが「[_3]」の「[_1]（[_2]）」認証リンケージを削除できませんでした：[_4]","The system could not update the configurations for “[_1].” The following error occurred: “[_2]”":"システムが「[_1]」の設定を更新できませんでした。以下のエラーが発生しました：「[_2]」","The system encountered an error while it tried to retrieve the providers: [_1]":"プロバイダを取得しようとした際、システムにエラーが発生しました：[_1]","The system encountered an error while it tried to retrieve the users: [_1]":"ユーザーを取得しようとした際、システムにエラーが発生しました：[_1]","The system has removed the “[_1] ([_2])” authentication linkage for “[_3].”":"システムは、「[_3]」の「[_1]（[_2]）」認証リンケージを削除しました。","The system has successfully disabled the “[_1]” provider in “[_2]”.":"システムは「[_2]」の「[_1]」プロバイダを正常に無効化しました。","The system has successfully enabled the “[_1]” provider in “[_2]”.":"システムは「[_2]」の「[_1]」プロバイダを正常に有効化しました。","The system successfully updated the configurations for “[_1].”":"システムは「[_1]」の設定を正常に更新しました。"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
