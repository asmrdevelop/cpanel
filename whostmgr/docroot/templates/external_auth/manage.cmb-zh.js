//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/whostmgr/docroot/templates/external_auth/manage.cmb.js
// Generated: /usr/local/cpanel/whostmgr/docroot/templates/external_auth/manage.cmb-zh.js
// Module:    /templates/external_auth/manage.cmb-zh
// Locale:    zh
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"Status ([_1])":"状态([_1])","The system could not disable the “[_1]” provider in “[_2]”. The following error occurred: [_3]":"系统无法禁用“[_2]”中的“[_1]”提供程序。 出现以下错误: [_3]","The system could not enable the “[_1]” provider in “[_2]”. The following error occurred: [_3]":"系统无法启用“[_2]”中的“[_1]”提供程序。 出现以下错误: [_3]","The system could not remove the “[_1] ([_2])” authentication linkage for “[_3]” due to an error: [_4]":"由于出现了以下错误，系统无法删除“[_3]”的“[_1] ([_2])”身份验证链接: [_4]","The system could not update the configurations for “[_1].” The following error occurred: “[_2]”":"The system could not update the configurations for “[_1].” The following error occurred: “[_2]”","The system encountered an error while it tried to retrieve the providers: [_1]":"系统在尝试检索提供程序时遇到错误: [_1]","The system encountered an error while it tried to retrieve the users: [_1]":"系统在尝试检索用户时遇到错误: [_1]","The system has removed the “[_1] ([_2])” authentication linkage for “[_3].”":"系统已删除“[_3]”的“[_1] ([_2])”身份验证链接。","The system has successfully disabled the “[_1]” provider in “[_2]”.":"系统已成功禁用“[_2]”中的“[_1]”提供程序。","The system has successfully enabled the “[_1]” provider in “[_2]”.":"系统已经成功启用“[_1]”中的“[_2]”提供程序。","The system successfully updated the configurations for “[_1].”":"The system successfully updated the configurations for “[_1].”"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
