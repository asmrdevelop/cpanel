//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/whostmgr/docroot/templates/killacct/index.cmb.js
// Generated: /usr/local/cpanel/whostmgr/docroot/templates/killacct/index.cmb-da.js
// Module:    /templates/killacct/index.cmb-da
// Locale:    da
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"Active":"Active","Are you sure you want to remove the account “[_1]”?":"Are you sure you want to remove the account “[_1]”?","Cancel account removals ([_1])":"Cancel account removals ([_1])","Check this box to acknowledge that you are aware that this will permanently delete the following accounts: [list_and_quoted,_1]":"Check this box to acknowledge that you are aware that this will permanently delete the following accounts: [list_and_quoted,_1]","Showing [numf,_1] - [numf,_2] of [quant,_3,item,items]":"Showing [numf,_1] - [numf,_2] of [quant,_3,item,items]","Starting removal of “[_1]”":"Starting removal of “[_1]”","Successfully removed “[_1]”":"Successfully removed “[_1]”","Suspended":"Suspenderet","The system cannot abort the deletion of the following [numerate,_1,user,users]: [list_and_quoted,_1]":"The system cannot abort the deletion of the following [numerate,_1,user,users]: [list_and_quoted,_1]","The system has added the account [_1] to the removal queue.":"The system has added the account [_1] to the removal queue.","The system will not remove the following [numerate,_1,user,users]: [list_and_quoted,_1]":"The system will not remove the following [numerate,_1,user,users]: [list_and_quoted,_1]","This will permanently remove all of the user’s data from the system.":"This will permanently remove all of the user’s data from the system.","[list_and_quoted,_1]":"[list_and_quoted,_1]"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
