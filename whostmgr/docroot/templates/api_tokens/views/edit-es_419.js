//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/whostmgr/docroot/templates/api_tokens/views/edit.js
// Generated: /usr/local/cpanel/whostmgr/docroot/templates/api_tokens/views/edit-es_419.js
// Module:    /templates/api_tokens/views/edit-es_419
// Locale:    es_419
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"The [asis,IP] address prefix must include a ‘/’ followed by the prefix length.":"The [asis,IP] address prefix must include a ‘/’ followed by the prefix length.","The system deselected the “all” privilege.":"The system deselected the “all” privilege.","This [asis,API] token will expire on [_1][comment,Bareword is a date].":"This [asis,API] token will expire on [_1][comment,Bareword is a date].","You have exceeded the limit of 100 whitelisted [asis,IP] addresses per token.":"You have exceeded the limit of 100 whitelisted [asis,IP] addresses per token.","You must specify a valid prefix length between 1 and 128.":"You must specify a valid prefix length between 1 and 128.","You successfully updated the [asis,API] token, “[_1]”.":"You successfully updated the [asis,API] token, “[_1]”."};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
