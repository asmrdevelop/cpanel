var api=angular.module("apiService",[]);api.factory("api",["$http",function($http){var token=location.pathname.match(/((?:\/cpsess\d+)?)(?:\/([^\/]+))?/)[1]||"",pack=function(response){response=response.data;if(response.metadata.result){return{type:"success",status:response.metadata.result,data:response.data}}else{return{type:"error",status:response.metadata.result,message:response.metadata.reason}}};return{get:function(apiFunction){return $http.get(token+"/json-api/"+apiFunction+"?api.version=1").then(pack)},post:function(apiFunction,data){data=$.param(data);return $http.post(token+"/json-api/"+apiFunction+"?api.version=1",data).then(pack)}}}]);api.mask=function(disabled){disabled=disabled||false;if(disabled){$("#page_loader").addClass("loading")}else{$("#page_loader").removeClass("loading")}$("#page_loader input, #page_loader button").each(function(){if(disabled&&$(this).prop("disabled")){$(this).addClass("mask_was_previously_disabled")}else if(!disabled&&$(this).hasClass("mask_was_previously_disabled")){$(this).removeClass("mask_was_previously_disabled")}else{$(this).prop("disabled",disabled)}})};api.config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push("loadingInterceptor")}]);api.factory("loadingInterceptor",["$q",function($q){return{request:function(data){api.mask(true);return data},response:function(response){return $q.when(response).then(function(data){api.mask(false);return data},function(data){api.mask(false);return $q.reject(data)})}}}]);