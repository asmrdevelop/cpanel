//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/whostmgr/docroot/templates/backup/restore.js
// Generated: /usr/local/cpanel/whostmgr/docroot/templates/backup/restore-ja.js
// Module:    /templates/backup/restore-ja
// Locale:    ja
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"Adding “[_1]” to the restoration queue …":"「[_1]」を復元キューに追加中 …","Completed":"完了","Completed with warnings":"警告ありで完了","Could not add “[_1]” to the restoration queue ([_2]).":"「[_1]」を復元キューに追加できませんでした ([_2])。","Could not clear completed restorations.":"完了した復元をクリアできませんでした。","Could not clear failed restorations.":"失敗した復元をクリアできませんでした。","Could not clear pending restorations.":"保留中の復元をクリアできませんでした。","Could not clear the restoration queue.":"復元キューをクリアできませんでした。","Could not remove “[_1]” from the finished list ([_2]).":"完了済みリストから「[_1]」を削除できませんでした ([_2])。","Could not remove “[_1]” from the restoration queue ([_2]).":"復元キューから「[_1]」を削除できませんでした ([_2])。","Could not restore account “[_1]”: [_2]":"アカウント「[_1]」を復元できませんでした: [_2]","Could not start the restoration queue.":"復元キューを開始できませんでした。","Failed":"失敗","Failed to retrieve the restore queue state.":"復元キューのステータスの再取得に失敗しました。","No log is available because the restore failed.":"復元が失敗したため、利用可能なログはありません。","Pending":"保留中","Restoring Account":"アカウントを復元中","The log file for the restore of user “[_1]” is empty.":"ユーザー「[_1]」の復元のためのログファイルが空です。","Unknown Error":"予期せぬエラー","Your browser may have blocked the request, or your connection may be unstable":"リクエストがブラウザにブロックされたか、接続が不安定な可能性があります。"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
