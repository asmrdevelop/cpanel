//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/whostmgr/docroot/templates/greylist/views/trustedHosts.js
// Generated: /usr/local/cpanel/whostmgr/docroot/templates/greylist/views/trustedHosts-i_cpanel_snowmen.js
// Module:    /templates/greylist/views/trustedHosts-i_cpanel_snowmen
// Locale:    i_cpanel_snowmen
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"Click to delete “[_1]” from the Trusted Hosts list.":"☃☃☃☃☃ ☃☃ ☃☃☃☃☃☃ ☃[_1]☃ ☃☃☃☃ ☃☃☃ ☃☃☃☃☃☃☃ ☃☃☃☃☃ ☃☃☃☃☃","Click to edit the comment for “[_1]”.":"☃☃☃☃☃ ☃☃ ☃☃☃☃ ☃☃☃ ☃☃☃☃☃☃☃ ☃☃☃ ☃[_1]☃☃","Do you want to permanently delete [quant,_1,record,records] from the Trusted Hosts list?":"☃☃ ☃☃☃ ☃☃☃☃ ☃☃ ☃☃☃☃☃☃☃☃☃☃☃ ☃☃☃☃☃☃ [quant,_1,☃☃☃☃☃☃,☃☃☃☃☃☃☃] ☃☃☃☃ ☃☃☃ ☃☃☃☃☃☃☃ ☃☃☃☃☃ ☃☃☃☃☃","Do you want to permanently delete “[_1]” from the Trusted Hosts list?":"☃☃ ☃☃☃ ☃☃☃☃ ☃☃ ☃☃☃☃☃☃☃☃☃☃☃ ☃☃☃☃☃☃ ☃[_1]☃ ☃☃☃☃ ☃☃☃ ☃☃☃☃☃☃☃ ☃☃☃☃☃ ☃☃☃☃☃","Examples:":"☃☃☃☃☃☃☃☃☃","Some records failed to update.":"☃☃☃☃ ☃☃☃☃☃☃☃ ☃☃☃☃☃☃ ☃☃ ☃☃☃☃☃☃☃","The system was unable to delete [quant,_1,record,records] from the Trusted Hosts list.":"☃☃☃ ☃☃☃☃☃☃ ☃☃☃ ☃☃☃☃☃☃ ☃☃ ☃☃☃☃☃☃ [quant,_1,☃☃☃☃☃☃,☃☃☃☃☃☃☃] ☃☃☃☃ ☃☃☃ ☃☃☃☃☃☃☃ ☃☃☃☃☃ ☃☃☃☃☃","You have deleted all records from the Trusted Hosts list.":"☃☃☃ ☃☃☃☃ ☃☃☃☃☃☃☃ ☃☃☃ ☃☃☃☃☃☃☃ ☃☃☃☃ ☃☃☃ ☃☃☃☃☃☃☃ ☃☃☃☃☃ ☃☃☃☃☃","You have successfully deleted [quant,_1,record,records] from the Trusted Hosts list.":"☃☃☃ ☃☃☃☃ ☃☃☃☃☃☃☃☃☃☃☃☃ ☃☃☃☃☃☃☃ [quant,_1,☃☃☃☃☃☃,☃☃☃☃☃☃☃] ☃☃☃☃ ☃☃☃ ☃☃☃☃☃☃☃ ☃☃☃☃☃ ☃☃☃☃☃","You have successfully deleted “[_1]” from the Trusted Hosts list.":"☃☃☃ ☃☃☃☃ ☃☃☃☃☃☃☃☃☃☃☃☃ ☃☃☃☃☃☃☃ ☃[_1]☃ ☃☃☃☃ ☃☃☃ ☃☃☃☃☃☃☃ ☃☃☃☃☃ ☃☃☃☃☃","You have successfully updated the comment for “[_1]”.":"☃☃☃ ☃☃☃☃ ☃☃☃☃☃☃☃☃☃☃☃☃ ☃☃☃☃☃☃☃ ☃☃☃ ☃☃☃☃☃☃☃ ☃☃☃ ☃[_1]☃☃"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
