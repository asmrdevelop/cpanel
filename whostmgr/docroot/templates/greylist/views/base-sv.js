//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/whostmgr/docroot/templates/greylist/views/base.js
// Generated: /usr/local/cpanel/whostmgr/docroot/templates/greylist/views/base-sv.js
// Module:    /templates/greylist/views/base-sv
// Locale:    sv
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"Add to Trusted Hosts":"Lägg till i Betrodda värdar","Some Host [asis,IP] addresses were not added to the Trusted Hosts list.":"Vissa [asis,IP]-värdadresser har inte lagts till i listan Betrodda värdar.","The status for [asis,Greylisting] has changed, possibly in another browser session.":"Statusen för [asis,Greylisting] har ändrats, eventuellt i en annan webbläsarsession.","You have successfully added [quant,_1,record,records] to the Trusted Hosts list.":"[quant,_1,post,poster] har lagts till i listan med betrodda värdar.","You have successfully added “[_1]” to the Trusted Hosts list.":"”[_1]” har lagts till i listan med betrodda värdar.","You have successfully updated the comment for “[_1]”.":"Du har uppdaterat kommentaren för ”[_1]”.","Your neighboring [asis,IP] addresses are not in the Trusted Hosts list.":"Dina intilliggande [asis,IP]-adresser är inte med på listan med betrodda värdar.","[asis,Exim] is disabled on the server which makes [asis,Greylisting] ineffective. Use the [output,url,_1,Service Manager page,_2] to enable [asis,Exim].":"[asis,Exim] är inaktiverat på servern vilket gör [asis,Greylisting] ineffektiv. Gå till sidan [output,url,_1,Tjänsthanterare,_2] för att aktivera [asis,Exim].","[asis,Greylisting] is now disabled.":"[asis,Greylisting] är nu inaktiverad.","[asis,Greylisting] is now enabled.":"[asis,Greylisting] är nu aktiverat."};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
