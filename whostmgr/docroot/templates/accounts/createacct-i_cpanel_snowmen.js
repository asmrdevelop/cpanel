//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/whostmgr/docroot/templates/accounts/createacct.js
// Generated: /usr/local/cpanel/whostmgr/docroot/templates/accounts/createacct-i_cpanel_snowmen.js
// Module:    /templates/accounts/createacct-i_cpanel_snowmen
// Locale:    i_cpanel_snowmen
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"A username cannot contain spaces.":"☃ ☃☃☃☃☃☃☃☃ ☃☃☃☃☃☃ ☃☃☃☃☃☃☃ ☃☃☃☃☃☃☃","A username must have between [numf,_1] and [quant,_2,character,characters].":"☃ ☃☃☃☃☃☃☃☃ ☃☃☃☃ ☃☃☃☃ ☃☃☃☃☃☃☃ [numf,_1] ☃☃☃ [quant,_2,☃☃☃☃☃☃☃☃☃,☃☃☃☃☃☃☃☃☃☃]☃","A username must start with a letter.":"☃ ☃☃☃☃☃☃☃☃ ☃☃☃☃ ☃☃☃☃☃ ☃☃☃☃ ☃ ☃☃☃☃☃☃☃","Domain":"☃☃☃☃☃☃","Email":"☃☃☃☃☃","Enable Spam Box":"☃☃☃☃☃☃ ☃☃☃☃ ☃☃☃","Enter a nonnegative integer.":"Enter a nonnegative integer.","Enter an integer from [numf,_1] to [numf,_2].":"Enter an integer from [numf,_1] to [numf,_2].","Enter an integer no less than [numf,_1].":"Enter an integer no less than [numf,_1].","Package Name":"☃☃☃☃☃☃☃ ☃☃☃☃","Selected Package":"☃☃☃☃☃☃☃☃ ☃☃☃☃☃☃☃","The email field must be empty or an email address.":"☃☃☃ ☃☃☃☃☃ ☃☃☃☃☃ ☃☃☃☃ ☃☃ ☃☃☃☃☃ ☃☃ ☃☃ ☃☃☃☃☃ ☃☃☃☃☃☃☃☃","The username cannot be the same as the password.":"☃☃☃ ☃☃☃☃☃☃☃☃ ☃☃☃☃☃☃ ☃☃ ☃☃☃ ☃☃☃☃ ☃☃ ☃☃☃ ☃☃☃☃☃☃☃☃☃","This is not a valid domain.":"☃☃☃☃ ☃☃ ☃☃☃ ☃ ☃☃☃☃☃ ☃☃☃☃☃☃☃","This is not a valid package name.":"☃☃☃☃ ☃☃ ☃☃☃ ☃ ☃☃☃☃☃ ☃☃☃☃☃☃☃ ☃☃☃☃☃","This is not a valid username.":"☃☃☃☃ ☃☃ ☃☃☃ ☃ ☃☃☃☃☃ ☃☃☃☃☃☃☃☃☃","Updating …":"☃☃☃☃☃☃☃☃ ☃","Username":"☃☃☃☃☃☃☃☃","You must enable [asis,Apache SpamAssassin™] to use the Spam Box feature.":"You must enable [asis,Apache SpamAssassin™] to use the Spam Box feature.","You must select a package.":"☃☃☃ ☃☃☃☃ ☃☃☃☃☃☃ ☃ ☃☃☃☃☃☃☃☃"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
