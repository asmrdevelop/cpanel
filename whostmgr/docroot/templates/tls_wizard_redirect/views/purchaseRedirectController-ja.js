//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/whostmgr/docroot/templates/tls_wizard_redirect/views/purchaseRedirectController.js
// Generated: /usr/local/cpanel/whostmgr/docroot/templates/tls_wizard_redirect/views/purchaseRedirectController-ja.js
// Module:    /templates/tls_wizard_redirect/views/purchaseRedirectController-ja
// Locale:    ja
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"Because no other providers are enabled, the system enabled the [asis,cPanel Store] provider.":"その他のプロバイダが有効になっていないため、システムが [asis,cPanel Store] プロバイダを有効化しました。","Click to continue as the “[_1]” user and purchase an [asis,SSL] certificate.":"クリックして「[_1]」ユーザーとして続行し、[asis,SSL] 証明書を購入します。","Displaying [numf,_1] to [numf,_2] out of [quant,_3,item,items]":"[quant,_3,個のアイテム,個のアイテム] のうち [numf,_1] ～ [numf,_2] を表示しています","The system changed the theme for user “[_1]” to “[_2]”, with the “[asis,Retro]” style, to support this feature.":"システムは、この機能をサポートするため、ユーザー「[_1]」のテーマを「[_2]」に「[asis,Retro]」スタイルで変更しました。","The system enabled the [numerate,_1,feature,features] [list_and_quoted,_2] for the user “[_3]” to ensure access to the “[_4]”.":"ユーザー “[_3]” の [numerate,_1,機能,機能] [list_and_quoted,_2] を有効にし、“[_4]” にアクセスできることを確認します。","The system failed to fetch the user’s account information because of the following error: [_1]":"以下のエラーにより、システムはユーザーのアカウント情報を取得することに失敗しました：[_1]","You cannot redirect to this account because it does not have theme support for this feature.":"この機能のテーマサポートがないため、このアカウントにリダイレクトできません。","[asis,SSL]/[asis,TLS] Wizard":"[asis,SSL]/[asis,TLS] Wizard"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
